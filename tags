!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
ADAM7_DX	lodepng.cpp	/^static const unsigned ADAM7_DX[7] = { 8, 8, 4, 4, 2, 2, 1 }; \/*x delta values*\/$/;"	v	typeref:typename:const unsigned[7]	file:
ADAM7_DY	lodepng.cpp	/^static const unsigned ADAM7_DY[7] = { 8, 8, 8, 4, 4, 2, 2 }; \/*y delta values*\/$/;"	v	typeref:typename:const unsigned[7]	file:
ADAM7_IX	lodepng.cpp	/^static const unsigned ADAM7_IX[7] = { 0, 4, 0, 2, 0, 1, 0 }; \/*x start values*\/$/;"	v	typeref:typename:const unsigned[7]	file:
ADAM7_IY	lodepng.cpp	/^static const unsigned ADAM7_IY[7] = { 0, 0, 4, 0, 2, 0, 1 }; \/*y start values*\/$/;"	v	typeref:typename:const unsigned[7]	file:
ALL_MODELS_H	allmodels.h	/^#define ALL_MODELS_H$/;"	d
Adam7_deinterlace	lodepng.cpp	/^static void Adam7_deinterlace(unsigned char* out, const unsigned char* in, unsigned w, unsigned /;"	f	typeref:typename:void	file:
Adam7_getpassvalues	lodepng.cpp	/^static void Adam7_getpassvalues(unsigned passw[7], unsigned passh[7], size_t filter_passstart[8]/;"	f	typeref:typename:void	file:
Adam7_interlace	lodepng.cpp	/^static void Adam7_interlace(unsigned char* out, const unsigned char* in, unsigned w, unsigned h,/;"	f	typeref:typename:void	file:
BPMLists	lodepng.cpp	/^typedef struct BPMLists$/;"	s	file:
BPMLists	lodepng.cpp	/^} BPMLists;$/;"	t	typeref:struct:BPMLists	file:
BPMNode	lodepng.cpp	/^typedef struct BPMNode$/;"	s	file:
BPMNode	lodepng.cpp	/^} BPMNode;$/;"	t	typeref:struct:BPMNode	file:
CAMERA_SPEED	constants.h	/^const float CAMERA_SPEED = 10.0f;$/;"	v	typeref:typename:const float
CERROR_BREAK	lodepng.cpp	/^#define CERROR_BREAK(/;"	d	file:
CERROR_RETURN	lodepng.cpp	/^#define CERROR_RETURN(/;"	d	file:
CERROR_RETURN_ERROR	lodepng.cpp	/^#define CERROR_RETURN_ERROR(/;"	d	file:
CERROR_TRY_RETURN	lodepng.cpp	/^#define CERROR_TRY_RETURN(/;"	d	file:
CLCL_ORDER	lodepng.cpp	/^static const unsigned CLCL_ORDER[NUM_CODE_LENGTH_CODES]$/;"	v	typeref:typename:const unsigned[]	file:
CONSTANTS_H	constants.h	/^#define CONSTANTS_H$/;"	d
CUBE_H	cube.h	/^#define CUBE_H$/;"	d
Camera	Camera.cpp	/^Camera::Camera(glm::vec3 Pos, glm::vec3 Front, glm::vec3 Up) {$/;"	f	class:Camera
Camera	Camera.h	/^class Camera {$/;"	c
ColorTree	lodepng.cpp	/^struct ColorTree$/;"	s	file:
ColorTree	lodepng.cpp	/^typedef struct ColorTree ColorTree;$/;"	t	typeref:struct:ColorTree	file:
Cube	cube.cpp	/^	Cube::Cube() {$/;"	f	class:Models::Cube
Cube	cube.h	/^	class Cube: public Model {$/;"	c	namespace:Models
CubeInternal	cube.cpp	/^	namespace CubeInternal {$/;"	n	namespace:Models	file:
CubeInternal	cube.h	/^	namespace CubeInternal {$/;"	n	namespace:Models
DEFAULT_WINDOWSIZE	lodepng.cpp	/^#define DEFAULT_WINDOWSIZE /;"	d	file:
DISTANCEBASE	lodepng.cpp	/^static const unsigned DISTANCEBASE[30]$/;"	v	typeref:typename:const unsigned[30]	file:
DISTANCEEXTRA	lodepng.cpp	/^static const unsigned DISTANCEEXTRA[30]$/;"	v	typeref:typename:const unsigned[30]	file:
EN_SZKIELET02_LIN_CAMERA_H	Camera.h	/^#define EN_SZKIELET02_LIN_CAMERA_H$/;"	d
ERROR_BREAK	lodepng.cpp	/^#define ERROR_BREAK(/;"	d	file:
FILES	Makefile	/^FILES=cube.cpp  lodepng.cpp  main_file.cpp  model.cpp  shaderprogram.cpp  sphere.cpp  teapot.cpp/;"	m
FIRST_LENGTH_CODE_INDEX	lodepng.cpp	/^#define FIRST_LENGTH_CODE_INDEX /;"	d	file:
GENTYPE_MAT	glm/detail/qualifier.hpp	/^		GENTYPE_MAT,$/;"	e	enum:glm::detail::genTypeEnum
GENTYPE_QUAT	glm/detail/qualifier.hpp	/^		GENTYPE_QUAT$/;"	e	enum:glm::detail::genTypeEnum
GENTYPE_VEC	glm/detail/qualifier.hpp	/^		GENTYPE_VEC,$/;"	e	enum:glm::detail::genTypeEnum
GLM_ALIGNED_TYPEDEF	glm/detail/setup.hpp	/^#	define GLM_ALIGNED_TYPEDEF(/;"	d
GLM_ARCH	glm/simd/platform.h	/^#		define GLM_ARCH /;"	d
GLM_ARCH	glm/simd/platform.h	/^#	define GLM_ARCH /;"	d
GLM_ARCH_ARM	glm/simd/platform.h	/^#define GLM_ARCH_ARM	/;"	d
GLM_ARCH_ARM_BIT	glm/simd/platform.h	/^#define GLM_ARCH_ARM_BIT	/;"	d
GLM_ARCH_AVX	glm/simd/platform.h	/^#define GLM_ARCH_AVX	/;"	d
GLM_ARCH_AVX2	glm/simd/platform.h	/^#define GLM_ARCH_AVX2	/;"	d
GLM_ARCH_AVX2_BIT	glm/simd/platform.h	/^#define GLM_ARCH_AVX2_BIT	/;"	d
GLM_ARCH_AVX_BIT	glm/simd/platform.h	/^#define GLM_ARCH_AVX_BIT	/;"	d
GLM_ARCH_MIPS	glm/simd/platform.h	/^#define GLM_ARCH_MIPS	/;"	d
GLM_ARCH_MIPS_BIT	glm/simd/platform.h	/^#define GLM_ARCH_MIPS_BIT	/;"	d
GLM_ARCH_NEON	glm/simd/platform.h	/^#define GLM_ARCH_NEON	/;"	d
GLM_ARCH_NEON_BIT	glm/simd/platform.h	/^#define GLM_ARCH_NEON_BIT	/;"	d
GLM_ARCH_PPC	glm/simd/platform.h	/^#define GLM_ARCH_PPC	/;"	d
GLM_ARCH_PPC_BIT	glm/simd/platform.h	/^#define GLM_ARCH_PPC_BIT	/;"	d
GLM_ARCH_SIMD_BIT	glm/simd/platform.h	/^#define GLM_ARCH_SIMD_BIT	/;"	d
GLM_ARCH_SSE	glm/simd/platform.h	/^#define GLM_ARCH_SSE	/;"	d
GLM_ARCH_SSE2	glm/simd/platform.h	/^#define GLM_ARCH_SSE2	/;"	d
GLM_ARCH_SSE2_BIT	glm/simd/platform.h	/^#define GLM_ARCH_SSE2_BIT	/;"	d
GLM_ARCH_SSE3	glm/simd/platform.h	/^#define GLM_ARCH_SSE3	/;"	d
GLM_ARCH_SSE3_BIT	glm/simd/platform.h	/^#define GLM_ARCH_SSE3_BIT	/;"	d
GLM_ARCH_SSE41	glm/simd/platform.h	/^#define GLM_ARCH_SSE41	/;"	d
GLM_ARCH_SSE41_BIT	glm/simd/platform.h	/^#define GLM_ARCH_SSE41_BIT	/;"	d
GLM_ARCH_SSE42	glm/simd/platform.h	/^#define GLM_ARCH_SSE42	/;"	d
GLM_ARCH_SSE42_BIT	glm/simd/platform.h	/^#define GLM_ARCH_SSE42_BIT	/;"	d
GLM_ARCH_SSE_BIT	glm/simd/platform.h	/^#define GLM_ARCH_SSE_BIT	/;"	d
GLM_ARCH_SSSE3	glm/simd/platform.h	/^#define GLM_ARCH_SSSE3	/;"	d
GLM_ARCH_SSSE3_BIT	glm/simd/platform.h	/^#define GLM_ARCH_SSSE3_BIT	/;"	d
GLM_ARCH_UNKNOWN	glm/simd/platform.h	/^#define GLM_ARCH_UNKNOWN	/;"	d
GLM_ARCH_X86	glm/simd/platform.h	/^#define GLM_ARCH_X86	/;"	d
GLM_ARCH_X86_BIT	glm/simd/platform.h	/^#define GLM_ARCH_X86_BIT	/;"	d
GLM_CLIP_CONTROL_LH_BIT	glm/detail/setup.hpp	/^#define GLM_CLIP_CONTROL_LH_BIT	/;"	d
GLM_CLIP_CONTROL_LH_NO	glm/detail/setup.hpp	/^#define GLM_CLIP_CONTROL_LH_NO /;"	d
GLM_CLIP_CONTROL_LH_ZO	glm/detail/setup.hpp	/^#define GLM_CLIP_CONTROL_LH_ZO /;"	d
GLM_CLIP_CONTROL_NO_BIT	glm/detail/setup.hpp	/^#define GLM_CLIP_CONTROL_NO_BIT	/;"	d
GLM_CLIP_CONTROL_RH_BIT	glm/detail/setup.hpp	/^#define GLM_CLIP_CONTROL_RH_BIT	/;"	d
GLM_CLIP_CONTROL_RH_NO	glm/detail/setup.hpp	/^#define GLM_CLIP_CONTROL_RH_NO /;"	d
GLM_CLIP_CONTROL_RH_ZO	glm/detail/setup.hpp	/^#define GLM_CLIP_CONTROL_RH_ZO /;"	d
GLM_CLIP_CONTROL_ZO_BIT	glm/detail/setup.hpp	/^#define GLM_CLIP_CONTROL_ZO_BIT	/;"	d
GLM_COMPILER	glm/simd/platform.h	/^#			define GLM_COMPILER /;"	d
GLM_COMPILER	glm/simd/platform.h	/^#		define GLM_COMPILER /;"	d
GLM_COMPILER	glm/simd/platform.h	/^#	define GLM_COMPILER /;"	d
GLM_COMPILER_CLANG	glm/simd/platform.h	/^#define GLM_COMPILER_CLANG	/;"	d
GLM_COMPILER_CLANG34	glm/simd/platform.h	/^#define GLM_COMPILER_CLANG34	/;"	d
GLM_COMPILER_CLANG35	glm/simd/platform.h	/^#define GLM_COMPILER_CLANG35	/;"	d
GLM_COMPILER_CLANG36	glm/simd/platform.h	/^#define GLM_COMPILER_CLANG36	/;"	d
GLM_COMPILER_CLANG37	glm/simd/platform.h	/^#define GLM_COMPILER_CLANG37	/;"	d
GLM_COMPILER_CLANG38	glm/simd/platform.h	/^#define GLM_COMPILER_CLANG38	/;"	d
GLM_COMPILER_CLANG39	glm/simd/platform.h	/^#define GLM_COMPILER_CLANG39	/;"	d
GLM_COMPILER_CLANG40	glm/simd/platform.h	/^#define GLM_COMPILER_CLANG40	/;"	d
GLM_COMPILER_CLANG41	glm/simd/platform.h	/^#define GLM_COMPILER_CLANG41	/;"	d
GLM_COMPILER_CLANG42	glm/simd/platform.h	/^#define GLM_COMPILER_CLANG42	/;"	d
GLM_COMPILER_CUDA	glm/simd/platform.h	/^#define GLM_COMPILER_CUDA	/;"	d
GLM_COMPILER_CUDA70	glm/simd/platform.h	/^#define GLM_COMPILER_CUDA70	/;"	d
GLM_COMPILER_CUDA75	glm/simd/platform.h	/^#define GLM_COMPILER_CUDA75	/;"	d
GLM_COMPILER_CUDA80	glm/simd/platform.h	/^#define GLM_COMPILER_CUDA80	/;"	d
GLM_COMPILER_GCC	glm/simd/platform.h	/^#define GLM_COMPILER_GCC	/;"	d
GLM_COMPILER_GCC46	glm/simd/platform.h	/^#define GLM_COMPILER_GCC46	/;"	d
GLM_COMPILER_GCC47	glm/simd/platform.h	/^#define GLM_COMPILER_GCC47	/;"	d
GLM_COMPILER_GCC48	glm/simd/platform.h	/^#define GLM_COMPILER_GCC48	/;"	d
GLM_COMPILER_GCC49	glm/simd/platform.h	/^#define GLM_COMPILER_GCC49	/;"	d
GLM_COMPILER_GCC5	glm/simd/platform.h	/^#define GLM_COMPILER_GCC5	/;"	d
GLM_COMPILER_GCC6	glm/simd/platform.h	/^#define GLM_COMPILER_GCC6	/;"	d
GLM_COMPILER_GCC7	glm/simd/platform.h	/^#define GLM_COMPILER_GCC7	/;"	d
GLM_COMPILER_GCC8	glm/simd/platform.h	/^#define GLM_COMPILER_GCC8	/;"	d
GLM_COMPILER_INTEL	glm/simd/platform.h	/^#define GLM_COMPILER_INTEL	/;"	d
GLM_COMPILER_INTEL14	glm/simd/platform.h	/^#define GLM_COMPILER_INTEL14	/;"	d
GLM_COMPILER_INTEL15	glm/simd/platform.h	/^#define GLM_COMPILER_INTEL15	/;"	d
GLM_COMPILER_INTEL16	glm/simd/platform.h	/^#define GLM_COMPILER_INTEL16	/;"	d
GLM_COMPILER_INTEL17	glm/simd/platform.h	/^#define GLM_COMPILER_INTEL17	/;"	d
GLM_COMPILER_UNKNOWN	glm/simd/platform.h	/^#define GLM_COMPILER_UNKNOWN	/;"	d
GLM_COMPILER_VC	glm/simd/platform.h	/^#define GLM_COMPILER_VC	/;"	d
GLM_COMPILER_VC12	glm/simd/platform.h	/^#define GLM_COMPILER_VC12	/;"	d
GLM_COMPILER_VC14	glm/simd/platform.h	/^#define GLM_COMPILER_VC14	/;"	d
GLM_COMPILER_VC15	glm/simd/platform.h	/^#define GLM_COMPILER_VC15	/;"	d
GLM_COMPILER_VC15_3	glm/simd/platform.h	/^#define GLM_COMPILER_VC15_3	/;"	d
GLM_COMPILER_VC15_5	glm/simd/platform.h	/^#define GLM_COMPILER_VC15_5	/;"	d
GLM_COMPILER_VC15_6	glm/simd/platform.h	/^#define GLM_COMPILER_VC15_6	/;"	d
GLM_COMPILER_VC15_7	glm/simd/platform.h	/^#define GLM_COMPILER_VC15_7	/;"	d
GLM_CONFIG_ALIGNED_GENTYPES	glm/detail/setup.hpp	/^#	define GLM_CONFIG_ALIGNED_GENTYPES /;"	d
GLM_CONFIG_ANONYMOUS_STRUCT	glm/detail/setup.hpp	/^#	define GLM_CONFIG_ANONYMOUS_STRUCT /;"	d
GLM_CONFIG_CLIP_CONTROL	glm/detail/setup.hpp	/^#		define GLM_CONFIG_CLIP_CONTROL /;"	d
GLM_CONFIG_CONSTEXP	glm/detail/setup.hpp	/^#	define GLM_CONFIG_CONSTEXP /;"	d
GLM_CONFIG_CTOR_INIT	glm/detail/setup.hpp	/^#	define GLM_CONFIG_CTOR_INIT /;"	d
GLM_CONFIG_DEFAULTED_FUNCTIONS	glm/detail/setup.hpp	/^#	define GLM_CONFIG_DEFAULTED_FUNCTIONS /;"	d
GLM_CONFIG_LENGTH_TYPE	glm/detail/setup.hpp	/^#	define GLM_CONFIG_LENGTH_TYPE	/;"	d
GLM_CONFIG_NULLPTR	glm/detail/setup.hpp	/^#	define GLM_CONFIG_NULLPTR /;"	d
GLM_CONFIG_PRECISION_BOOL	glm/detail/setup.hpp	/^#	define GLM_CONFIG_PRECISION_BOOL	/;"	d
GLM_CONFIG_PRECISION_DOUBLE	glm/detail/setup.hpp	/^#	define GLM_CONFIG_PRECISION_DOUBLE	/;"	d
GLM_CONFIG_PRECISION_FLOAT	glm/detail/setup.hpp	/^#	define GLM_CONFIG_PRECISION_FLOAT	/;"	d
GLM_CONFIG_PRECISION_INT	glm/detail/setup.hpp	/^#	define GLM_CONFIG_PRECISION_INT	/;"	d
GLM_CONFIG_PRECISION_UINT	glm/detail/setup.hpp	/^#	define GLM_CONFIG_PRECISION_UINT	/;"	d
GLM_CONFIG_SIMD	glm/detail/setup.hpp	/^#	define GLM_CONFIG_SIMD /;"	d
GLM_CONFIG_SWIZZLE	glm/detail/setup.hpp	/^#	define GLM_CONFIG_SWIZZLE /;"	d
GLM_CONFIG_UNRESTRICTED_GENTYPE	glm/detail/setup.hpp	/^#	define GLM_CONFIG_UNRESTRICTED_GENTYPE /;"	d
GLM_CONFIG_XYZW_ONLY	glm/detail/setup.hpp	/^#	define GLM_CONFIG_XYZW_ONLY /;"	d
GLM_CONSTEXPR	glm/detail/setup.hpp	/^#	define GLM_CONSTEXPR /;"	d
GLM_CONSTEXPR	glm/detail/setup.hpp	/^#	define GLM_CONSTEXPR$/;"	d
GLM_COUNTOF	glm/detail/setup.hpp	/^#	define GLM_COUNTOF(/;"	d
GLM_CTOR_INITIALISATION	glm/detail/setup.hpp	/^#define GLM_CTOR_INITIALISATION	/;"	d
GLM_CTOR_INITIALIZER_LIST	glm/detail/setup.hpp	/^#define GLM_CTOR_INITIALIZER_LIST	/;"	d
GLM_CTOR_INIT_DISABLE	glm/detail/setup.hpp	/^#define GLM_CTOR_INIT_DISABLE	/;"	d
GLM_CUDA_FUNC_DECL	glm/detail/setup.hpp	/^#	define GLM_CUDA_FUNC_DECL /;"	d
GLM_CUDA_FUNC_DECL	glm/detail/setup.hpp	/^#	define GLM_CUDA_FUNC_DECL$/;"	d
GLM_CUDA_FUNC_DEF	glm/detail/setup.hpp	/^#	define GLM_CUDA_FUNC_DEF /;"	d
GLM_CUDA_FUNC_DEF	glm/detail/setup.hpp	/^#	define GLM_CUDA_FUNC_DEF$/;"	d
GLM_CXX11_ACCESS_CONTROL_SFINAE	glm/detail/_features.hpp	/^#		define GLM_CXX11_ACCESS_CONTROL_SFINAE$/;"	d
GLM_CXX11_ALIAS_TEMPLATE	glm/detail/_features.hpp	/^#		define GLM_CXX11_ALIAS_TEMPLATE$/;"	d
GLM_CXX11_ALIGNAS	glm/detail/_features.hpp	/^#		define GLM_CXX11_ALIGNAS$/;"	d
GLM_CXX11_ATTRIBUTES	glm/detail/_features.hpp	/^#		define GLM_CXX11_ATTRIBUTES$/;"	d
GLM_CXX11_AUTO_TYPE	glm/detail/_features.hpp	/^#		define GLM_CXX11_AUTO_TYPE$/;"	d
GLM_CXX11_CONSTEXPR	glm/detail/_features.hpp	/^#		define GLM_CXX11_CONSTEXPR$/;"	d
GLM_CXX11_DECLTYPE	glm/detail/_features.hpp	/^#		define GLM_CXX11_DECLTYPE$/;"	d
GLM_CXX11_DEFAULTED_FUNCTIONS	glm/detail/_features.hpp	/^#		define GLM_CXX11_DEFAULTED_FUNCTIONS$/;"	d
GLM_CXX11_DEFAULT_FUNCTION_TEMPLATE_ARGS	glm/detail/_features.hpp	/^#		define GLM_CXX11_DEFAULT_FUNCTION_TEMPLATE_ARGS$/;"	d
GLM_CXX11_DELEGATING_CONSTRUCTORS	glm/detail/_features.hpp	/^#		define GLM_CXX11_DELEGATING_CONSTRUCTORS$/;"	d
GLM_CXX11_DELETED_FUNCTIONS	glm/detail/_features.hpp	/^#		define GLM_CXX11_DELETED_FUNCTIONS$/;"	d
GLM_CXX11_EXPLICIT_CONVERSIONS	glm/detail/_features.hpp	/^#		define GLM_CXX11_EXPLICIT_CONVERSIONS$/;"	d
GLM_CXX11_GENERALIZED_INITIALIZERS	glm/detail/_features.hpp	/^#		define GLM_CXX11_GENERALIZED_INITIALIZERS$/;"	d
GLM_CXX11_IMPLICIT_MOVES	glm/detail/_features.hpp	/^#		define GLM_CXX11_IMPLICIT_MOVES$/;"	d
GLM_CXX11_INHERITING_CONSTRUCTORS	glm/detail/_features.hpp	/^#		define GLM_CXX11_INHERITING_CONSTRUCTORS$/;"	d
GLM_CXX11_INLINE_NAMESPACES	glm/detail/_features.hpp	/^#		define GLM_CXX11_INLINE_NAMESPACES$/;"	d
GLM_CXX11_LAMBDAS	glm/detail/_features.hpp	/^#		define GLM_CXX11_LAMBDAS$/;"	d
GLM_CXX11_LOCAL_TYPE_TEMPLATE_ARGS	glm/detail/_features.hpp	/^#		define GLM_CXX11_LOCAL_TYPE_TEMPLATE_ARGS$/;"	d
GLM_CXX11_NOEXCEPT	glm/detail/_features.hpp	/^#		define GLM_CXX11_NOEXCEPT$/;"	d
GLM_CXX11_NONSTATIC_MEMBER_INIT	glm/detail/_features.hpp	/^#		define GLM_CXX11_NONSTATIC_MEMBER_INIT$/;"	d
GLM_CXX11_NULLPTR	glm/detail/_features.hpp	/^#		define GLM_CXX11_NULLPTR$/;"	d
GLM_CXX11_OVERRIDE_CONTROL	glm/detail/_features.hpp	/^#		define GLM_CXX11_OVERRIDE_CONTROL$/;"	d
GLM_CXX11_RANGE_FOR	glm/detail/_features.hpp	/^#		define GLM_CXX11_RANGE_FOR$/;"	d
GLM_CXX11_RAW_STRING_LITERALS	glm/detail/_features.hpp	/^#		define GLM_CXX11_RAW_STRING_LITERALS$/;"	d
GLM_CXX11_REFERENCE_QUALIFIED_FUNCTIONS	glm/detail/_features.hpp	/^#		define GLM_CXX11_REFERENCE_QUALIFIED_FUNCTIONS$/;"	d
GLM_CXX11_RVALUE_REFERENCES	glm/detail/_features.hpp	/^#		define GLM_CXX11_RVALUE_REFERENCES$/;"	d
GLM_CXX11_STATIC_ASSERT	glm/detail/_features.hpp	/^#		define GLM_CXX11_STATIC_ASSERT$/;"	d
GLM_CXX11_STATIC_ASSERT	glm/detail/_features.hpp	/^#	define GLM_CXX11_STATIC_ASSERT$/;"	d
GLM_CXX11_STRONG_ENUMS	glm/detail/_features.hpp	/^#		define GLM_CXX11_STRONG_ENUMS$/;"	d
GLM_CXX11_TRAILING_RETURN	glm/detail/_features.hpp	/^#		define GLM_CXX11_TRAILING_RETURN$/;"	d
GLM_CXX11_UNICODE_LITERALS	glm/detail/_features.hpp	/^#		define GLM_CXX11_UNICODE_LITERALS$/;"	d
GLM_CXX11_UNRESTRICTED_UNIONS	glm/detail/_features.hpp	/^#		define GLM_CXX11_UNRESTRICTED_UNIONS$/;"	d
GLM_CXX11_USER_LITERALS	glm/detail/_features.hpp	/^#		define GLM_CXX11_USER_LITERALS$/;"	d
GLM_CXX11_VARIADIC_TEMPLATES	glm/detail/_features.hpp	/^#		define GLM_CXX11_VARIADIC_TEMPLATES$/;"	d
GLM_CXX98_EXCEPTIONS	glm/detail/_features.hpp	/^#		define GLM_CXX98_EXCEPTIONS$/;"	d
GLM_CXX98_RTTI	glm/detail/_features.hpp	/^#		define GLM_CXX98_RTTI$/;"	d
GLM_DEFAULT	glm/detail/setup.hpp	/^#	define GLM_DEFAULT /;"	d
GLM_DEFAULT	glm/detail/setup.hpp	/^#	define GLM_DEFAULT$/;"	d
GLM_DEPRECATED	glm/detail/setup.hpp	/^#	define GLM_DEPRECATED /;"	d
GLM_DEPRECATED	glm/detail/setup.hpp	/^#	define GLM_DEPRECATED$/;"	d
GLM_DISABLE	glm/detail/setup.hpp	/^#define GLM_DISABLE	/;"	d
GLM_ENABLE	glm/detail/setup.hpp	/^#define GLM_ENABLE	/;"	d
GLM_ENABLE_EXPERIMENTAL	glm/detail/glm.cpp	/^#define GLM_ENABLE_EXPERIMENTAL$/;"	d	file:
GLM_EXPLICIT	glm/detail/setup.hpp	/^#	define GLM_EXPLICIT /;"	d
GLM_EXPLICIT	glm/detail/setup.hpp	/^#	define GLM_EXPLICIT$/;"	d
GLM_EXTRACT_WORDS	glm/ext/scalar_ulp.inl	/^#define GLM_EXTRACT_WORDS(/;"	d	file:
GLM_FORCE_ALIGNED_GENTYPES	glm/detail/setup.hpp	/^#	define GLM_FORCE_ALIGNED_GENTYPES$/;"	d
GLM_FORCE_DEFAULT_ALIGNED_GENTYPES	glm/detail/setup.hpp	/^#	define GLM_FORCE_DEFAULT_ALIGNED_GENTYPES$/;"	d
GLM_FORCE_RADIANS	main_file.cpp	/^#define GLM_FORCE_RADIANS$/;"	d	file:
GLM_FORCE_SWIZZLE	glm/detail/setup.hpp	/^#	define GLM_FORCE_SWIZZLE$/;"	d
GLM_FUNC_DECL	glm/detail/setup.hpp	/^#define GLM_FUNC_DECL /;"	d
GLM_FUNC_QUALIFIER	glm/detail/setup.hpp	/^#define GLM_FUNC_QUALIFIER /;"	d
GLM_GET_FLOAT_WORD	glm/ext/scalar_ulp.inl	/^#define GLM_GET_FLOAT_WORD(/;"	d	file:
GLM_HAS_ALIGNOF	glm/detail/setup.hpp	/^#	define GLM_HAS_ALIGNOF /;"	d
GLM_HAS_ASSIGNABLE	glm/detail/setup.hpp	/^#	define GLM_HAS_ASSIGNABLE /;"	d
GLM_HAS_BITSCAN_WINDOWS	glm/detail/setup.hpp	/^#	define GLM_HAS_BITSCAN_WINDOWS /;"	d
GLM_HAS_CONSTEXPR	glm/detail/setup.hpp	/^#	define GLM_HAS_CONSTEXPR /;"	d
GLM_HAS_CXX11_STL	glm/detail/setup.hpp	/^#		define GLM_HAS_CXX11_STL /;"	d
GLM_HAS_CXX11_STL	glm/detail/setup.hpp	/^#	define GLM_HAS_CXX11_STL /;"	d
GLM_HAS_DEFAULTED_FUNCTIONS	glm/detail/setup.hpp	/^#	define GLM_HAS_DEFAULTED_FUNCTIONS /;"	d
GLM_HAS_EXPLICIT_CONVERSION_OPERATORS	glm/detail/setup.hpp	/^#	define GLM_HAS_EXPLICIT_CONVERSION_OPERATORS /;"	d
GLM_HAS_EXTENDED_INTEGER_TYPE	glm/detail/setup.hpp	/^#	define GLM_HAS_EXTENDED_INTEGER_TYPE /;"	d
GLM_HAS_INITIALIZER_LISTS	glm/detail/setup.hpp	/^#	define GLM_HAS_INITIALIZER_LISTS /;"	d
GLM_HAS_MAKE_SIGNED	glm/detail/setup.hpp	/^#	define GLM_HAS_MAKE_SIGNED /;"	d
GLM_HAS_OPENMP	glm/detail/setup.hpp	/^#			define GLM_HAS_OPENMP /;"	d
GLM_HAS_OPENMP	glm/detail/setup.hpp	/^#		define GLM_HAS_OPENMP /;"	d
GLM_HAS_OPENMP	glm/detail/setup.hpp	/^#	define GLM_HAS_OPENMP /;"	d
GLM_HAS_RANGE_FOR	glm/detail/setup.hpp	/^#	define GLM_HAS_RANGE_FOR /;"	d
GLM_HAS_RVALUE_REFERENCES	glm/detail/setup.hpp	/^#	define GLM_HAS_RVALUE_REFERENCES /;"	d
GLM_HAS_STATIC_ASSERT	glm/detail/setup.hpp	/^#	define GLM_HAS_STATIC_ASSERT /;"	d
GLM_HAS_TEMPLATE_ALIASES	glm/detail/setup.hpp	/^#	define GLM_HAS_TEMPLATE_ALIASES /;"	d
GLM_HAS_TRIVIAL_QUERIES	glm/detail/setup.hpp	/^#define GLM_HAS_TRIVIAL_QUERIES /;"	d
GLM_HAS_UNRESTRICTED_UNIONS	glm/detail/setup.hpp	/^#	define GLM_HAS_UNRESTRICTED_UNIONS /;"	d
GLM_HIGHP	glm/detail/setup.hpp	/^#define GLM_HIGHP	/;"	d
GLM_IMPLEMENT_SCAL_MULT	glm/gtx/scalar_multiplication.hpp	/^#define GLM_IMPLEMENT_SCAL_MULT(/;"	d
GLM_INLINE	glm/detail/setup.hpp	/^#		define GLM_INLINE /;"	d
GLM_INLINE	glm/detail/setup.hpp	/^#	define GLM_INLINE /;"	d
GLM_INSERT_WORDS	glm/ext/scalar_ulp.inl	/^#define GLM_INSERT_WORDS(/;"	d	file:
GLM_LANG	glm/detail/setup.hpp	/^#		define GLM_LANG /;"	d
GLM_LANG	glm/detail/setup.hpp	/^#	define GLM_LANG /;"	d
GLM_LANG_CXX03	glm/detail/setup.hpp	/^#define GLM_LANG_CXX03	/;"	d
GLM_LANG_CXX03_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXX03_FLAG	/;"	d
GLM_LANG_CXX0X	glm/detail/setup.hpp	/^#define GLM_LANG_CXX0X	/;"	d
GLM_LANG_CXX0X_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXX0X_FLAG	/;"	d
GLM_LANG_CXX11	glm/detail/setup.hpp	/^#define GLM_LANG_CXX11	/;"	d
GLM_LANG_CXX11_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXX11_FLAG	/;"	d
GLM_LANG_CXX14	glm/detail/setup.hpp	/^#define GLM_LANG_CXX14	/;"	d
GLM_LANG_CXX14_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXX14_FLAG	/;"	d
GLM_LANG_CXX17	glm/detail/setup.hpp	/^#define GLM_LANG_CXX17	/;"	d
GLM_LANG_CXX17_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXX17_FLAG	/;"	d
GLM_LANG_CXX2A	glm/detail/setup.hpp	/^#define GLM_LANG_CXX2A	/;"	d
GLM_LANG_CXX2A_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXX2A_FLAG	/;"	d
GLM_LANG_CXX98	glm/detail/setup.hpp	/^#define GLM_LANG_CXX98	/;"	d
GLM_LANG_CXX98_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXX98_FLAG	/;"	d
GLM_LANG_CXXGNU	glm/detail/setup.hpp	/^#define GLM_LANG_CXXGNU	/;"	d
GLM_LANG_CXXGNU_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXXGNU_FLAG	/;"	d
GLM_LANG_CXXMS	glm/detail/setup.hpp	/^#define GLM_LANG_CXXMS	/;"	d
GLM_LANG_CXXMS_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXXMS_FLAG	/;"	d
GLM_LANG_EXT	glm/detail/setup.hpp	/^#	define GLM_LANG_EXT /;"	d
GLM_LANG_PLATFORM	glm/detail/setup.hpp	/^#				define GLM_LANG_PLATFORM /;"	d
GLM_LANG_PLATFORM	glm/detail/setup.hpp	/^#			define GLM_LANG_PLATFORM /;"	d
GLM_LANG_PLATFORM	glm/detail/setup.hpp	/^#		define GLM_LANG_PLATFORM /;"	d
GLM_LANG_STL11_FORCED	glm/detail/setup.hpp	/^#	define GLM_LANG_STL11_FORCED$/;"	d
GLM_LENGTH_INT	glm/detail/setup.hpp	/^#define GLM_LENGTH_INT	/;"	d
GLM_LENGTH_SIZE_T	glm/detail/setup.hpp	/^#define GLM_LENGTH_SIZE_T	/;"	d
GLM_LOWP	glm/detail/setup.hpp	/^#define GLM_LOWP	/;"	d
GLM_MEDIUMP	glm/detail/setup.hpp	/^#define GLM_MEDIUMP	/;"	d
GLM_MESSAGES	glm/detail/setup.hpp	/^#	define GLM_MESSAGES /;"	d
GLM_MESSAGE_DISPLAYED	glm/detail/setup.hpp	/^#	define GLM_MESSAGE_DISPLAYED$/;"	d
GLM_MESSAGE_EXT_INCLUDED_DISPLAYED	glm/ext.hpp	/^#	define GLM_MESSAGE_EXT_INCLUDED_DISPLAYED$/;"	d
GLM_MODEL	glm/detail/setup.hpp	/^#	define GLM_MODEL	/;"	d
GLM_MODEL_32	glm/simd/platform.h	/^#define GLM_MODEL_32	/;"	d
GLM_MODEL_64	glm/simd/platform.h	/^#define GLM_MODEL_64	/;"	d
GLM_MUTABLE	glm/detail/_swizzle_func.hpp	/^#define GLM_MUTABLE$/;"	d
GLM_NEVER_INLINE	glm/detail/setup.hpp	/^#		define GLM_NEVER_INLINE /;"	d
GLM_NEVER_INLINE	glm/detail/setup.hpp	/^#		define GLM_NEVER_INLINE$/;"	d
GLM_NEVER_INLINE	glm/detail/setup.hpp	/^#	define GLM_NEVER_INLINE$/;"	d
GLM_NULLPTR	glm/detail/setup.hpp	/^#	define GLM_NULLPTR /;"	d
GLM_PLATFORM	glm/simd/platform.h	/^#	define GLM_PLATFORM /;"	d
GLM_PLATFORM_ANDROID	glm/simd/platform.h	/^#define GLM_PLATFORM_ANDROID	/;"	d
GLM_PLATFORM_APPLE	glm/simd/platform.h	/^#define GLM_PLATFORM_APPLE	/;"	d
GLM_PLATFORM_CHROME_NACL	glm/simd/platform.h	/^#define GLM_PLATFORM_CHROME_NACL	/;"	d
GLM_PLATFORM_CYGWIN	glm/simd/platform.h	/^#define GLM_PLATFORM_CYGWIN	/;"	d
GLM_PLATFORM_LINUX	glm/simd/platform.h	/^#define GLM_PLATFORM_LINUX	/;"	d
GLM_PLATFORM_QNXNTO	glm/simd/platform.h	/^#define GLM_PLATFORM_QNXNTO	/;"	d
GLM_PLATFORM_UNIX	glm/simd/platform.h	/^#define GLM_PLATFORM_UNIX	/;"	d
GLM_PLATFORM_UNKNOWN	glm/simd/platform.h	/^#define GLM_PLATFORM_UNKNOWN	/;"	d
GLM_PLATFORM_WINCE	glm/simd/platform.h	/^#define GLM_PLATFORM_WINCE	/;"	d
GLM_PLATFORM_WINDOWS	glm/simd/platform.h	/^#define GLM_PLATFORM_WINDOWS	/;"	d
GLM_SETUP_INCLUDED	glm/detail/setup.hpp	/^#define GLM_SETUP_INCLUDED	/;"	d
GLM_SET_FLOAT_WORD	glm/ext/scalar_ulp.inl	/^#define GLM_SET_FLOAT_WORD(/;"	d	file:
GLM_SILENT_WARNINGS	glm/detail/setup.hpp	/^#	define GLM_SILENT_WARNINGS /;"	d
GLM_STATIC_ASSERT	glm/detail/setup.hpp	/^#	define GLM_STATIC_ASSERT(/;"	d
GLM_STR	glm/detail/setup.hpp	/^#		define GLM_STR(/;"	d
GLM_STR_HELPER	glm/detail/setup.hpp	/^#		define GLM_STR_HELPER(/;"	d
GLM_SWIZZLE2_2_MEMBERS	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE2_2_MEMBERS(/;"	d
GLM_SWIZZLE2_3_MEMBERS	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE2_3_MEMBERS(/;"	d
GLM_SWIZZLE2_4_MEMBERS	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE2_4_MEMBERS(/;"	d
GLM_SWIZZLE3_2_MEMBERS	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE3_2_MEMBERS(/;"	d
GLM_SWIZZLE3_3_MEMBERS	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE3_3_MEMBERS(/;"	d
GLM_SWIZZLE3_4_MEMBERS	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE3_4_MEMBERS(/;"	d
GLM_SWIZZLE4_2_MEMBERS	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE4_2_MEMBERS(/;"	d
GLM_SWIZZLE4_3_MEMBERS	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE4_3_MEMBERS(/;"	d
GLM_SWIZZLE4_4_MEMBERS	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE4_4_MEMBERS(/;"	d
GLM_SWIZZLE_DISABLED	glm/detail/setup.hpp	/^#define GLM_SWIZZLE_DISABLED	/;"	d
GLM_SWIZZLE_FUNCTION	glm/detail/setup.hpp	/^#define GLM_SWIZZLE_FUNCTION	/;"	d
GLM_SWIZZLE_FUNCTION_1_ARGS	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_FUNCTION_1_ARGS(/;"	d
GLM_SWIZZLE_FUNCTION_2_ARGS	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_FUNCTION_2_ARGS(/;"	d
GLM_SWIZZLE_FUNCTION_2_ARGS_SCALAR	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_FUNCTION_2_ARGS_SCALAR(/;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC2_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF2_FROM_VEC2_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC3_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF2_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC4_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF2_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF3_FROM_VEC3_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF3_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF3_FROM_VEC4_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF3_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF4_FROM_VEC4_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF4_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC2	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC2(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC3	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC3(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC3_COMP	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC3_COMP(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC4	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC4(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC4_COMP	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC4_COMP(/;"	d
GLM_SWIZZLE_GEN_VEC2_ENTRY	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_ENTRY(/;"	d
GLM_SWIZZLE_GEN_VEC2_ENTRY_DEF	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_ENTRY_DEF(/;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC2_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_FROM_VEC2_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC3_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC4_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC3_ENTRY	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_ENTRY(/;"	d
GLM_SWIZZLE_GEN_VEC3_ENTRY_DEF	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_ENTRY_DEF(/;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC2_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_FROM_VEC2_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC3_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC4_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC4_ENTRY	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_ENTRY(/;"	d
GLM_SWIZZLE_GEN_VEC4_ENTRY_DEF	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_ENTRY_DEF(/;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC2_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_FROM_VEC2_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC3_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC4_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC2	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC2(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC2_COMP	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC2_COMP(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC3	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC3(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC3_COMP	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC3_COMP(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC4	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC4(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC4_COMP	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC4_COMP(/;"	d
GLM_SWIZZLE_OPERATOR	glm/detail/setup.hpp	/^#define GLM_SWIZZLE_OPERATOR	/;"	d
GLM_SWIZZLE_SCALAR_BINARY_OPERATOR_IMPLEMENTATION	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_SCALAR_BINARY_OPERATOR_IMPLEMENTATION(/;"	d
GLM_SWIZZLE_TEMPLATE1	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_TEMPLATE1 /;"	d
GLM_SWIZZLE_TEMPLATE2	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_TEMPLATE2 /;"	d
GLM_SWIZZLE_TYPE1	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_TYPE1 /;"	d
GLM_SWIZZLE_TYPE2	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_TYPE2 /;"	d
GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION	glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION(/;"	d
GLM_VERSION	glm/detail/setup.hpp	/^#define GLM_VERSION	/;"	d
GLM_VERSION_MAJOR	glm/detail/setup.hpp	/^#define GLM_VERSION_MAJOR	/;"	d
GLM_VERSION_MESSAGE	glm/detail/setup.hpp	/^#define GLM_VERSION_MESSAGE	/;"	d
GLM_VERSION_MINOR	glm/detail/setup.hpp	/^#define GLM_VERSION_MINOR	/;"	d
GLM_VERSION_PATCH	glm/detail/setup.hpp	/^#define GLM_VERSION_PATCH	/;"	d
GLM_VERSION_REVISION	glm/detail/setup.hpp	/^#define GLM_VERSION_REVISION	/;"	d
HASH_BIT_MASK	lodepng.cpp	/^static const unsigned HASH_BIT_MASK = 65535; \/*HASH_NUM_VALUES - 1, but C90 does not like that /;"	v	typeref:typename:const unsigned	file:
HASH_NUM_VALUES	lodepng.cpp	/^static const unsigned HASH_NUM_VALUES = 65536;$/;"	v	typeref:typename:const unsigned	file:
HEADERS	Makefile	/^HEADERS=allmodels.h  constants.h  cube.h  lodepng.h  model.h  shaderprogram.h  sphere.h  teapot./;"	m
Hash	lodepng.cpp	/^typedef struct Hash$/;"	s	file:
Hash	lodepng.cpp	/^} Hash;$/;"	t	typeref:struct:Hash	file:
HuffmanTree	lodepng.cpp	/^typedef struct HuffmanTree$/;"	s	file:
HuffmanTree	lodepng.cpp	/^} HuffmanTree;$/;"	t	typeref:struct:HuffmanTree	file:
HuffmanTree_cleanup	lodepng.cpp	/^static void HuffmanTree_cleanup(HuffmanTree* tree)$/;"	f	typeref:typename:void	file:
HuffmanTree_getCode	lodepng.cpp	/^static unsigned HuffmanTree_getCode(const HuffmanTree* tree, unsigned index)$/;"	f	typeref:typename:unsigned	file:
HuffmanTree_getLength	lodepng.cpp	/^static unsigned HuffmanTree_getLength(const HuffmanTree* tree, unsigned index)$/;"	f	typeref:typename:unsigned	file:
HuffmanTree_init	lodepng.cpp	/^static void HuffmanTree_init(HuffmanTree* tree)$/;"	f	typeref:typename:void	file:
HuffmanTree_make2DTree	lodepng.cpp	/^static unsigned HuffmanTree_make2DTree(HuffmanTree* tree)$/;"	f	typeref:typename:unsigned	file:
HuffmanTree_makeFromFrequencies	lodepng.cpp	/^static unsigned HuffmanTree_makeFromFrequencies(HuffmanTree* tree, const unsigned* frequencies,$/;"	f	typeref:typename:unsigned	file:
HuffmanTree_makeFromLengths	lodepng.cpp	/^static unsigned HuffmanTree_makeFromLengths(HuffmanTree* tree, const unsigned* bitlen,$/;"	f	typeref:typename:unsigned	file:
HuffmanTree_makeFromLengths2	lodepng.cpp	/^static unsigned HuffmanTree_makeFromLengths2(HuffmanTree* tree)$/;"	f	typeref:typename:unsigned	file:
LAST_LENGTH_CODE_INDEX	lodepng.cpp	/^#define LAST_LENGTH_CODE_INDEX /;"	d	file:
LCT_GREY	lodepng.h	/^  LCT_GREY = 0, \/*greyscale: 1,2,4,8,16 bit*\/$/;"	e	enum:LodePNGColorType
LCT_GREY_ALPHA	lodepng.h	/^  LCT_GREY_ALPHA = 4, \/*greyscale with alpha: 8,16 bit*\/$/;"	e	enum:LodePNGColorType
LCT_PALETTE	lodepng.h	/^  LCT_PALETTE = 3, \/*palette: 1,2,4,8 bit*\/$/;"	e	enum:LodePNGColorType
LCT_RGB	lodepng.h	/^  LCT_RGB = 2, \/*RGB: 8,16 bit*\/$/;"	e	enum:LodePNGColorType
LCT_RGBA	lodepng.h	/^  LCT_RGBA = 6 \/*RGB with alpha: 8,16 bit*\/$/;"	e	enum:LodePNGColorType
LENGTHBASE	lodepng.cpp	/^static const unsigned LENGTHBASE[29]$/;"	v	typeref:typename:const unsigned[29]	file:
LENGTHEXTRA	lodepng.cpp	/^static const unsigned LENGTHEXTRA[29]$/;"	v	typeref:typename:const unsigned[29]	file:
LFS_BRUTE_FORCE	lodepng.h	/^  LFS_BRUTE_FORCE,$/;"	e	enum:LodePNGFilterStrategy
LFS_ENTROPY	lodepng.h	/^  LFS_ENTROPY,$/;"	e	enum:LodePNGFilterStrategy
LFS_MINSUM	lodepng.h	/^  LFS_MINSUM,$/;"	e	enum:LodePNGFilterStrategy
LFS_PREDEFINED	lodepng.h	/^  LFS_PREDEFINED$/;"	e	enum:LodePNGFilterStrategy
LFS_ZERO	lodepng.h	/^  LFS_ZERO,$/;"	e	enum:LodePNGFilterStrategy
LIBS	Makefile	/^LIBS=-lGL -lglfw -lGLEW$/;"	m
LODEPNG_COMPILE_ALLOCATORS	lodepng.h	/^#define LODEPNG_COMPILE_ALLOCATORS$/;"	d
LODEPNG_COMPILE_ANCILLARY_CHUNKS	lodepng.h	/^#define LODEPNG_COMPILE_ANCILLARY_CHUNKS$/;"	d
LODEPNG_COMPILE_CPP	lodepng.h	/^#define LODEPNG_COMPILE_CPP$/;"	d
LODEPNG_COMPILE_DECODER	lodepng.h	/^#define LODEPNG_COMPILE_DECODER$/;"	d
LODEPNG_COMPILE_DISK	lodepng.h	/^#define LODEPNG_COMPILE_DISK$/;"	d
LODEPNG_COMPILE_ENCODER	lodepng.h	/^#define LODEPNG_COMPILE_ENCODER$/;"	d
LODEPNG_COMPILE_ERROR_TEXT	lodepng.h	/^#define LODEPNG_COMPILE_ERROR_TEXT$/;"	d
LODEPNG_COMPILE_PNG	lodepng.h	/^#define LODEPNG_COMPILE_PNG$/;"	d
LODEPNG_COMPILE_ZLIB	lodepng.h	/^#define LODEPNG_COMPILE_ZLIB$/;"	d
LODEPNG_H	lodepng.h	/^#define LODEPNG_H$/;"	d
LODEPNG_VERSION_STRING	lodepng.cpp	/^const char* LODEPNG_VERSION_STRING = "20160124";$/;"	v	typeref:typename:const char *
LabelFalse	glm/gtx/string_cast.inl	/^	static const char* LabelFalse = "false";$/;"	v	namespace:glm::detail	typeref:typename:const char *	file:
LabelTrue	glm/gtx/string_cast.inl	/^	static const char* LabelTrue = "true";$/;"	v	namespace:glm::detail	typeref:typename:const char *	file:
LodePNGColorMode	lodepng.h	/^typedef struct LodePNGColorMode$/;"	s
LodePNGColorMode	lodepng.h	/^} LodePNGColorMode;$/;"	t	typeref:struct:LodePNGColorMode
LodePNGColorProfile	lodepng.h	/^typedef struct LodePNGColorProfile$/;"	s
LodePNGColorProfile	lodepng.h	/^} LodePNGColorProfile;$/;"	t	typeref:struct:LodePNGColorProfile
LodePNGColorType	lodepng.h	/^typedef enum LodePNGColorType$/;"	g
LodePNGColorType	lodepng.h	/^} LodePNGColorType;$/;"	t	typeref:enum:LodePNGColorType
LodePNGCompressSettings	lodepng.h	/^struct LodePNGCompressSettings \/*deflate = compress*\/$/;"	s
LodePNGCompressSettings	lodepng.h	/^typedef struct LodePNGCompressSettings LodePNGCompressSettings;$/;"	t	typeref:struct:LodePNGCompressSettings
LodePNGDecoderSettings	lodepng.h	/^typedef struct LodePNGDecoderSettings$/;"	s
LodePNGDecoderSettings	lodepng.h	/^} LodePNGDecoderSettings;$/;"	t	typeref:struct:LodePNGDecoderSettings
LodePNGDecompressSettings	lodepng.h	/^struct LodePNGDecompressSettings$/;"	s
LodePNGDecompressSettings	lodepng.h	/^typedef struct LodePNGDecompressSettings LodePNGDecompressSettings;$/;"	t	typeref:struct:LodePNGDecompressSettings
LodePNGEncoderSettings	lodepng.h	/^typedef struct LodePNGEncoderSettings$/;"	s
LodePNGEncoderSettings	lodepng.h	/^} LodePNGEncoderSettings;$/;"	t	typeref:struct:LodePNGEncoderSettings
LodePNGFilterStrategy	lodepng.h	/^typedef enum LodePNGFilterStrategy$/;"	g
LodePNGFilterStrategy	lodepng.h	/^} LodePNGFilterStrategy;$/;"	t	typeref:enum:LodePNGFilterStrategy
LodePNGIText_cleanup	lodepng.cpp	/^static void LodePNGIText_cleanup(LodePNGInfo* info)$/;"	f	typeref:typename:void	file:
LodePNGIText_copy	lodepng.cpp	/^static unsigned LodePNGIText_copy(LodePNGInfo* dest, const LodePNGInfo* source)$/;"	f	typeref:typename:unsigned	file:
LodePNGIText_init	lodepng.cpp	/^static void LodePNGIText_init(LodePNGInfo* info)$/;"	f	typeref:typename:void	file:
LodePNGInfo	lodepng.h	/^typedef struct LodePNGInfo$/;"	s
LodePNGInfo	lodepng.h	/^} LodePNGInfo;$/;"	t	typeref:struct:LodePNGInfo
LodePNGState	lodepng.h	/^typedef struct LodePNGState$/;"	s
LodePNGState	lodepng.h	/^} LodePNGState;$/;"	t	typeref:struct:LodePNGState
LodePNGText_cleanup	lodepng.cpp	/^static void LodePNGText_cleanup(LodePNGInfo* info)$/;"	f	typeref:typename:void	file:
LodePNGText_copy	lodepng.cpp	/^static unsigned LodePNGText_copy(LodePNGInfo* dest, const LodePNGInfo* source)$/;"	f	typeref:typename:unsigned	file:
LodePNGText_init	lodepng.cpp	/^static void LodePNGText_init(LodePNGInfo* info)$/;"	f	typeref:typename:void	file:
LodePNGTime	lodepng.h	/^typedef struct LodePNGTime$/;"	s
LodePNGTime	lodepng.h	/^} LodePNGTime;$/;"	t	typeref:struct:LodePNGTime
LodePNGUnknownChunks_cleanup	lodepng.cpp	/^static void LodePNGUnknownChunks_cleanup(LodePNGInfo* info)$/;"	f	typeref:typename:void	file:
LodePNGUnknownChunks_copy	lodepng.cpp	/^static unsigned LodePNGUnknownChunks_copy(LodePNGInfo* dest, const LodePNGInfo* src)$/;"	f	typeref:typename:unsigned	file:
LodePNGUnknownChunks_init	lodepng.cpp	/^static void LodePNGUnknownChunks_init(LodePNGInfo* info)$/;"	f	typeref:typename:void	file:
MAX_SUPPORTED_DEFLATE_LENGTH	lodepng.cpp	/^static const size_t MAX_SUPPORTED_DEFLATE_LENGTH = 258;$/;"	v	typeref:typename:const size_t	file:
MODEL_H	model.h	/^#define MODEL_H$/;"	d
MOUSE_SPEED	constants.h	/^const float MOUSE_SPEED = 0.4f;$/;"	v	typeref:typename:const float
MUZEUM_WALLS_H	walls.h	/^#define MUZEUM_WALLS_H$/;"	d
Model	model.h	/^	class Model {$/;"	c	namespace:Models
Models	cube.cpp	/^namespace Models {$/;"	n	file:
Models	cube.h	/^namespace Models {$/;"	n
Models	model.cpp	/^namespace Models {$/;"	n	file:
Models	model.h	/^namespace Models {$/;"	n
Models	sphere.cpp	/^namespace Models {$/;"	n	file:
Models	sphere.h	/^namespace Models {$/;"	n
Models	teapot.cpp	/^namespace Models {$/;"	n	file:
Models	teapot.h	/^namespace Models {$/;"	n
Models	torus.cpp	/^namespace Models {$/;"	n	file:
Models	torus.h	/^namespace Models {$/;"	n
Models	walls.cpp	/^namespace Models {$/;"	n	file:
Models	walls.h	/^namespace Models {$/;"	n
NUM_CODE_LENGTH_CODES	lodepng.cpp	/^#define NUM_CODE_LENGTH_CODES /;"	d	file:
NUM_DEFLATE_CODE_SYMBOLS	lodepng.cpp	/^#define NUM_DEFLATE_CODE_SYMBOLS /;"	d	file:
NUM_DISTANCE_SYMBOLS	lodepng.cpp	/^#define NUM_DISTANCE_SYMBOLS /;"	d	file:
PI	constants.h	/^const float PI = 3.141592653589793f;$/;"	v	typeref:typename:const float
READBIT	lodepng.cpp	/^#define READBIT(/;"	d	file:
SHADERPROGRAM_H	shaderprogram.h	/^#define SHADERPROGRAM_H$/;"	d
SPHERE_H	sphere.h	/^#define SPHERE_H$/;"	d
ShaderProgram	shaderprogram.cpp	/^ShaderProgram::ShaderProgram(const char* vertexShaderFile,const char* geometryShaderFile,const c/;"	f	class:ShaderProgram
ShaderProgram	shaderprogram.h	/^class ShaderProgram {$/;"	c
Sphere	sphere.cpp	/^	Sphere::Sphere() {$/;"	f	class:Models::Sphere
Sphere	sphere.cpp	/^	Sphere::Sphere(float r,float divs1,float divs2) {$/;"	f	class:Models::Sphere
Sphere	sphere.h	/^	class Sphere: public Model {$/;"	c	namespace:Models
State	lodepng.cpp	/^State::State()$/;"	f	class:lodepng::State
State	lodepng.cpp	/^State::State(const State& other)$/;"	f	class:lodepng::State
State	lodepng.h	/^class State : public LodePNGState$/;"	c	namespace:lodepng
Stub	glm/detail/_swizzle.hpp	/^		struct Stub {};$/;"	s	struct:glm::detail::_swizzle_base2
TEAPOT_H	teapot.h	/^#define TEAPOT_H$/;"	d
TORUS_H	torus.h	/^#define TORUS_H$/;"	d
Teapot	teapot.cpp	/^	Teapot::Teapot() {$/;"	f	class:Models::Teapot
Teapot	teapot.h	/^	class Teapot: public Model {$/;"	c	namespace:Models
TeapotInternal	teapot.cpp	/^	namespace TeapotInternal {$/;"	n	namespace:Models	file:
TeapotInternal	teapot.h	/^	namespace TeapotInternal {$/;"	n	namespace:Models
Torus	torus.cpp	/^	Torus::Torus() {$/;"	f	class:Models::Torus
Torus	torus.cpp	/^	Torus::Torus(float R,float r,float mainDivs,float tubeDivs) {$/;"	f	class:Models::Torus
Torus	torus.h	/^	class Torus: public Model {$/;"	c	namespace:Models
Walls	walls.cpp	/^    Walls::Walls() {$/;"	f	class:Models::Walls
Walls	walls.h	/^    class Walls: public Model {$/;"	c	namespace:Models
WallsInternal	walls.cpp	/^    namespace WallsInternal {$/;"	n	namespace:Models	file:
WallsInternal	walls.h	/^    namespace WallsInternal {$/;"	n	namespace:Models
YCoCg2rgb	glm/gtx/color_space_YCoCg.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> YCoCg2rgb$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
YCoCgR2rgb	glm/gtx/color_space_YCoCg.inl	/^		static GLM_FUNC_QUALIFIER vec<3, T, Q> YCoCgR2rgb$/;"	f	class:glm::compute_YCoCgR	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>	file:
YCoCgR2rgb	glm/gtx/color_space_YCoCg.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> YCoCgR2rgb$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
__anon0405017b010a	glm/detail/func_common.inl	/^		{$/;"	u	function:glm::floatBitsToInt	file:
__anon0405017b020a	glm/detail/func_common.inl	/^		{$/;"	u	function:glm::floatBitsToUint	file:
__anon0405017b030a	glm/detail/func_common.inl	/^		{$/;"	u	function:glm::intBitsToFloat	file:
__anon0405017b040a	glm/detail/func_common.inl	/^		{$/;"	u	function:glm::uintBitsToFloat	file:
__anon0beeb0fc010a	glm/detail/type_vec1.hpp	/^			{$/;"	u	struct:glm::vec
__anon0beeb0fc020a	glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	u	struct:glm::vec
__anon0c00c97d010a	glm/detail/type_vec2.hpp	/^			{$/;"	u	struct:glm::vec
__anon0c00c97d0208	glm/detail/type_vec2.hpp	/^				struct{ T x, y; };$/;"	s	union:glm::vec::__anon0c00c97d010a
__anon0c00c97d0308	glm/detail/type_vec2.hpp	/^				struct{ T r, g; };$/;"	s	union:glm::vec::__anon0c00c97d010a
__anon0c00c97d0408	glm/detail/type_vec2.hpp	/^				struct{ T s, t; };$/;"	s	union:glm::vec::__anon0c00c97d010a
__anon0c00c97d050a	glm/detail/type_vec2.hpp	/^			union {T x, r, s;};$/;"	u	struct:glm::vec
__anon0c00c97d060a	glm/detail/type_vec2.hpp	/^			union {T y, g, t;};$/;"	u	struct:glm::vec
__anon0c12e1fe010a	glm/detail/type_vec3.hpp	/^			{$/;"	u	struct:glm::vec
__anon0c12e1fe0208	glm/detail/type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	s	union:glm::vec::__anon0c12e1fe010a
__anon0c12e1fe0308	glm/detail/type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	s	union:glm::vec::__anon0c12e1fe010a
__anon0c12e1fe0408	glm/detail/type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	s	union:glm::vec::__anon0c12e1fe010a
__anon0c12e1fe050a	glm/detail/type_vec3.hpp	/^			union { T x, r, s; };$/;"	u	struct:glm::vec
__anon0c12e1fe060a	glm/detail/type_vec3.hpp	/^			union { T y, g, t; };$/;"	u	struct:glm::vec
__anon0c12e1fe070a	glm/detail/type_vec3.hpp	/^			union { T z, b, p; };$/;"	u	struct:glm::vec
__anon0c24fa7f010a	glm/detail/type_vec4.hpp	/^			{$/;"	u	struct:glm::vec
__anon0c24fa7f0208	glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w; };$/;"	s	union:glm::vec::__anon0c24fa7f010a
__anon0c24fa7f0308	glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	s	union:glm::vec::__anon0c24fa7f010a
__anon0c24fa7f0408	glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	s	union:glm::vec::__anon0c24fa7f010a
__anon0c24fa7f050a	glm/detail/type_vec4.hpp	/^			union { T x, r, s; };$/;"	u	struct:glm::vec
__anon0c24fa7f060a	glm/detail/type_vec4.hpp	/^			union { T y, g, t; };$/;"	u	struct:glm::vec
__anon0c24fa7f070a	glm/detail/type_vec4.hpp	/^			union { T z, b, p; };$/;"	u	struct:glm::vec
__anon0c24fa7f080a	glm/detail/type_vec4.hpp	/^			union { T w, a, q; };$/;"	u	struct:glm::vec
__anon1165e74f0108	glm/gtc/packing.inl	/^		{$/;"	s	union:glm::detail::u3u3u2	file:
__anon1165e74f0208	glm/gtc/packing.inl	/^		{$/;"	s	union:glm::detail::u4u4	file:
__anon1165e74f0308	glm/gtc/packing.inl	/^		{$/;"	s	union:glm::detail::u4u4u4u4	file:
__anon1165e74f0408	glm/gtc/packing.inl	/^		{$/;"	s	union:glm::detail::u5u6u5	file:
__anon1165e74f0508	glm/gtc/packing.inl	/^		{$/;"	s	union:glm::detail::u5u5u5u1	file:
__anon1165e74f0608	glm/gtc/packing.inl	/^		{$/;"	s	union:glm::detail::u10u10u10u2	file:
__anon1165e74f0708	glm/gtc/packing.inl	/^		{$/;"	s	union:glm::detail::i10i10i10i2	file:
__anon1165e74f0808	glm/gtc/packing.inl	/^		{$/;"	s	union:glm::detail::u9u9u9e5	file:
__anon3e5b6d28010a	glm/detail/type_quat.hpp	/^			{$/;"	u	struct:glm::qua
__anon3e5b6d280208	glm/detail/type_quat.hpp	/^				struct { T x, y, z, w;};$/;"	s	union:glm::qua::__anon3e5b6d28010a
__anonb4cc412b010a	glm/ext/scalar_ulp.inl	/^{$/;"	u	file:
__anonb4cc412b020a	glm/ext/scalar_ulp.inl	/^{$/;"	u	file:
__anonb4cc412b0308	glm/ext/scalar_ulp.inl	/^	{$/;"	s	union:__anonb4cc412b020a	file:
__anone26ffacf010a	glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::packUnorm2x16	file:
__anone26ffacf020a	glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::unpackUnorm2x16	file:
__anone26ffacf030a	glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::packSnorm2x16	file:
__anone26ffacf040a	glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::unpackSnorm2x16	file:
__anone26ffacf050a	glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::packUnorm4x8	file:
__anone26ffacf060a	glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::unpackUnorm4x8	file:
__anone26ffacf070a	glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::packSnorm4x8	file:
__anone26ffacf080a	glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::unpackSnorm4x8	file:
__anone26ffacf090a	glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::packDouble2x32	file:
__anone26ffacf0a0a	glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::unpackDouble2x32	file:
__anone26ffacf0b0a	glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::packHalf2x16	file:
__anone26ffacf0c0a	glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::unpackHalf2x16	file:
_apply_op	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void _apply_op(vec<N, T, Q> const& that, const U& op)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
_buffer	glm/detail/_swizzle.hpp	/^		char    _buffer[1];$/;"	m	struct:glm::detail::_swizzle_base0	typeref:typename:char[1]
_swizzle	glm/detail/_swizzle.hpp	/^	struct _swizzle : public _swizzle_base2<N, T, Q, E0, E1, E2, E3, (E0 == E1 || E0 == E2 || E0 ==/;"	s	namespace:glm::detail
_swizzle_base0	glm/detail/_swizzle.hpp	/^	struct _swizzle_base0$/;"	s	namespace:glm::detail
_swizzle_base1	glm/detail/_swizzle.hpp	/^	struct _swizzle_base1 : public _swizzle_base0<T, N>$/;"	s	namespace:glm::detail
_swizzle_base1	glm/detail/_swizzle.hpp	/^	struct _swizzle_base1<2, T, Q, E0,E1,-1,-2, Aligned> : public _swizzle_base0<T, 2>$/;"	s	namespace:glm::detail
_swizzle_base1	glm/detail/_swizzle.hpp	/^	struct _swizzle_base1<3, T, Q, E0,E1,E2,-1, Aligned> : public _swizzle_base0<T, 3>$/;"	s	namespace:glm::detail
_swizzle_base1	glm/detail/_swizzle.hpp	/^	struct _swizzle_base1<4, T, Q, E0,E1,E2,E3, Aligned> : public _swizzle_base0<T, 4>$/;"	s	namespace:glm::detail
_swizzle_base1	glm/detail/type_vec4_simd.inl	/^	struct _swizzle_base1<4, float, Q, E0,E1,E2,E3, true> : public _swizzle_base0<float, 4>$/;"	s	namespace:glm::detail	file:
_swizzle_base1	glm/detail/type_vec4_simd.inl	/^	struct _swizzle_base1<4, int, Q, E0,E1,E2,E3, true> : public _swizzle_base0<int, 4>$/;"	s	namespace:glm::detail	file:
_swizzle_base1	glm/detail/type_vec4_simd.inl	/^	struct _swizzle_base1<4, uint, Q, E0,E1,E2,E3, true> : public _swizzle_base0<uint, 4>$/;"	s	namespace:glm::detail	file:
_swizzle_base2	glm/detail/_swizzle.hpp	/^	struct _swizzle_base2 : public _swizzle_base1<N, T, Q, E0,E1,E2,E3, detail::is_aligned<Q>::valu/;"	s	namespace:glm::detail
_swizzle_base2	glm/detail/_swizzle.hpp	/^	struct _swizzle_base2<N, T, Q, E0,E1,E2,E3, 1> : public _swizzle_base1<N, T, Q, E0,E1,E2,E3, de/;"	s	namespace:glm::detail
a	glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::vec::__anon0c24fa7f010a::__anon0c24fa7f0308	typeref:typename:T
a	glm/detail/type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::vec::__anon0c24fa7f080a	typeref:typename:T
a	shaderprogram.cpp	/^GLuint ShaderProgram::a(const char* variableName) {$/;"	f	class:ShaderProgram	typeref:typename:GLuint
abs	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genFIType abs(genFIType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genFIType
abs	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR int abs(int x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR int
abs	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> abs(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
acos	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> acos(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
acosh	glm/detail/func_trigonometric.inl	/^		GLM_FUNC_QUALIFIER genType acosh(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acosh	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> acosh(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
acot	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType acot(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acot	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> acot(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
acoth	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType acoth(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acoth	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> acoth(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
acsc	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType acsc(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acsc	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> acsc(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
acsch	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType acsch(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acsch	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> acsch(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
addBitToStream	lodepng.cpp	/^#define addBitToStream(/;"	d	file:
addBitsToStream	lodepng.cpp	/^static void addBitsToStream(size_t* bitpointer, ucvector* bitstream, unsigned value, size_t nbit/;"	f	typeref:typename:void	file:
addBitsToStreamReversed	lodepng.cpp	/^static void addBitsToStreamReversed(size_t* bitpointer, ucvector* bitstream, unsigned value, siz/;"	f	typeref:typename:void	file:
addChunk	lodepng.cpp	/^static unsigned addChunk(ucvector* out, const char* chunkName, const unsigned char* data, size_t/;"	f	typeref:typename:unsigned	file:
addChunk_IDAT	lodepng.cpp	/^static unsigned addChunk_IDAT(ucvector* out, const unsigned char* data, size_t datasize,$/;"	f	typeref:typename:unsigned	file:
addChunk_IEND	lodepng.cpp	/^static unsigned addChunk_IEND(ucvector* out)$/;"	f	typeref:typename:unsigned	file:
addChunk_IHDR	lodepng.cpp	/^static unsigned addChunk_IHDR(ucvector* out, unsigned w, unsigned h,$/;"	f	typeref:typename:unsigned	file:
addChunk_PLTE	lodepng.cpp	/^static unsigned addChunk_PLTE(ucvector* out, const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned	file:
addChunk_bKGD	lodepng.cpp	/^static unsigned addChunk_bKGD(ucvector* out, const LodePNGInfo* info)$/;"	f	typeref:typename:unsigned	file:
addChunk_iTXt	lodepng.cpp	/^static unsigned addChunk_iTXt(ucvector* out, unsigned compressed, const char* keyword, const cha/;"	f	typeref:typename:unsigned	file:
addChunk_pHYs	lodepng.cpp	/^static unsigned addChunk_pHYs(ucvector* out, const LodePNGInfo* info)$/;"	f	typeref:typename:unsigned	file:
addChunk_tEXt	lodepng.cpp	/^static unsigned addChunk_tEXt(ucvector* out, const char* keyword, const char* textstring)$/;"	f	typeref:typename:unsigned	file:
addChunk_tIME	lodepng.cpp	/^static unsigned addChunk_tIME(ucvector* out, const LodePNGTime* time)$/;"	f	typeref:typename:unsigned	file:
addChunk_tRNS	lodepng.cpp	/^static unsigned addChunk_tRNS(ucvector* out, const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned	file:
addChunk_zTXt	lodepng.cpp	/^static unsigned addChunk_zTXt(ucvector* out, const char* keyword, const char* textstring,$/;"	f	typeref:typename:unsigned	file:
addColorBits	lodepng.cpp	/^static void addColorBits(unsigned char* out, size_t index, unsigned bits, unsigned in)$/;"	f	typeref:typename:void	file:
addHuffmanSymbol	lodepng.cpp	/^static void addHuffmanSymbol(size_t* bp, ucvector* compressed, unsigned code, unsigned bitlen)$/;"	f	typeref:typename:void	file:
addLengthDistance	lodepng.cpp	/^static void addLengthDistance(uivector* values, size_t length, size_t distance)$/;"	f	typeref:typename:void	file:
addPaddingBits	lodepng.cpp	/^static void addPaddingBits(unsigned char* out, const unsigned char* in,$/;"	f	typeref:typename:void	file:
addUnknownChunks	lodepng.cpp	/^static unsigned addUnknownChunks(ucvector* out, unsigned char* data, size_t datasize)$/;"	f	typeref:typename:unsigned	file:
add_id	lodepng.h	/^  unsigned add_id;$/;"	m	struct:LodePNGEncoderSettings	typeref:typename:unsigned
adjugate	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> adjugate(mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
adjugate	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> adjugate(mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
adjugate	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> adjugate(mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
adler32	lodepng.cpp	/^static unsigned adler32(const unsigned char* data, unsigned len)$/;"	f	typeref:typename:unsigned	file:
affineInverse	glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> affineInverse(mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
affineInverse	glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> affineInverse(mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
aligned	glm/detail/qualifier.hpp	/^			aligned = aligned_highp, \/\/\/< By default aligned qualifier is also high precision$/;"	e	enum:glm::qualifier
aligned_bvec1	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_bvec1			aligned_bvec1;$/;"	t	namespace:glm	typeref:typename:aligned_highp_bvec1
aligned_bvec1	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_bvec1			aligned_bvec1;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_bvec1
aligned_bvec1	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_bvec1		aligned_bvec1;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_bvec1
aligned_bvec2	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_bvec2			aligned_bvec2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_bvec2
aligned_bvec2	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_bvec2			aligned_bvec2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_bvec2
aligned_bvec2	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_bvec2		aligned_bvec2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_bvec2
aligned_bvec3	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_bvec3			aligned_bvec3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_bvec3
aligned_bvec3	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_bvec3			aligned_bvec3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_bvec3
aligned_bvec3	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_bvec3		aligned_bvec3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_bvec3
aligned_bvec4	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_bvec4			aligned_bvec4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_bvec4
aligned_bvec4	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_bvec4			aligned_bvec4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_bvec4
aligned_bvec4	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_bvec4		aligned_bvec4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_bvec4
aligned_dmat2	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat2			aligned_dmat2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat2
aligned_dmat2	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat2			aligned_dmat2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat2
aligned_dmat2	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat2		aligned_dmat2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat2
aligned_dmat2x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat2x2		aligned_dmat2x2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat2x2
aligned_dmat2x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat2x2		aligned_dmat2x2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat2x2
aligned_dmat2x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat2x2		aligned_dmat2x2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat2x2
aligned_dmat2x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat2x3		aligned_dmat2x3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat2x3
aligned_dmat2x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat2x3		aligned_dmat2x3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat2x3
aligned_dmat2x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat2x3		aligned_dmat2x3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat2x3
aligned_dmat2x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat2x4		aligned_dmat2x4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat2x4
aligned_dmat2x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat2x4		aligned_dmat2x4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat2x4
aligned_dmat2x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat2x4		aligned_dmat2x4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat2x4
aligned_dmat3	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat3			aligned_dmat3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat3
aligned_dmat3	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat3			aligned_dmat3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat3
aligned_dmat3	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat3		aligned_dmat3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat3
aligned_dmat3x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat3x2		aligned_dmat3x2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat3x2
aligned_dmat3x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat3x2		aligned_dmat3x2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat3x2
aligned_dmat3x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat3x2		aligned_dmat3x2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat3x2
aligned_dmat3x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat3x3		aligned_dmat3x3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat3x3
aligned_dmat3x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat3x3		aligned_dmat3x3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat3x3
aligned_dmat3x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat3x3		aligned_dmat3x3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat3x3
aligned_dmat3x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat3x4		aligned_dmat3x4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat3x4
aligned_dmat3x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat3x4		aligned_dmat3x4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat3x4
aligned_dmat3x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat3x4		aligned_dmat3x4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat3x4
aligned_dmat4	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat4			aligned_dmat4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat4
aligned_dmat4	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat4			aligned_dmat4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat4
aligned_dmat4	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat4		aligned_dmat4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat4
aligned_dmat4x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat4x2		aligned_dmat4x2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat4x2
aligned_dmat4x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat4x2		aligned_dmat4x2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat4x2
aligned_dmat4x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat4x2		aligned_dmat4x2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat4x2
aligned_dmat4x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat4x3		aligned_dmat4x3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat4x3
aligned_dmat4x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat4x3		aligned_dmat4x3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat4x3
aligned_dmat4x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat4x3		aligned_dmat4x3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat4x3
aligned_dmat4x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat4x4		aligned_dmat4x4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat4x4
aligned_dmat4x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat4x4		aligned_dmat4x4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat4x4
aligned_dmat4x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat4x4		aligned_dmat4x4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat4x4
aligned_dvec1	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dvec1			aligned_dvec1;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dvec1
aligned_dvec1	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dvec1			aligned_dvec1;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dvec1
aligned_dvec1	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dvec1		aligned_dvec1;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dvec1
aligned_dvec2	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dvec2			aligned_dvec2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dvec2
aligned_dvec2	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dvec2			aligned_dvec2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dvec2
aligned_dvec2	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dvec2		aligned_dvec2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dvec2
aligned_dvec3	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dvec3			aligned_dvec3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dvec3
aligned_dvec3	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dvec3			aligned_dvec3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dvec3
aligned_dvec3	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dvec3		aligned_dvec3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dvec3
aligned_dvec4	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dvec4			aligned_dvec4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dvec4
aligned_dvec4	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dvec4			aligned_dvec4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dvec4
aligned_dvec4	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dvec4		aligned_dvec4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dvec4
aligned_highp	glm/detail/qualifier.hpp	/^			aligned_highp, \/\/\/< Typed data is aligned in memory allowing SIMD optimizations and operat/;"	e	enum:glm::qualifier
aligned_highp_bvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, bool, aligned_highp>		aligned_highp_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,aligned_highp>
aligned_highp_bvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, bool, aligned_highp>		aligned_highp_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,aligned_highp>
aligned_highp_bvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, bool, aligned_highp>		aligned_highp_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,aligned_highp>
aligned_highp_bvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, bool, aligned_highp>		aligned_highp_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,aligned_highp>
aligned_highp_dmat2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_highp>	aligned_highp_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,aligned_highp>
aligned_highp_dmat2x2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_highp>	aligned_highp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,aligned_highp>
aligned_highp_dmat2x3	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, double, aligned_highp>	aligned_highp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,aligned_highp>
aligned_highp_dmat2x4	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, double, aligned_highp>	aligned_highp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,aligned_highp>
aligned_highp_dmat3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_highp>	aligned_highp_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,aligned_highp>
aligned_highp_dmat3x2	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, double, aligned_highp>	aligned_highp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,aligned_highp>
aligned_highp_dmat3x3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_highp>	aligned_highp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,aligned_highp>
aligned_highp_dmat3x4	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, double, aligned_highp>	aligned_highp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,aligned_highp>
aligned_highp_dmat4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_highp>	aligned_highp_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,aligned_highp>
aligned_highp_dmat4x2	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, double, aligned_highp>	aligned_highp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,aligned_highp>
aligned_highp_dmat4x3	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, double, aligned_highp>	aligned_highp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,aligned_highp>
aligned_highp_dmat4x4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_highp>	aligned_highp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,aligned_highp>
aligned_highp_dvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, double, aligned_highp>	aligned_highp_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,aligned_highp>
aligned_highp_dvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, double, aligned_highp>	aligned_highp_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,aligned_highp>
aligned_highp_dvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, double, aligned_highp>	aligned_highp_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,aligned_highp>
aligned_highp_dvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, double, aligned_highp>	aligned_highp_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,aligned_highp>
aligned_highp_ivec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, int, aligned_highp>		aligned_highp_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,aligned_highp>
aligned_highp_ivec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, int, aligned_highp>		aligned_highp_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,aligned_highp>
aligned_highp_ivec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, int, aligned_highp>		aligned_highp_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,aligned_highp>
aligned_highp_ivec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, int, aligned_highp>		aligned_highp_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,aligned_highp>
aligned_highp_mat2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_highp>		aligned_highp_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,aligned_highp>
aligned_highp_mat2x2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_highp>		aligned_highp_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,aligned_highp>
aligned_highp_mat2x3	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, float, aligned_highp>		aligned_highp_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,aligned_highp>
aligned_highp_mat2x4	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, float, aligned_highp>		aligned_highp_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,aligned_highp>
aligned_highp_mat3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_highp>		aligned_highp_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,aligned_highp>
aligned_highp_mat3x2	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, float, aligned_highp>		aligned_highp_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,aligned_highp>
aligned_highp_mat3x3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_highp>		aligned_highp_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,aligned_highp>
aligned_highp_mat3x4	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, float, aligned_highp>		aligned_highp_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,aligned_highp>
aligned_highp_mat4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_highp>		aligned_highp_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,aligned_highp>
aligned_highp_mat4x2	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, float, aligned_highp>		aligned_highp_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,aligned_highp>
aligned_highp_mat4x3	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, float, aligned_highp>		aligned_highp_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,aligned_highp>
aligned_highp_mat4x4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_highp>		aligned_highp_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,aligned_highp>
aligned_highp_uvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, uint, aligned_highp>		aligned_highp_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,aligned_highp>
aligned_highp_uvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, uint, aligned_highp>		aligned_highp_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,aligned_highp>
aligned_highp_uvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, uint, aligned_highp>		aligned_highp_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,aligned_highp>
aligned_highp_uvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, uint, aligned_highp>		aligned_highp_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,aligned_highp>
aligned_highp_vec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, float, aligned_highp>	aligned_highp_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,aligned_highp>
aligned_highp_vec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, float, aligned_highp>	aligned_highp_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,aligned_highp>
aligned_highp_vec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, float, aligned_highp>	aligned_highp_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,aligned_highp>
aligned_highp_vec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, float, aligned_highp>	aligned_highp_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,aligned_highp>
aligned_ivec1	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_ivec1			aligned_ivec1;$/;"	t	namespace:glm	typeref:typename:aligned_highp_ivec1
aligned_ivec1	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_ivec1			aligned_ivec1;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_ivec1
aligned_ivec1	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_ivec1		aligned_ivec1;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_ivec1
aligned_ivec2	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_ivec2			aligned_ivec2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_ivec2
aligned_ivec2	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_ivec2			aligned_ivec2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_ivec2
aligned_ivec2	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_ivec2		aligned_ivec2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_ivec2
aligned_ivec3	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_ivec3			aligned_ivec3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_ivec3
aligned_ivec3	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_ivec3			aligned_ivec3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_ivec3
aligned_ivec3	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_ivec3		aligned_ivec3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_ivec3
aligned_ivec4	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_ivec4			aligned_ivec4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_ivec4
aligned_ivec4	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_ivec4			aligned_ivec4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_ivec4
aligned_ivec4	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_ivec4		aligned_ivec4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_ivec4
aligned_lowp	glm/detail/qualifier.hpp	/^			aligned_lowp, \/\/ \/\/\/< Typed data is aligned in memory allowing SIMD optimizations and op/;"	e	enum:glm::qualifier
aligned_lowp_bvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, bool, aligned_lowp>		aligned_lowp_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,aligned_lowp>
aligned_lowp_bvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, bool, aligned_lowp>		aligned_lowp_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,aligned_lowp>
aligned_lowp_bvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, bool, aligned_lowp>		aligned_lowp_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,aligned_lowp>
aligned_lowp_bvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, bool, aligned_lowp>		aligned_lowp_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,aligned_lowp>
aligned_lowp_dmat2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_lowp>		aligned_lowp_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,aligned_lowp>
aligned_lowp_dmat2x2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_lowp>		aligned_lowp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,aligned_lowp>
aligned_lowp_dmat2x3	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, double, aligned_lowp>		aligned_lowp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,aligned_lowp>
aligned_lowp_dmat2x4	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, double, aligned_lowp>		aligned_lowp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,aligned_lowp>
aligned_lowp_dmat3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_lowp>		aligned_lowp_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,aligned_lowp>
aligned_lowp_dmat3x2	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, double, aligned_lowp>		aligned_lowp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,aligned_lowp>
aligned_lowp_dmat3x3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_lowp>		aligned_lowp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,aligned_lowp>
aligned_lowp_dmat3x4	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, double, aligned_lowp>		aligned_lowp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,aligned_lowp>
aligned_lowp_dmat4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_lowp>		aligned_lowp_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,aligned_lowp>
aligned_lowp_dmat4x2	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, double, aligned_lowp>		aligned_lowp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,aligned_lowp>
aligned_lowp_dmat4x3	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, double, aligned_lowp>		aligned_lowp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,aligned_lowp>
aligned_lowp_dmat4x4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_lowp>		aligned_lowp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,aligned_lowp>
aligned_lowp_dvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, double, aligned_lowp>	aligned_lowp_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,aligned_lowp>
aligned_lowp_dvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, double, aligned_lowp>	aligned_lowp_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,aligned_lowp>
aligned_lowp_dvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, double, aligned_lowp>	aligned_lowp_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,aligned_lowp>
aligned_lowp_dvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, double, aligned_lowp>	aligned_lowp_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,aligned_lowp>
aligned_lowp_ivec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, int, aligned_lowp>		aligned_lowp_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,aligned_lowp>
aligned_lowp_ivec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, int, aligned_lowp>		aligned_lowp_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,aligned_lowp>
aligned_lowp_ivec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, int, aligned_lowp>		aligned_lowp_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,aligned_lowp>
aligned_lowp_ivec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, int, aligned_lowp>		aligned_lowp_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,aligned_lowp>
aligned_lowp_mat2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_lowp>		aligned_lowp_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,aligned_lowp>
aligned_lowp_mat2x2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_lowp>		aligned_lowp_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,aligned_lowp>
aligned_lowp_mat2x3	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, float, aligned_lowp>		aligned_lowp_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,aligned_lowp>
aligned_lowp_mat2x4	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, float, aligned_lowp>		aligned_lowp_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,aligned_lowp>
aligned_lowp_mat3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_lowp>		aligned_lowp_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,aligned_lowp>
aligned_lowp_mat3x2	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, float, aligned_lowp>		aligned_lowp_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,aligned_lowp>
aligned_lowp_mat3x3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_lowp>		aligned_lowp_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,aligned_lowp>
aligned_lowp_mat3x4	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, float, aligned_lowp>		aligned_lowp_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,aligned_lowp>
aligned_lowp_mat4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_lowp>		aligned_lowp_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,aligned_lowp>
aligned_lowp_mat4x2	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, float, aligned_lowp>		aligned_lowp_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,aligned_lowp>
aligned_lowp_mat4x3	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, float, aligned_lowp>		aligned_lowp_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,aligned_lowp>
aligned_lowp_mat4x4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_lowp>		aligned_lowp_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,aligned_lowp>
aligned_lowp_uvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, uint, aligned_lowp>		aligned_lowp_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,aligned_lowp>
aligned_lowp_uvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, uint, aligned_lowp>		aligned_lowp_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,aligned_lowp>
aligned_lowp_uvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, uint, aligned_lowp>		aligned_lowp_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,aligned_lowp>
aligned_lowp_uvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, uint, aligned_lowp>		aligned_lowp_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,aligned_lowp>
aligned_lowp_vec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, float, aligned_lowp>		aligned_lowp_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,aligned_lowp>
aligned_lowp_vec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, float, aligned_lowp>		aligned_lowp_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,aligned_lowp>
aligned_lowp_vec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, float, aligned_lowp>		aligned_lowp_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,aligned_lowp>
aligned_lowp_vec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, float, aligned_lowp>		aligned_lowp_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,aligned_lowp>
aligned_mat2	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat2			aligned_mat2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat2
aligned_mat2	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat2			aligned_mat2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat2
aligned_mat2	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat2		aligned_mat2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat2
aligned_mat2x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat2x2		aligned_mat2x2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat2x2
aligned_mat2x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat2x2			aligned_mat2x2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat2x2
aligned_mat2x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat2x2		aligned_mat2x2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat2x2
aligned_mat2x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat2x3		aligned_mat2x3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat2x3
aligned_mat2x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat2x3			aligned_mat2x3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat2x3
aligned_mat2x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat2x3		aligned_mat2x3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat2x3
aligned_mat2x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat2x4		aligned_mat2x4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat2x4
aligned_mat2x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat2x4			aligned_mat2x4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat2x4
aligned_mat2x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat2x4		aligned_mat2x4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat2x4
aligned_mat3	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat3			aligned_mat3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat3
aligned_mat3	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat3			aligned_mat3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat3
aligned_mat3	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat3		aligned_mat3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat3
aligned_mat3x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat3x2		aligned_mat3x2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat3x2
aligned_mat3x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat3x2			aligned_mat3x2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat3x2
aligned_mat3x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat3x2		aligned_mat3x2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat3x2
aligned_mat3x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat3x3		aligned_mat3x3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat3x3
aligned_mat3x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat3x3			aligned_mat3x3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat3x3
aligned_mat3x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat3x3		aligned_mat3x3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat3x3
aligned_mat3x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat3x4		aligned_mat3x4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat3x4
aligned_mat3x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat3x4			aligned_mat3x4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat3x4
aligned_mat3x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat3x4		aligned_mat3x4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat3x4
aligned_mat4	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat4			aligned_mat4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat4
aligned_mat4	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat4			aligned_mat4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat4
aligned_mat4	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat4		aligned_mat4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat4
aligned_mat4x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat4x2		aligned_mat4x2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat4x2
aligned_mat4x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat4x2			aligned_mat4x2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat4x2
aligned_mat4x2	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat4x2		aligned_mat4x2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat4x2
aligned_mat4x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat4x3		aligned_mat4x3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat4x3
aligned_mat4x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat4x3			aligned_mat4x3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat4x3
aligned_mat4x3	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat4x3		aligned_mat4x3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat4x3
aligned_mat4x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat4x4		aligned_mat4x4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat4x4
aligned_mat4x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat4x4			aligned_mat4x4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat4x4
aligned_mat4x4	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat4x4		aligned_mat4x4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat4x4
aligned_mediump	glm/detail/qualifier.hpp	/^			aligned_mediump, \/\/\/< Typed data is aligned in memory allowing SIMD optimizations and oper/;"	e	enum:glm::qualifier
aligned_mediump_bvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, bool, aligned_mediump>	aligned_mediump_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,aligned_mediump>
aligned_mediump_bvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, bool, aligned_mediump>	aligned_mediump_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,aligned_mediump>
aligned_mediump_bvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, bool, aligned_mediump>	aligned_mediump_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,aligned_mediump>
aligned_mediump_bvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, bool, aligned_mediump>	aligned_mediump_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,aligned_mediump>
aligned_mediump_dmat2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_mediump>	aligned_mediump_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,aligned_mediump>
aligned_mediump_dmat2x2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_mediump>	aligned_mediump_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,aligned_mediump>
aligned_mediump_dmat2x3	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, double, aligned_mediump>	aligned_mediump_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,aligned_mediump>
aligned_mediump_dmat2x4	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, double, aligned_mediump>	aligned_mediump_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,aligned_mediump>
aligned_mediump_dmat3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_mediump>	aligned_mediump_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,aligned_mediump>
aligned_mediump_dmat3x2	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, double, aligned_mediump>	aligned_mediump_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,aligned_mediump>
aligned_mediump_dmat3x3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_mediump>	aligned_mediump_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,aligned_mediump>
aligned_mediump_dmat3x4	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, double, aligned_mediump>	aligned_mediump_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,aligned_mediump>
aligned_mediump_dmat4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_mediump>	aligned_mediump_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,aligned_mediump>
aligned_mediump_dmat4x2	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, double, aligned_mediump>	aligned_mediump_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,aligned_mediump>
aligned_mediump_dmat4x3	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, double, aligned_mediump>	aligned_mediump_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,aligned_mediump>
aligned_mediump_dmat4x4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_mediump>	aligned_mediump_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,aligned_mediump>
aligned_mediump_dvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, double, aligned_mediump>	aligned_mediump_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,aligned_mediump>
aligned_mediump_dvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, double, aligned_mediump>	aligned_mediump_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,aligned_mediump>
aligned_mediump_dvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, double, aligned_mediump>	aligned_mediump_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,aligned_mediump>
aligned_mediump_dvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, double, aligned_mediump>	aligned_mediump_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,aligned_mediump>
aligned_mediump_ivec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, int, aligned_mediump>	aligned_mediump_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,aligned_mediump>
aligned_mediump_ivec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, int, aligned_mediump>	aligned_mediump_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,aligned_mediump>
aligned_mediump_ivec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, int, aligned_mediump>	aligned_mediump_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,aligned_mediump>
aligned_mediump_ivec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, int, aligned_mediump>	aligned_mediump_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,aligned_mediump>
aligned_mediump_mat2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_mediump>	aligned_mediump_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,aligned_mediump>
aligned_mediump_mat2x2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_mediump>	aligned_mediump_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,aligned_mediump>
aligned_mediump_mat2x3	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, float, aligned_mediump>	aligned_mediump_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,aligned_mediump>
aligned_mediump_mat2x4	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, float, aligned_mediump>	aligned_mediump_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,aligned_mediump>
aligned_mediump_mat3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_mediump>	aligned_mediump_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,aligned_mediump>
aligned_mediump_mat3x2	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, float, aligned_mediump>	aligned_mediump_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,aligned_mediump>
aligned_mediump_mat3x3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_mediump>	aligned_mediump_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,aligned_mediump>
aligned_mediump_mat3x4	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, float, aligned_mediump>	aligned_mediump_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,aligned_mediump>
aligned_mediump_mat4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_mediump>	aligned_mediump_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,aligned_mediump>
aligned_mediump_mat4x2	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, float, aligned_mediump>	aligned_mediump_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,aligned_mediump>
aligned_mediump_mat4x3	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, float, aligned_mediump>	aligned_mediump_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,aligned_mediump>
aligned_mediump_mat4x4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_mediump>	aligned_mediump_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,aligned_mediump>
aligned_mediump_uvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, uint, aligned_mediump>	aligned_mediump_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,aligned_mediump>
aligned_mediump_uvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, uint, aligned_mediump>	aligned_mediump_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,aligned_mediump>
aligned_mediump_uvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, uint, aligned_mediump>	aligned_mediump_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,aligned_mediump>
aligned_mediump_uvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, uint, aligned_mediump>	aligned_mediump_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,aligned_mediump>
aligned_mediump_vec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, float, aligned_mediump>	aligned_mediump_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,aligned_mediump>
aligned_mediump_vec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, float, aligned_mediump>	aligned_mediump_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,aligned_mediump>
aligned_mediump_vec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, float, aligned_mediump>	aligned_mediump_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,aligned_mediump>
aligned_mediump_vec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, float, aligned_mediump>	aligned_mediump_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,aligned_mediump>
aligned_uvec1	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_uvec1			aligned_uvec1;$/;"	t	namespace:glm	typeref:typename:aligned_highp_uvec1
aligned_uvec1	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_uvec1			aligned_uvec1;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_uvec1
aligned_uvec1	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_uvec1		aligned_uvec1;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_uvec1
aligned_uvec2	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_uvec2			aligned_uvec2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_uvec2
aligned_uvec2	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_uvec2			aligned_uvec2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_uvec2
aligned_uvec2	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_uvec2		aligned_uvec2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_uvec2
aligned_uvec3	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_uvec3			aligned_uvec3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_uvec3
aligned_uvec3	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_uvec3			aligned_uvec3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_uvec3
aligned_uvec3	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_uvec3		aligned_uvec3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_uvec3
aligned_uvec4	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_uvec4			aligned_uvec4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_uvec4
aligned_uvec4	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_uvec4			aligned_uvec4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_uvec4
aligned_uvec4	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_uvec4		aligned_uvec4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_uvec4
aligned_vec1	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_vec1			aligned_vec1;$/;"	t	namespace:glm	typeref:typename:aligned_highp_vec1
aligned_vec1	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_vec1			aligned_vec1;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_vec1
aligned_vec1	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_vec1		aligned_vec1;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_vec1
aligned_vec2	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_vec2			aligned_vec2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_vec2
aligned_vec2	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_vec2			aligned_vec2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_vec2
aligned_vec2	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_vec2		aligned_vec2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_vec2
aligned_vec3	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_vec3			aligned_vec3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_vec3
aligned_vec3	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_vec3			aligned_vec3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_vec3
aligned_vec3	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_vec3		aligned_vec3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_vec3
aligned_vec4	glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_vec4 			aligned_vec4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_vec4
aligned_vec4	glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_vec4			aligned_vec4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_vec4
aligned_vec4	glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_vec4		aligned_vec4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_vec4
all	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool all(vec<L, bool, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
all	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool all$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
allocsize	lodepng.cpp	/^  size_t allocsize; \/*allocated size in bytes*\/$/;"	m	struct:uivector	typeref:typename:size_t	file:
allocsize	lodepng.cpp	/^  size_t allocsize; \/*allocated size*\/$/;"	m	struct:ucvector	typeref:typename:size_t	file:
alpha	lodepng.h	/^  unsigned alpha; \/*alpha channel or alpha palette required*\/$/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned
angle	glm/ext/quaternion_trigonometric.inl	/^	GLM_FUNC_QUALIFIER T angle(qua<T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
angle	glm/gtx/vector_angle.inl	/^	GLM_FUNC_QUALIFIER T angle(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
angle	glm/gtx/vector_angle.inl	/^	GLM_FUNC_QUALIFIER genType angle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
angleAxis	glm/ext/quaternion_trigonometric.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> angleAxis(T const& angle, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
any	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool any(vec<L, bool, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
any	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool any$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
areCollinear	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool areCollinear(vec<L, T, Q> const& v0, vec<L, T, Q> const& v1, T const& e/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
areOrthogonal	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool areOrthogonal(vec<L, T, Q> const& v0, vec<L, T, Q> const& v1, T const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
areOrthonormal	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool areOrthonormal(vec<L, T, Q> const& v0, vec<L, T, Q> const& v1, T const&/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
asec	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType asec(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
asec	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> asec(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
asech	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType asech(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
asech	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> asech(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
asin	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> asin(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
asinh	glm/detail/func_trigonometric.inl	/^		GLM_FUNC_QUALIFIER genType asinh(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
asinh	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> asinh(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
aspectRatio	main_file.cpp	/^float aspectRatio = 1;$/;"	v	typeref:typename:float
associatedMax	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER U associatedMax$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER U
associatedMax	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER U associatedMax(T x, U a, T y, U b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER U
associatedMax	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER vec<2, U, Q> associatedMax$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,U,Q>
associatedMax	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER vec<L, T, Q> associatedMax$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
associatedMax	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER vec<L, U, Q> associatedMax$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,U,Q>
associatedMin	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER U associatedMin$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER U
associatedMin	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER U associatedMin(T x, U a, T y, U b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER U
associatedMin	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER vec<2, U, Q> associatedMin$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,U,Q>
associatedMin	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER vec<L, U, Q> associatedMin$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,U,Q>
atan	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER genType atan(genType y, genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
atan	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> atan(vec<L, T, Q> const& a, vec<L, T, Q> const& b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
atan	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> atan(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
atan2	glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER T atan2(T x, T y){return atan(x, y);}					/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
atan2	glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<2, T, Q> atan2(const vec<2, T, Q>& x, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
atan2	glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<3, T, Q> atan2(const vec<3, T, Q>& x, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
atan2	glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<4, T, Q> atan2(const vec<4, T, Q>& x, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
atanh	glm/detail/func_trigonometric.inl	/^		GLM_FUNC_QUALIFIER genType atanh(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
atanh	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> atanh(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
auto_convert	lodepng.h	/^  unsigned auto_convert; \/*automatically choose output PNG color type. Default: true*\/$/;"	m	struct:LodePNGEncoderSettings	typeref:typename:unsigned
axis	glm/ext/quaternion_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> axis(qua<T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
axisAngle	glm/gtx/matrix_interpolation.inl	/^	GLM_FUNC_QUALIFIER void axisAngle(mat<4, 4, T, Q> const& m, vec<3, T, Q> & axis, T& angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
axisAngleMatrix	glm/gtx/matrix_interpolation.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> axisAngleMatrix(vec<3, T, Q> const& axis, T const angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
b	glm/detail/type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::vec::__anon0c12e1fe010a::__anon0c12e1fe0308	typeref:typename:T
b	glm/detail/type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::vec::__anon0c12e1fe070a	typeref:typename:T
b	glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::vec::__anon0c24fa7f010a::__anon0c24fa7f0308	typeref:typename:T
b	glm/detail/type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::vec::__anon0c24fa7f070a	typeref:typename:T
backEaseIn	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType backEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
backEaseIn	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType backEaseIn(genType const& a, genType const& o)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
backEaseInOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType backEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
backEaseInOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType backEaseInOut(genType const& a, genType const& o)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
backEaseOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType backEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
backEaseOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType backEaseOut(genType const& a, genType const& o)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
background_b	lodepng.h	/^  unsigned background_b;       \/*blue component of suggested background color*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
background_defined	lodepng.h	/^  unsigned background_defined; \/*is a suggested background color given?*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
background_g	lodepng.h	/^  unsigned background_g;       \/*green component of suggested background color*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
background_r	lodepng.h	/^  unsigned background_r;       \/*red component of suggested background color*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
ballRand	glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, defaultp> ballRand(T Radius)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,defaultp>
base_type	glm/detail/_swizzle.hpp	/^		typedef _swizzle_base2<N, T, Q, E0, E1, E2, E3, (E0 == E1 || E0 == E2 || E0 == E3 || E1 == E2 /;"	t	struct:glm::detail::_swizzle
basic_format_saver	glm/gtx/io.hpp	/^		class basic_format_saver$/;"	c	namespace:glm::io
basic_format_saver	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER basic_format_saver<CTy, CTr>::basic_format_saver(std::basic_ios<CTy, CTr>& a/;"	f	class:glm::io::basic_format_saver	typeref:typename:GLM_FUNC_QUALIFIER
basic_state_saver	glm/gtx/io.hpp	/^		class basic_state_saver {$/;"	c	namespace:glm::io
basic_state_saver	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER basic_state_saver<CTy, CTr>::basic_state_saver(std::basic_ios<CTy, CTr>& a)$/;"	f	class:glm::io::basic_state_saver	typeref:typename:GLM_FUNC_QUALIFIER
begin	glm/gtx/range.hpp	/^	inline typename genType::value_type * begin(genType& v)$/;"	f	namespace:glm	typeref:typename:genType::value_type *
begin	glm/gtx/range.hpp	/^	inline typename genType::value_type const * begin(genType const& v)$/;"	f	namespace:glm	typeref:typename:genType::value_type const *
bitCount	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER int bitCount(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
bitCount	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, int, Q> bitCount(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>
bitCount	glm/detail/func_integer_simd.inl	/^	GLM_FUNC_QUALIFIER int bitCount(detail::uint64 x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
bitCount	glm/detail/func_integer_simd.inl	/^	GLM_FUNC_QUALIFIER int bitCount(uint x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
bitdepth	lodepng.h	/^  unsigned bitdepth;  \/*bits per sample, see PNG standard or documentation further in this head/;"	m	struct:LodePNGColorMode	typeref:typename:unsigned
bitfieldDeinterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::u16vec2 bitfieldDeinterleave(glm::uint32 x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::u16vec2
bitfieldDeinterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::u32vec2 bitfieldDeinterleave(glm::uint64 x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::u32vec2
bitfieldDeinterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER u8vec2 bitfieldDeinterleave(glm::uint16 x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER u8vec2
bitfieldExtract	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldExtract(genIUType Value, int Offset, int Bits)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldExtract	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> bitfieldExtract(vec<L, T, Q> const& Value, int Offset, int Bits/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
bitfieldFillOne	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldFillOne(genIUType Value, int FirstBit, int BitCount)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldFillOne	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> bitfieldFillOne(vec<L, T, Q> const& Value, int FirstBit, int Bi/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
bitfieldFillZero	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldFillZero(genIUType Value, int FirstBit, int BitCount)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldFillZero	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> bitfieldFillZero(vec<L, T, Q> const& Value, int FirstBit, int B/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
bitfieldInsert	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldInsert(genIUType const& Base, genIUType const& Insert, int/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldInsert	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> bitfieldInsert(vec<L, T, Q> const& Base, vec<L, T, Q> const& In/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint16 bitfieldInterleave(glm::uint8 x, glm::uint8 y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint16
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 bitfieldInterleave(glm::uint16 x, glm::uint16 y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 bitfieldInterleave(glm::uint8 x, glm::uint8 y, glm::uint8 z)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 bitfieldInterleave(glm::uint8 x, glm::uint8 y, glm::uint8 z, glm/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 bitfieldInterleave(u16vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(glm::uint16 x, glm::uint16 y, glm::uint16 z)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(glm::uint16 x, glm::uint16 y, glm::uint16 z, /;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(glm::uint32 x, glm::uint32 y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(glm::uint32 x, glm::uint32 y, glm::uint32 z)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(u32vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int16 bitfieldInterleave(int8 x, int8 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int16
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int32 bitfieldInterleave(int16 x, int16 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int32 bitfieldInterleave(int8 x, int8 y, int8 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int32 bitfieldInterleave(int8 x, int8 y, int8 z, int8 w)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int64 bitfieldInterleave(int16 x, int16 y, int16 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int64 bitfieldInterleave(int16 x, int16 y, int16 z, int16 w)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int64 bitfieldInterleave(int32 x, int32 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int64 bitfieldInterleave(int32 x, int32 y, int32 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint16 bitfieldInterleave(u8vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint16 bitfieldInterleave(uint8 x, uint8 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint32 bitfieldInterleave(u8vec3 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint32 bitfieldInterleave(u8vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint32 bitfieldInterleave(uint16 x, uint16 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint32 bitfieldInterleave(uint8 x, uint8 y, uint8 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint32 bitfieldInterleave(uint8 x, uint8 y, uint8 z, uint8 w)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(u16vec3 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(u16vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(u32vec3 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(uint16 x, uint16 y, uint16 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(uint16 x, uint16 y, uint16 z, uint16 w)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(uint32 x, uint32 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(uint32 x, uint32 y, uint32 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldReverse	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER genType bitfieldReverse(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
bitfieldReverse	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> bitfieldReverse(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
bitfieldRotateLeft	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIType bitfieldRotateLeft(genIType In, int Shift)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIType
bitfieldRotateLeft	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> bitfieldRotateLeft(vec<L, T, Q> const& In, int Shift)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
bitfieldRotateRight	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIType bitfieldRotateRight(genIType In, int Shift)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIType
bitfieldRotateRight	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> bitfieldRotateRight(vec<L, T, Q> const& In, int Shift)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
bits	lodepng.h	/^  unsigned bits; \/*bits per channel (not for palette). 1,2 or 4 for greyscale only. 16 if 16-bi/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned
bool1	glm/gtx/compatibility.hpp	/^	typedef bool						bool1;			\/\/!< \\brief boolean type with 1 component. (From GLM_GTX_compatib/;"	t	namespace:glm	typeref:typename:bool
bool1x1	glm/gtx/compatibility.hpp	/^	typedef bool						bool1x1;		\/\/!< \\brief boolean matrix with 1 x 1 component. (From GLM_GTX_c/;"	t	namespace:glm	typeref:typename:bool
bool2	glm/gtx/compatibility.hpp	/^	typedef vec<2, bool, highp>			bool2;			\/\/!< \\brief boolean type with 2 components. (From GLM/;"	t	namespace:glm	typeref:typename:vec<2,bool,highp>
bool2x2	glm/gtx/compatibility.hpp	/^	typedef mat<2, 2, bool, highp>		bool2x2;		\/\/!< \\brief boolean matrix with 2 x 2 components. /;"	t	namespace:glm	typeref:typename:mat<2,2,bool,highp>
bool2x3	glm/gtx/compatibility.hpp	/^	typedef mat<2, 3, bool, highp>		bool2x3;		\/\/!< \\brief boolean matrix with 2 x 3 components. /;"	t	namespace:glm	typeref:typename:mat<2,3,bool,highp>
bool2x4	glm/gtx/compatibility.hpp	/^	typedef mat<2, 4, bool, highp>		bool2x4;		\/\/!< \\brief boolean matrix with 2 x 4 components. /;"	t	namespace:glm	typeref:typename:mat<2,4,bool,highp>
bool3	glm/gtx/compatibility.hpp	/^	typedef vec<3, bool, highp>			bool3;			\/\/!< \\brief boolean type with 3 components. (From GLM/;"	t	namespace:glm	typeref:typename:vec<3,bool,highp>
bool3x2	glm/gtx/compatibility.hpp	/^	typedef mat<3, 2, bool, highp>		bool3x2;		\/\/!< \\brief boolean matrix with 3 x 2 components. /;"	t	namespace:glm	typeref:typename:mat<3,2,bool,highp>
bool3x3	glm/gtx/compatibility.hpp	/^	typedef mat<3, 3, bool, highp>		bool3x3;		\/\/!< \\brief boolean matrix with 3 x 3 components. /;"	t	namespace:glm	typeref:typename:mat<3,3,bool,highp>
bool3x4	glm/gtx/compatibility.hpp	/^	typedef mat<3, 4, bool, highp>		bool3x4;		\/\/!< \\brief boolean matrix with 3 x 4 components. /;"	t	namespace:glm	typeref:typename:mat<3,4,bool,highp>
bool4	glm/gtx/compatibility.hpp	/^	typedef vec<4, bool, highp>			bool4;			\/\/!< \\brief boolean type with 4 components. (From GLM/;"	t	namespace:glm	typeref:typename:vec<4,bool,highp>
bool4x2	glm/gtx/compatibility.hpp	/^	typedef mat<4, 2, bool, highp>		bool4x2;		\/\/!< \\brief boolean matrix with 4 x 2 components. /;"	t	namespace:glm	typeref:typename:mat<4,2,bool,highp>
bool4x3	glm/gtx/compatibility.hpp	/^	typedef mat<4, 3, bool, highp>		bool4x3;		\/\/!< \\brief boolean matrix with 4 x 3 components. /;"	t	namespace:glm	typeref:typename:mat<4,3,bool,highp>
bool4x4	glm/gtx/compatibility.hpp	/^	typedef mat<4, 4, bool, highp>		bool4x4;		\/\/!< \\brief boolean matrix with 4 x 4 components. /;"	t	namespace:glm	typeref:typename:mat<4,4,bool,highp>
bool_type	glm/detail/type_vec1.hpp	/^		typedef vec<1, bool, Q> bool_type;$/;"	t	struct:glm::vec	typeref:typename:vec<1,bool,Q>
bool_type	glm/detail/type_vec2.hpp	/^		typedef vec<2, bool, Q> bool_type;$/;"	t	struct:glm::vec	typeref:typename:vec<2,bool,Q>
bool_type	glm/detail/type_vec3.hpp	/^		typedef vec<3, bool, Q> bool_type;$/;"	t	struct:glm::vec	typeref:typename:vec<3,bool,Q>
bool_type	glm/detail/type_vec4.hpp	/^		typedef vec<4, bool, Q> bool_type;$/;"	t	struct:glm::vec	typeref:typename:vec<4,bool,Q>
bounceEaseIn	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType bounceEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
bounceEaseInOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType bounceEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
bounceEaseOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType bounceEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
boundaryPM	lodepng.cpp	/^static void boundaryPM(BPMLists* lists, BPMNode* leaves, size_t numpresent, int c, int num)$/;"	f	typeref:typename:void	file:
bpmnode_compare	lodepng.cpp	/^static int bpmnode_compare(const void* a, const void* b)$/;"	f	typeref:typename:int	file:
bpmnode_create	lodepng.cpp	/^static BPMNode* bpmnode_create(BPMLists* lists, int weight, unsigned index, BPMNode* tail)$/;"	f	typeref:typename:BPMNode *	file:
bss_	glm/gtx/io.hpp	/^			basic_state_saver<CTy> const bss_;$/;"	m	class:glm::io::basic_format_saver	typeref:typename:basic_state_saver<CTy> const
btype	lodepng.h	/^  unsigned btype; \/*the block type for LZ (0, 1, 2 or 3, see zlib standard). Should be 2 for pr/;"	m	struct:LodePNGCompressSettings	typeref:typename:unsigned
buildSphere	sphere.cpp	/^	void Sphere::buildSphere(float r,float mainDivs,float tubeDivs) {$/;"	f	class:Models::Sphere	typeref:typename:void
buildTorus	torus.cpp	/^	void Torus::buildTorus(float R,float r,float mainDivs,float tubeDivs) {$/;"	f	class:Models::Torus	typeref:typename:void
bvec1	glm/ext/vector_bool1.hpp	/^	typedef vec<1, bool, defaultp>		bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,defaultp>
bvec1	glm/fwd.hpp	/^	typedef vec<1, bool, defaultp>	bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,defaultp>
bvec2	glm/ext/vector_bool2.hpp	/^	typedef vec<2, bool, defaultp>		bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,defaultp>
bvec2	glm/fwd.hpp	/^	typedef vec<2, bool, defaultp>	bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,defaultp>
bvec3	glm/ext/vector_bool3.hpp	/^	typedef vec<3, bool, defaultp>		bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,defaultp>
bvec3	glm/fwd.hpp	/^	typedef vec<3, bool, defaultp>	bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,defaultp>
bvec4	glm/ext/vector_bool4.hpp	/^	typedef vec<4, bool, defaultp>		bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,defaultp>
bvec4	glm/fwd.hpp	/^	typedef vec<4, bool, defaultp>	bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,defaultp>
byte	glm/gtx/raw_data.hpp	/^	typedef detail::uint8		byte;$/;"	t	namespace:glm	typeref:typename:detail::uint8
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<1, R, Q> call(R (*Func) (T x), vec<1, T, Q> const&/;"	f	struct:glm::detail::functor1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,R,Q>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<2, R, Q> call(R (*Func) (T x), vec<2, T, Q> const&/;"	f	struct:glm::detail::functor1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,R,Q>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<3, R, Q> call(R (*Func) (T x), vec<3, T, Q> const&/;"	f	struct:glm::detail::functor1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,R,Q>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, R, Q> call(R (*Func) (T x), vec<4, T, Q> const&/;"	f	struct:glm::detail::functor1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,R,Q>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<1, T, Q> call(T (*Func) (T x, T y), vec<1, T, Q> const& a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca	typeref:typename:GLM_FUNC_QUALIFIER vec<1,T,Q>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<1, T, Q> call(T (*Func) (T x, T y), vec<1, T, Q> const& a, vec<1/;"	f	struct:glm::detail::functor2	typeref:typename:GLM_FUNC_QUALIFIER vec<1,T,Q>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<2, T, Q> call(T (*Func) (T x, T y), vec<2, T, Q> const& a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<2, T, Q> call(T (*Func) (T x, T y), vec<2, T, Q> const& a, vec<2/;"	f	struct:glm::detail::functor2	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<3, T, Q> call(T (*Func) (T x, T y), vec<3, T, Q> const& a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<3, T, Q> call(T (*Func) (T x, T y), vec<3, T, Q> const& a, vec<3/;"	f	struct:glm::detail::functor2	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<4, T, Q> call(T (*Func) (T x, T y), vec<4, T, Q> const& a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<4, T, Q> call(T (*Func) (T x, T y), vec<4, T, Q> const& a, vec<4/;"	f	struct:glm::detail::functor2	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
call	glm/detail/compute_common.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static float call(float x)$/;"	f	struct:glm::detail::compute_abs	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR float
call	glm/detail/compute_common.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static genFIType call(genFIType x)$/;"	f	struct:glm::detail::compute_abs	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genFIType
call	glm/detail/compute_vector_relational.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static bool call(T a, T b)$/;"	f	struct:glm::detail::compute_equal	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_abs_vector	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static T call(T const& x, T const& y, U const& a)$/;"	f	struct:glm::detail::compute_mix	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static T call(T const& x, T const& y, bool const& a)$/;"	f	struct:glm::detail::compute_mix	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& a, vec<L, T, Q> const& b)$/;"	f	struct:glm::detail::compute_mod	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& edge, vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_step_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& edge0, vec<L, T, Q> const& edg/;"	f	struct:glm::detail::compute_smoothstep_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_ceil	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_floor	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_fract	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_round	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_sign	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_trunc	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x, vec<L, T, Q> const& minVal,/;"	f	struct:glm::detail::compute_clamp_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	struct:glm::detail::compute_max_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	struct:glm::detail::compute_min_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x, vec<L, T, Q> const& y, U co/;"	f	struct:glm::detail::compute_mix_scalar	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x, vec<L, T, Q> const& y, bool/;"	f	struct:glm::detail::compute_mix_scalar	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x, vec<L, T, Q> const& y, vec</;"	f	struct:glm::detail::compute_mix_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& edge0, vec<4, float, Q/;"	f	struct:glm::detail::compute_smoothstep_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_abs_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_ceil	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_floor	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_fract	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_round	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v1, vec<4, float, Q> c/;"	f	struct:glm::detail::compute_max_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v1, vec<4, float, Q> c/;"	f	struct:glm::detail::compute_min_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& x, vec<4, float, Q> co/;"	f	struct:glm::detail::compute_clamp_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& x, vec<4, float, Q> co/;"	f	struct:glm::detail::compute_mix_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& x, vec<4, float, Q> co/;"	f	struct:glm::detail::compute_mod	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, int, Q> call(vec<4, int, Q> const& v)$/;"	f	struct:glm::detail::compute_abs_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,int,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, int, Q> call(vec<4, int, Q> const& v1, vec<4, int, Q> const& /;"	f	struct:glm::detail::compute_max_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,int,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, int, Q> call(vec<4, int, Q> const& v1, vec<4, int, Q> const& /;"	f	struct:glm::detail::compute_min_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,int,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, int, Q> call(vec<4, int, Q> const& x, vec<4, int, Q> const& m/;"	f	struct:glm::detail::compute_clamp_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,int,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, uint, Q> call(vec<4, uint, Q> const& v1, vec<4, uint, Q> cons/;"	f	struct:glm::detail::compute_max_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,uint,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, uint, Q> call(vec<4, uint, Q> const& v1, vec<4, uint, Q> cons/;"	f	struct:glm::detail::compute_min_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,uint,Q>	file:
call	glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, uint, Q> call(vec<4, uint, Q> const& x, vec<4, uint, Q> const/;"	f	struct:glm::detail::compute_clamp_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,uint,Q>	file:
call	glm/detail/func_exponential.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v)$/;"	f	struct:glm::detail::compute_log2	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_exponential.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_inversesqrt	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_exponential.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_sqrt	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_exponential.inl	/^		GLM_FUNC_QUALIFIER static vec<L, float, lowp> call(vec<L, float, lowp> const& x)$/;"	f	struct:glm::detail::compute_inversesqrt	typeref:typename:GLM_FUNC_QUALIFIER vec<L,float,lowp>	file:
call	glm/detail/func_exponential_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_sqrt	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	glm/detail/func_exponential_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, aligned_lowp> call(vec<4, float, aligned_lowp> const& /;"	f	struct:glm::detail::compute_sqrt	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,aligned_lowp>	file:
call	glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static T call(vec<1, T, Q> const& a, vec<1, T, Q> const& b)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static T call(vec<2, T, Q> const& a, vec<2, T, Q> const& b)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static T call(vec<3, T, Q> const& a, vec<3, T, Q> const& b)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static T call(vec<4, T, Q> const& a, vec<4, T, Q> const& b)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static T call(vec<L, T, Q> const& p0, vec<L, T, Q> const& p1)$/;"	f	struct:glm::detail::compute_distance	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static T call(vec<L, T, Q> const& v)$/;"	f	struct:glm::detail::compute_length	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static vec<3, T, Q> call(vec<3, T, Q> const& x, vec<3, T, Q> const& y)$/;"	f	struct:glm::detail::compute_cross	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>	file:
call	glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& I, vec<L, T, Q> const& N)$/;"	f	struct:glm::detail::compute_reflect	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& I, vec<L, T, Q> const& N, T et/;"	f	struct:glm::detail::compute_refract	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& N, vec<L, T, Q> const& I, vec</;"	f	struct:glm::detail::compute_faceforward	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v)$/;"	f	struct:glm::detail::compute_normalize	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_geometric_simd.inl	/^		GLM_FUNC_QUALIFIER static float call(vec<4, float, Q> const& p0, vec<4, float, Q> const& p1)$/;"	f	struct:glm::detail::compute_distance	typeref:typename:GLM_FUNC_QUALIFIER float	file:
call	glm/detail/func_geometric_simd.inl	/^		GLM_FUNC_QUALIFIER static float call(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_length	typeref:typename:GLM_FUNC_QUALIFIER float	file:
call	glm/detail/func_geometric_simd.inl	/^		GLM_FUNC_QUALIFIER static float call(vec<4, float, Q> const& x, vec<4, float, Q> const& y)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER float	file:
call	glm/detail/func_geometric_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<3, float, Q> call(vec<3, float, Q> const& a, vec<3, float, Q> co/;"	f	struct:glm::detail::compute_cross	typeref:typename:GLM_FUNC_QUALIFIER vec<3,float,Q>	file:
call	glm/detail/func_geometric_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& I, vec<4, float, Q> co/;"	f	struct:glm::detail::compute_reflect	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	glm/detail/func_geometric_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& I, vec<4, float, Q> co/;"	f	struct:glm::detail::compute_refract	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	glm/detail/func_geometric_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& N, vec<4, float, Q> co/;"	f	struct:glm::detail::compute_faceforward	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	glm/detail/func_geometric_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_normalize	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	glm/detail/func_integer.inl	/^			GLM_FUNC_QUALIFIER static int call(genIUType Value)$/;"	f	struct:glm::detail::compute_findLSB	typeref:typename:GLM_FUNC_QUALIFIER int	file:
call	glm/detail/func_integer.inl	/^			GLM_FUNC_QUALIFIER static vec<L, int, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_findMSB_vec	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>	file:
call	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static int call(genIUType Value)$/;"	f	struct:glm::detail::compute_findLSB	typeref:typename:GLM_FUNC_QUALIFIER int	file:
call	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v, T Mask, T Shift)$/;"	f	struct:glm::detail::compute_bitfieldBitCountStep	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v, T Mask, T Shift)$/;"	f	struct:glm::detail::compute_bitfieldReverseStep	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v, T, T)$/;"	f	struct:glm::detail::compute_bitfieldBitCountStep	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v, T, T)$/;"	f	struct:glm::detail::compute_bitfieldReverseStep	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x, T Shift)$/;"	f	struct:glm::detail::compute_findMSB_step_vec	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x, T)$/;"	f	struct:glm::detail::compute_findMSB_step_vec	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, int, Q> call(vec<L, T, Q> const& v)$/;"	f	struct:glm::detail::compute_findMSB_vec	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>	file:
call	glm/detail/func_integer_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, uint, Q> call(vec<4, uint, Q> const& v, uint Mask, uint Shift/;"	f	struct:glm::detail::compute_bitfieldBitCountStep	typeref:typename:GLM_FUNC_QUALIFIER vec<4,uint,Q>	file:
call	glm/detail/func_integer_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, uint, Q> call(vec<4, uint, Q> const& v, uint Mask, uint Shift/;"	f	struct:glm::detail::compute_bitfieldReverseStep	typeref:typename:GLM_FUNC_QUALIFIER vec<4,uint,Q>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static T call(mat<2, 2, T, Q> const& m)$/;"	f	struct:glm::detail::compute_determinant	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static T call(mat<3, 3, T, Q> const& m)$/;"	f	struct:glm::detail::compute_determinant	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static T call(mat<4, 4, T, Q> const& m)$/;"	f	struct:glm::detail::compute_determinant	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<2, 2, T, Q> call(mat<2, 2, T, Q> const& m)$/;"	f	struct:glm::detail::compute_inverse	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<2, 2, T, Q> call(mat<2, 2, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<2, 3, T, Q> call(mat<3, 2, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<2, 4, T, Q> call(mat<4, 2, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<3, 2, T, Q> call(mat<2, 3, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<3, 3, T, Q> call(mat<3, 3, T, Q> const& m)$/;"	f	struct:glm::detail::compute_inverse	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<3, 3, T, Q> call(mat<3, 3, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<3, 4, T, Q> call(mat<4, 3, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<4, 2, T, Q> call(mat<2, 4, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<4, 3, T, Q> call(mat<3, 4, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<4, 4, T, Q> call(mat<4, 4, T, Q> const& m)$/;"	f	struct:glm::detail::compute_inverse	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<4, 4, T, Q> call(mat<4, 4, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<C, R, T, Q> call(mat<C, R, T, Q> const& x, mat<C, R, T, Q> const/;"	f	struct:glm::detail::compute_matrixCompMult	typeref:typename:GLM_FUNC_QUALIFIER mat<C,R,T,Q>	file:
call	glm/detail/func_matrix_simd.inl	/^		GLM_FUNC_QUALIFIER static float call(mat<4, 4, float, Q> const& m)$/;"	f	struct:glm::detail::compute_determinant	typeref:typename:GLM_FUNC_QUALIFIER float	file:
call	glm/detail/func_matrix_simd.inl	/^		GLM_FUNC_QUALIFIER static mat<4, 4, float, Q> call(mat<4, 4, float, Q> const& m)$/;"	f	struct:glm::detail::compute_inverse	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,float,Q>	file:
call	glm/detail/func_matrix_simd.inl	/^		GLM_FUNC_QUALIFIER static mat<4, 4, float, Q> call(mat<4, 4, float, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,float,Q>	file:
call	glm/detail/func_matrix_simd.inl	/^		GLM_FUNC_QUALIFIER static mat<4, 4, float, Q> call(mat<4, 4, float, Q> const& x, mat<4, 4, flo/;"	f	struct:glm::detail::compute_matrixCompMult	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,float,Q>	file:
call	glm/detail/type_quat_simd.inl	/^		static qua<double, Q> call(qua<double, Q> const& a, qua<double, Q> const& b)$/;"	f	struct:glm::detail::compute_quat_add	typeref:typename:qua<double,Q>	file:
call	glm/detail/type_quat_simd.inl	/^		static qua<double, Q> call(qua<double, Q> const& a, qua<double, Q> const& b)$/;"	f	struct:glm::detail::compute_quat_sub	typeref:typename:qua<double,Q>	file:
call	glm/detail/type_quat_simd.inl	/^		static qua<double, Q> call(qua<double, Q> const& q, double s)$/;"	f	struct:glm::detail::compute_quat_div_scalar	typeref:typename:qua<double,Q>	file:
call	glm/detail/type_quat_simd.inl	/^		static qua<double, Q> call(qua<double, Q> const& q, double s)$/;"	f	struct:glm::detail::compute_quat_mul_scalar	typeref:typename:qua<double,Q>	file:
call	glm/detail/type_quat_simd.inl	/^		static qua<float, Q> call(qua<float, Q> const& q, float s)$/;"	f	struct:glm::detail::compute_quat_div_scalar	typeref:typename:qua<float,Q>	file:
call	glm/detail/type_quat_simd.inl	/^		static qua<float, Q> call(qua<float, Q> const& q, float s)$/;"	f	struct:glm::detail::compute_quat_mul_scalar	typeref:typename:qua<float,Q>	file:
call	glm/detail/type_quat_simd.inl	/^		static qua<float, Q> call(qua<float, Q> const& q, qua<float, Q> const& p)$/;"	f	struct:glm::detail::compute_quat_add	typeref:typename:qua<float,Q>	file:
call	glm/detail/type_quat_simd.inl	/^		static qua<float, Q> call(qua<float, Q> const& q, qua<float, Q> const& p)$/;"	f	struct:glm::detail::compute_quat_sub	typeref:typename:qua<float,Q>	file:
call	glm/detail/type_quat_simd.inl	/^		static vec<4, float, Q> call(qua<float, Q> const& q, vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_quat_mul_vec4	typeref:typename:vec<4,float,Q>	file:
call	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static bool call(vec<4, T, Q> const& v1, vec<4, T, Q> const& /;"	f	struct:glm::detail::compute_vec4_equal	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool	file:
call	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static bool call(vec<4, T, Q> const& v1, vec<4, T, Q> const& /;"	f	struct:glm::detail::compute_vec4_nequal	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool	file:
call	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_add	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_and	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_div	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_mod	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_mul	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_or	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_shift_left	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_shift_right	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_sub	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_xor	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& v)$/;"	f	struct:glm::detail::compute_vec4_bitwise_not	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	glm/detail/type_vec4_simd.inl	/^		static bool call(vec<4, float, Q> const& v1, vec<4, float, Q> const& v2)$/;"	f	struct:glm::detail::compute_vec4_equal	typeref:typename:bool	file:
call	glm/detail/type_vec4_simd.inl	/^		static bool call(vec<4, float, Q> const& v1, vec<4, float, Q> const& v2)$/;"	f	struct:glm::detail::compute_vec4_nequal	typeref:typename:bool	file:
call	glm/detail/type_vec4_simd.inl	/^		static bool call(vec<4, int, Q> const& v1, vec<4, int, Q> const& v2)$/;"	f	struct:glm::detail::compute_vec4_equal	typeref:typename:bool	file:
call	glm/detail/type_vec4_simd.inl	/^		static bool call(vec<4, int, Q> const& v1, vec<4, int, Q> const& v2)$/;"	f	struct:glm::detail::compute_vec4_nequal	typeref:typename:bool	file:
call	glm/detail/type_vec4_simd.inl	/^		static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_and	typeref:typename:vec<4,T,Q>	file:
call	glm/detail/type_vec4_simd.inl	/^		static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_or	typeref:typename:vec<4,T,Q>	file:
call	glm/detail/type_vec4_simd.inl	/^		static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_shift_left	typeref:typename:vec<4,T,Q>	file:
call	glm/detail/type_vec4_simd.inl	/^		static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_shift_right	typeref:typename:vec<4,T,Q>	file:
call	glm/detail/type_vec4_simd.inl	/^		static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_xor	typeref:typename:vec<4,T,Q>	file:
call	glm/detail/type_vec4_simd.inl	/^		static vec<4, T, Q> call(vec<4, T, Q> const& v)$/;"	f	struct:glm::detail::compute_vec4_bitwise_not	typeref:typename:vec<4,T,Q>	file:
call	glm/detail/type_vec4_simd.inl	/^		static vec<4, double, Q> call(vec<4, double, Q> const& a, vec<4, double, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_add	typeref:typename:vec<4,double,Q>	file:
call	glm/detail/type_vec4_simd.inl	/^		static vec<4, double, Q> call(vec<4, double, Q> const& a, vec<4, double, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_div	typeref:typename:vec<4,double,Q>	file:
call	glm/detail/type_vec4_simd.inl	/^		static vec<4, double, Q> call(vec<4, double, Q> const& a, vec<4, double, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_mul	typeref:typename:vec<4,double,Q>	file:
call	glm/detail/type_vec4_simd.inl	/^		static vec<4, double, Q> call(vec<4, double, Q> const& a, vec<4, double, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_sub	typeref:typename:vec<4,double,Q>	file:
call	glm/detail/type_vec4_simd.inl	/^		static vec<4, float, Q> call(vec<4, float, Q> const& a, vec<4, float, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_add	typeref:typename:vec<4,float,Q>	file:
call	glm/detail/type_vec4_simd.inl	/^		static vec<4, float, Q> call(vec<4, float, Q> const& a, vec<4, float, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_div	typeref:typename:vec<4,float,Q>	file:
call	glm/detail/type_vec4_simd.inl	/^		static vec<4, float, Q> call(vec<4, float, Q> const& a, vec<4, float, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_mul	typeref:typename:vec<4,float,Q>	file:
call	glm/detail/type_vec4_simd.inl	/^		static vec<4, float, Q> call(vec<4, float, Q> const& a, vec<4, float, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_sub	typeref:typename:vec<4,float,Q>	file:
call	glm/detail/type_vec4_simd.inl	/^		static vec<4, float, aligned_lowp> call(vec<4, float, aligned_lowp> const& a, vec<4, float, al/;"	f	struct:glm::detail::compute_vec4_div	typeref:typename:vec<4,float,aligned_lowp>	file:
call	glm/ext/quaternion_common_simd.inl	/^		static GLM_FUNC_QUALIFIER float call(qua<float, Q> const& x, qua<float, Q> const& y)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER float	file:
call	glm/gtc/color_space.inl	/^		GLM_FUNC_QUALIFIER static vec<4, T, Q> call(vec<4, T, Q> const& ColorRGB, T GammaCorrection)$/;"	f	struct:glm::detail::compute_rgbToSrgb	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>	file:
call	glm/gtc/color_space.inl	/^		GLM_FUNC_QUALIFIER static vec<4, T, Q> call(vec<4, T, Q> const& ColorSRGB, T Gamma)$/;"	f	struct:glm::detail::compute_srgbToRgb	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>	file:
call	glm/gtc/color_space.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& ColorRGB, T GammaCorrection)$/;"	f	struct:glm::detail::compute_rgbToSrgb	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/gtc/color_space.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& ColorSRGB, T Gamma)$/;"	f	struct:glm::detail::compute_srgbToRgb	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/gtc/integer.inl	/^			GLM_FUNC_QUALIFIER static vec<4, int, Q> call(vec<4, int, Q> const& v)$/;"	f	struct:glm::detail::compute_log2	typeref:typename:GLM_FUNC_QUALIFIER vec<4,int,Q>	file:
call	glm/gtc/integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v)$/;"	f	struct:glm::detail::compute_log2	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<1, uint8, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vec<1,uint8,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<2, uint8, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vec<2,uint8,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<3, uint8, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vec<3,uint8,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<4, uint8, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vec<4,uint8,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, double, Q> call(vec<L, double, Q> const& Min, vec<L, double, /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,double,Q>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, float, Q> call(vec<L, float, Q> const& Min, vec<L, float, Q> /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,float,Q>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, int16, Q> call(vec<L, int16, Q> const& Min, vec<L, int16, Q> /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int16,Q>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, int32, Q> call(vec<L, int32, Q> const& Min, vec<L, int32, Q> /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int32,Q>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, int64, Q> call(vec<L, int64, Q> const& Min, vec<L, int64, Q> /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int64,Q>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, int8, Q> call(vec<L, int8, Q> const& Min, vec<L, int8, Q> con/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int8,Q>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, long double, Q> call(vec<L, long double, Q> const& Min, vec<L/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,long double,Q>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, uint16, Q> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint16,Q>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, uint16, Q> call(vec<L, uint16, Q> const& Min, vec<L, uint16, /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint16,Q>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, uint32, Q> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint32,Q>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, uint32, Q> call(vec<L, uint32, Q> const& Min, vec<L, uint32, /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint32,Q>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, uint64, Q> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint64,Q>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, uint64, Q> call(vec<L, uint64, Q> const& Min, vec<L, uint64, /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint64,Q>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, uint8, Q> call(vec<L, uint8, Q> const& Min, vec<L, uint8, Q> /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint8,Q>	file:
call	glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static genType call(genType Source, genType Multiple)$/;"	f	struct:glm::detail::compute_ceilMultiple	typeref:typename:GLM_FUNC_QUALIFIER genType	file:
call	glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static genType call(genType Source, genType Multiple)$/;"	f	struct:glm::detail::compute_floorMultiple	typeref:typename:GLM_FUNC_QUALIFIER genType	file:
call	glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static genType call(genType Source, genType Multiple)$/;"	f	struct:glm::detail::compute_roundMultiple	typeref:typename:GLM_FUNC_QUALIFIER genType	file:
call	glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v, T Shift)$/;"	f	struct:glm::detail::compute_ceilShift	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v, T)$/;"	f	struct:glm::detail::compute_ceilShift	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_ceilPowerOfTwo	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/gtx/common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& a, vec<L, T, Q> const& b)$/;"	f	struct:glm::detail::compute_fmod	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/gtx/component_wise.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, floatType, Q> const& v)$/;"	f	struct:glm::detail::compute_compScale	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	glm/gtx/component_wise.inl	/^		GLM_FUNC_QUALIFIER static vec<L, floatType, Q> call(vec<L, T, Q> const& v)$/;"	f	struct:glm::detail::compute_compNormalize	typeref:typename:GLM_FUNC_QUALIFIER vec<L,floatType,Q>	file:
call	glm/gtx/exterior_product.inl	/^		GLM_FUNC_QUALIFIER static T call(vec<2, T, Q> const& v, vec<2, T, Q> const& u)$/;"	f	struct:glm::detail::compute_cross_vec2	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/gtx/norm.inl	/^		GLM_FUNC_QUALIFIER static T call(vec<L, T, Q> const& v)$/;"	f	struct:glm::detail::compute_length2	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static bool call(vec<2, T, Q> const& v0, vec<2, T, Q> const& v1, T const& e/;"	f	struct:glm::detail::compute_areCollinear	typeref:typename:GLM_FUNC_QUALIFIER bool	file:
call	glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static bool call(vec<3, T, Q> const& v0, vec<3, T, Q> const& v1, T const& e/;"	f	struct:glm::detail::compute_areCollinear	typeref:typename:GLM_FUNC_QUALIFIER bool	file:
call	glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static bool call(vec<4, T, Q> const& v0, vec<4, T, Q> const& v1, T const& e/;"	f	struct:glm::detail::compute_areCollinear	typeref:typename:GLM_FUNC_QUALIFIER bool	file:
call	glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static vec<2, bool, Q> call(vec<2, T, Q> const& v, T const& epsilon)$/;"	f	struct:glm::detail::compute_isCompNull	typeref:typename:GLM_FUNC_QUALIFIER vec<2,bool,Q>	file:
call	glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static vec<3, bool, Q> call(vec<3, T, Q> const& v, T const& epsilon)$/;"	f	struct:glm::detail::compute_isCompNull	typeref:typename:GLM_FUNC_QUALIFIER vec<3,bool,Q>	file:
call	glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static vec<4, bool, Q> call(vec<4, T, Q> const& v, T const& epsilon)$/;"	f	struct:glm::detail::compute_isCompNull	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>	file:
camera	main_file.cpp	/^Camera *camera;$/;"	v	typeref:typename:Camera *
cameraFront	Camera.h	/^    glm::vec3 cameraFront;$/;"	m	class:Camera	typeref:typename:glm::vec3
cameraPos	Camera.h	/^    glm::vec3 cameraPos;$/;"	m	class:Camera	typeref:typename:glm::vec3
cameraUp	Camera.h	/^    glm::vec3 cameraUp;$/;"	m	class:Camera	typeref:typename:glm::vec3
cast	glm/gtx/string_cast.inl	/^	struct cast$/;"	s	namespace:glm::detail	file:
cast	glm/gtx/string_cast.inl	/^	struct cast<float>$/;"	s	namespace:glm::detail	file:
catmullRom	glm/gtx/spline.inl	/^	GLM_FUNC_QUALIFIER genType catmullRom$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ceil	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> ceil(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
ceilMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType ceilMultiple(genType Source, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ceilMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> ceilMultiple(vec<L, T, Q> const& Source, vec<L, T, Q> const& Mu/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
ceilPowerOfTwo	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType ceilPowerOfTwo(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ceilPowerOfTwo	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> ceilPowerOfTwo(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
chain	lodepng.cpp	/^  unsigned short* chain;$/;"	m	struct:Hash	typeref:typename:unsigned short *	file:
chains0	lodepng.cpp	/^  BPMNode** chains0;$/;"	m	struct:BPMLists	typeref:typename:BPMNode **	file:
chains1	lodepng.cpp	/^  BPMNode** chains1;$/;"	m	struct:BPMLists	typeref:typename:BPMNode **	file:
chainz	lodepng.cpp	/^  unsigned short* chainz; \/*those with same amount of zeros*\/$/;"	m	struct:Hash	typeref:typename:unsigned short *	file:
char_type	glm/gtx/io.hpp	/^			typedef CTy char_type;$/;"	t	class:glm::io::format_punct	typeref:typename:CTy
char_type	glm/gtx/io.hpp	/^			typedef typename state_type::char_type char_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:state_type::char_type
checkColorValidity	lodepng.cpp	/^static unsigned checkColorValidity(LodePNGColorType colortype, unsigned bd) \/*bd = bitdepth*\/$/;"	f	typeref:typename:unsigned	file:
children	lodepng.cpp	/^  ColorTree* children[16]; \/*up to 16 pointers to ColorTree of next level*\/$/;"	m	struct:ColorTree	typeref:typename:ColorTree * [16]	file:
circularEaseIn	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType circularEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
circularEaseInOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType circularEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
circularEaseOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType circularEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
circularRand	glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER vec<2, T, defaultp> circularRand(T Radius)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,defaultp>
clamp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType clamp(genType x, genType minVal, genType maxVal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
clamp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> clamp(vec<L, T, Q> const& x, T minVal, T maxVal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
clamp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> clamp(vec<L, T, Q> const& x, vec<L, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
clamp	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER genType clamp(genType const& Texcoord)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
clamp	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> clamp(vec<L, T, Q> const& Texcoord)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
closeBounded	glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> closeBounded(vec<L, T, Q> const& Value, vec<L, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
closestPointOnLine	glm/gtx/closest_point.inl	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> closestPointOnLine$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
closestPointOnLine	glm/gtx/closest_point.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> closestPointOnLine$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
colMajor2	glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> colMajor2($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
colMajor3	glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> colMajor3($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
colMajor4	glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> colMajor4($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
col_type	glm/detail/type_mat2x2.hpp	/^		typedef vec<2, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<2,T,Q>
col_type	glm/detail/type_mat2x3.hpp	/^		typedef vec<3, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<3,T,Q>
col_type	glm/detail/type_mat2x4.hpp	/^		typedef vec<4, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<4,T,Q>
col_type	glm/detail/type_mat3x2.hpp	/^		typedef vec<2, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<2,T,Q>
col_type	glm/detail/type_mat3x3.hpp	/^		typedef vec<3, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<3,T,Q>
col_type	glm/detail/type_mat3x4.hpp	/^		typedef vec<4, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<4,T,Q>
col_type	glm/detail/type_mat4x2.hpp	/^		typedef vec<2, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<2,T,Q>
col_type	glm/detail/type_mat4x3.hpp	/^		typedef vec<3, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<3,T,Q>
col_type	glm/detail/type_mat4x4.hpp	/^		typedef vec<4, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<4,T,Q>
color	lodepng.h	/^  LodePNGColorMode color;     \/*color type and bits, palette and transparency of the PNG file*\/$/;"	m	struct:LodePNGInfo	typeref:typename:LodePNGColorMode
color_convert	lodepng.h	/^  unsigned color_convert; \/*whether to convert the PNG to the color type you want. Default: yes/;"	m	struct:LodePNGDecoderSettings	typeref:typename:unsigned
color_tree_add	lodepng.cpp	/^static void color_tree_add(ColorTree* tree,$/;"	f	typeref:typename:void	file:
color_tree_cleanup	lodepng.cpp	/^static void color_tree_cleanup(ColorTree* tree)$/;"	f	typeref:typename:void	file:
color_tree_get	lodepng.cpp	/^static int color_tree_get(ColorTree* tree, unsigned char r, unsigned char g, unsigned char b, un/;"	f	typeref:typename:int	file:
color_tree_has	lodepng.cpp	/^static int color_tree_has(ColorTree* tree, unsigned char r, unsigned char g, unsigned char b, un/;"	f	typeref:typename:int	file:
color_tree_init	lodepng.cpp	/^static void color_tree_init(ColorTree* tree)$/;"	f	typeref:typename:void	file:
colored	lodepng.h	/^  unsigned colored; \/*not greyscale*\/$/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned
colors	cube.cpp	/^			float colors[]={$/;"	v	namespace:Models::CubeInternal	typeref:typename:float[]
colors	model.h	/^			float *colors;$/;"	m	class:Models::Model	typeref:typename:float *
colors	teapot.cpp	/^		float colors[]={$/;"	v	namespace:Models::TeapotInternal	typeref:typename:float[]
colors	walls.cpp	/^        float colors[] = {$/;"	v	namespace:Models::WallsInternal	typeref:typename:float[]
colortype	lodepng.h	/^  LodePNGColorType colortype; \/*color type, see PNG standard or documentation further in this h/;"	m	struct:LodePNGColorMode	typeref:typename:LodePNGColorType
cols	glm/gtx/type_trait.hpp	/^		static length_t const cols = 0;$/;"	m	struct:glm::type	typeref:typename:length_t const
cols	glm/gtx/type_trait.hpp	/^		static length_t const cols = C;$/;"	v	typeref:typename:length_t const
cols	glm/gtx/type_trait.inl	/^	length_t const type<T>::cols;$/;"	m	class:glm::type<T>	typeref:typename:length_t const
cols	glm/gtx/type_trait.inl	/^	length_t const type<mat<C, R, T, Q> >::cols;$/;"	m	class:glm::type<mat<C, R, T, Q> >	typeref:typename:length_t const
column	glm/gtc/matrix_access.inl	/^	GLM_FUNC_QUALIFIER genType column$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
column	glm/gtc/matrix_access.inl	/^	GLM_FUNC_QUALIFIER typename genType::col_type column$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename genType::col_type
column_major	glm/gtx/io.hpp	/^		enum order_type { column_major, row_major};$/;"	e	enum:glm::io::order_type
combine	glm/gtx/matrix_decompose.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> combine($/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
compAdd	glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T compAdd(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
compMax	glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T compMax(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
compMin	glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T compMin(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
compMul	glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T compMul(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
compNormalize	glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER vec<L, floatType, Q> compNormalize(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,floatType,Q>
compScale	glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> compScale(vec<L, floatType, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
components	glm/gtx/range.hpp	/^	inline length_t components(genType const& m)$/;"	f	namespace:glm	typeref:typename:length_t
components	glm/gtx/range.hpp	/^	inline length_t components(vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:length_t
components	glm/gtx/range.hpp	/^	inline length_t components(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:length_t
components	glm/gtx/range.hpp	/^	inline length_t components(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:length_t
components	glm/gtx/range.hpp	/^	inline length_t components(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:length_t
components	glm/gtx/type_trait.hpp	/^		static length_t const components = 0;$/;"	m	struct:glm::type	typeref:typename:length_t const
components	glm/gtx/type_trait.hpp	/^		static length_t const components = C;$/;"	v	typeref:typename:length_t const
components	glm/gtx/type_trait.hpp	/^		static length_t const components = L;$/;"	v	namespace:glm	typeref:typename:length_t const
components	glm/gtx/type_trait.inl	/^	length_t const type<T>::components;$/;"	m	class:glm::type<T>	typeref:typename:length_t const
components	glm/gtx/type_trait.inl	/^	length_t const type<mat<C, R, T, Q> >::components;$/;"	m	class:glm::type<mat<C, R, T, Q> >	typeref:typename:length_t const
components	glm/gtx/type_trait.inl	/^	length_t const type<qua<T, Q> >::components;$/;"	m	class:glm::type<qua<T, Q> >	typeref:typename:length_t const
components	glm/gtx/type_trait.inl	/^	length_t const type<tdualquat<T, Q> >::components;$/;"	m	class:glm::type<tdualquat<T, Q> >	typeref:typename:length_t const
components	glm/gtx/type_trait.inl	/^	length_t const type<vec<L, T, Q> >::components;$/;"	m	class:glm::type<vec<L, T, Q> >	typeref:typename:length_t const
compress	lodepng.cpp	/^unsigned compress(std::vector<unsigned char>& out, const std::vector<unsigned char>& in,$/;"	f	namespace:lodepng	typeref:typename:unsigned
compress	lodepng.cpp	/^unsigned compress(std::vector<unsigned char>& out, const unsigned char* in, size_t insize,$/;"	f	namespace:lodepng	typeref:typename:unsigned
compression_method	lodepng.h	/^  unsigned compression_method;\/*compression method of the original file. Always 0.*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
computeFaceNormal	sphere.cpp	/^	vec4 Sphere::computeFaceNormal(vector<vec4> &face) {$/;"	f	class:Models::Sphere	typeref:typename:vec4
computeFaceNormal	torus.cpp	/^	vec4 Torus::computeFaceNormal(vector<vec4> &face) {$/;"	f	class:Models::Torus	typeref:typename:vec4
computeVertexNormal	sphere.cpp	/^	vec4 Sphere::computeVertexNormal(float alpha,float beta) {$/;"	f	class:Models::Sphere	typeref:typename:vec4
computeVertexNormal	torus.cpp	/^	vec4 Torus::computeVertexNormal(float alpha,float beta) {$/;"	f	class:Models::Torus	typeref:typename:vec4
compute_YCoCgR	glm/gtx/color_space_YCoCg.inl	/^	class compute_YCoCgR {$/;"	c	namespace:glm	file:
compute_YCoCgR	glm/gtx/color_space_YCoCg.inl	/^	class compute_YCoCgR<T, Q, true> {$/;"	c	namespace:glm	file:
compute_abs	glm/detail/compute_common.hpp	/^	struct compute_abs$/;"	s	namespace:glm::detail
compute_abs	glm/detail/compute_common.hpp	/^	struct compute_abs<float, true>$/;"	s	namespace:glm::detail
compute_abs	glm/detail/compute_common.hpp	/^	struct compute_abs<genFIType, false>$/;"	s	namespace:glm::detail
compute_abs	glm/detail/compute_common.hpp	/^	struct compute_abs<genFIType, true>$/;"	s	namespace:glm::detail
compute_abs_vector	glm/detail/func_common.inl	/^	struct compute_abs_vector$/;"	s	namespace:glm::detail	file:
compute_abs_vector	glm/detail/func_common_simd.inl	/^	struct compute_abs_vector<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_abs_vector	glm/detail/func_common_simd.inl	/^	struct compute_abs_vector<4, int, Q, true>$/;"	s	namespace:glm::detail	file:
compute_areCollinear	glm/gtx/vector_query.inl	/^	struct compute_areCollinear<2, T, Q>$/;"	s	namespace:glm::detail	file:
compute_areCollinear	glm/gtx/vector_query.inl	/^	struct compute_areCollinear<3, T, Q>$/;"	s	namespace:glm::detail	file:
compute_areCollinear	glm/gtx/vector_query.inl	/^	struct compute_areCollinear<4, T, Q>$/;"	s	namespace:glm::detail	file:
compute_areCollinear	glm/gtx/vector_query.inl	/^	struct compute_areCollinear{};$/;"	s	namespace:glm::detail	file:
compute_bitfieldBitCountStep	glm/detail/func_integer.inl	/^	struct compute_bitfieldBitCountStep$/;"	s	namespace:glm::detail	file:
compute_bitfieldBitCountStep	glm/detail/func_integer.inl	/^	struct compute_bitfieldBitCountStep<L, T, Q, Aligned, true>$/;"	s	namespace:glm::detail	file:
compute_bitfieldBitCountStep	glm/detail/func_integer_simd.inl	/^	struct compute_bitfieldBitCountStep<4, uint, Q, true, true>$/;"	s	namespace:glm::detail	file:
compute_bitfieldReverseStep	glm/detail/func_integer.inl	/^	struct compute_bitfieldReverseStep$/;"	s	namespace:glm::detail	file:
compute_bitfieldReverseStep	glm/detail/func_integer.inl	/^	struct compute_bitfieldReverseStep<L, T, Q, Aligned, true>$/;"	s	namespace:glm::detail	file:
compute_bitfieldReverseStep	glm/detail/func_integer_simd.inl	/^	struct compute_bitfieldReverseStep<4, uint, Q, true, true>$/;"	s	namespace:glm::detail	file:
compute_ceil	glm/detail/func_common.inl	/^	struct compute_ceil$/;"	s	namespace:glm::detail	file:
compute_ceil	glm/detail/func_common_simd.inl	/^	struct compute_ceil<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_ceilMultiple	glm/gtc/round.inl	/^	struct compute_ceilMultiple<false, false>$/;"	s	namespace:glm::detail	file:
compute_ceilMultiple	glm/gtc/round.inl	/^	struct compute_ceilMultiple<false, true>$/;"	s	namespace:glm::detail	file:
compute_ceilMultiple	glm/gtc/round.inl	/^	struct compute_ceilMultiple<true, true>$/;"	s	namespace:glm::detail	file:
compute_ceilMultiple	glm/gtc/round.inl	/^	struct compute_ceilMultiple{};$/;"	s	namespace:glm::detail	file:
compute_ceilPowerOfTwo	glm/gtc/round.inl	/^	struct compute_ceilPowerOfTwo$/;"	s	namespace:glm::detail	file:
compute_ceilPowerOfTwo	glm/gtc/round.inl	/^	struct compute_ceilPowerOfTwo<L, T, Q, false>$/;"	s	namespace:glm::detail	file:
compute_ceilShift	glm/gtc/round.inl	/^	struct compute_ceilShift$/;"	s	namespace:glm::detail	file:
compute_ceilShift	glm/gtc/round.inl	/^	struct compute_ceilShift<L, T, Q, true>$/;"	s	namespace:glm::detail	file:
compute_clamp_vector	glm/detail/func_common.inl	/^	struct compute_clamp_vector$/;"	s	namespace:glm::detail	file:
compute_clamp_vector	glm/detail/func_common_simd.inl	/^	struct compute_clamp_vector<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_clamp_vector	glm/detail/func_common_simd.inl	/^	struct compute_clamp_vector<4, int, Q, true>$/;"	s	namespace:glm::detail	file:
compute_clamp_vector	glm/detail/func_common_simd.inl	/^	struct compute_clamp_vector<4, uint, Q, true>$/;"	s	namespace:glm::detail	file:
compute_compNormalize	glm/gtx/component_wise.inl	/^	struct compute_compNormalize$/;"	s	namespace:glm::detail	file:
compute_compNormalize	glm/gtx/component_wise.inl	/^	struct compute_compNormalize<L, T, floatType, Q, false, true>$/;"	s	namespace:glm::detail	file:
compute_compNormalize	glm/gtx/component_wise.inl	/^	struct compute_compNormalize<L, T, floatType, Q, true, false>$/;"	s	namespace:glm::detail	file:
compute_compNormalize	glm/gtx/component_wise.inl	/^	struct compute_compNormalize<L, T, floatType, Q, true, true>$/;"	s	namespace:glm::detail	file:
compute_compScale	glm/gtx/component_wise.inl	/^	struct compute_compScale$/;"	s	namespace:glm::detail	file:
compute_compScale	glm/gtx/component_wise.inl	/^	struct compute_compScale<L, T, floatType, Q, false, true>$/;"	s	namespace:glm::detail	file:
compute_compScale	glm/gtx/component_wise.inl	/^	struct compute_compScale<L, T, floatType, Q, true, false>$/;"	s	namespace:glm::detail	file:
compute_compScale	glm/gtx/component_wise.inl	/^	struct compute_compScale<L, T, floatType, Q, true, true>$/;"	s	namespace:glm::detail	file:
compute_cross	glm/detail/func_geometric.inl	/^	struct compute_cross$/;"	s	namespace:glm::detail	file:
compute_cross	glm/detail/func_geometric_simd.inl	/^	struct compute_cross<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_cross_vec2	glm/gtx/exterior_product.inl	/^	struct compute_cross_vec2$/;"	s	namespace:glm::detail	file:
compute_determinant	glm/detail/func_matrix.inl	/^	struct compute_determinant<2, 2, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_determinant	glm/detail/func_matrix.inl	/^	struct compute_determinant<3, 3, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_determinant	glm/detail/func_matrix.inl	/^	struct compute_determinant<4, 4, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_determinant	glm/detail/func_matrix.inl	/^	struct compute_determinant{};$/;"	s	namespace:glm::detail	file:
compute_determinant	glm/detail/func_matrix_simd.inl	/^	struct compute_determinant<4, 4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_distance	glm/detail/func_geometric.inl	/^	struct compute_distance$/;"	s	namespace:glm::detail	file:
compute_distance	glm/detail/func_geometric_simd.inl	/^	struct compute_distance<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_dot	glm/detail/func_geometric.inl	/^	struct compute_dot<vec<1, T, Q>, T, Aligned>$/;"	s	namespace:glm::detail	file:
compute_dot	glm/detail/func_geometric.inl	/^	struct compute_dot<vec<2, T, Q>, T, Aligned>$/;"	s	namespace:glm::detail	file:
compute_dot	glm/detail/func_geometric.inl	/^	struct compute_dot<vec<3, T, Q>, T, Aligned>$/;"	s	namespace:glm::detail	file:
compute_dot	glm/detail/func_geometric.inl	/^	struct compute_dot<vec<4, T, Q>, T, Aligned>$/;"	s	namespace:glm::detail	file:
compute_dot	glm/detail/func_geometric.inl	/^	struct compute_dot{};$/;"	s	namespace:glm::detail	file:
compute_dot	glm/detail/func_geometric_simd.inl	/^	struct compute_dot<vec<4, float, Q>, float, true>$/;"	s	namespace:glm::detail	file:
compute_dot	glm/ext/quaternion_common_simd.inl	/^	struct compute_dot<qua<float, Q>, float, true>$/;"	s	namespace:glm::detail	file:
compute_equal	glm/detail/compute_vector_relational.hpp	/^	struct compute_equal$/;"	s	namespace:glm::detail
compute_faceforward	glm/detail/func_geometric.inl	/^	struct compute_faceforward$/;"	s	namespace:glm::detail	file:
compute_faceforward	glm/detail/func_geometric_simd.inl	/^	struct compute_faceforward<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_findLSB	glm/detail/func_integer.inl	/^		struct compute_findLSB<genIUType, 32>$/;"	s	namespace:glm::detail	file:
compute_findLSB	glm/detail/func_integer.inl	/^		struct compute_findLSB<genIUType, 64>$/;"	s	namespace:glm::detail	file:
compute_findLSB	glm/detail/func_integer.inl	/^	struct compute_findLSB$/;"	s	namespace:glm::detail	file:
compute_findMSB_32	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER int compute_findMSB_32(genIUType Value)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER int
compute_findMSB_64	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER int compute_findMSB_64(genIUType Value)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER int
compute_findMSB_step_vec	glm/detail/func_integer.inl	/^	struct compute_findMSB_step_vec$/;"	s	namespace:glm::detail	file:
compute_findMSB_step_vec	glm/detail/func_integer.inl	/^	struct compute_findMSB_step_vec<L, T, Q, false>$/;"	s	namespace:glm::detail	file:
compute_findMSB_vec	glm/detail/func_integer.inl	/^		struct compute_findMSB_vec<L, T, Q, 32>$/;"	s	namespace:glm::detail	file:
compute_findMSB_vec	glm/detail/func_integer.inl	/^		struct compute_findMSB_vec<L, T, Q, 64>$/;"	s	namespace:glm::detail	file:
compute_findMSB_vec	glm/detail/func_integer.inl	/^	struct compute_findMSB_vec$/;"	s	namespace:glm::detail	file:
compute_floor	glm/detail/func_common.inl	/^	struct compute_floor$/;"	s	namespace:glm::detail	file:
compute_floor	glm/detail/func_common_simd.inl	/^	struct compute_floor<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_floorMultiple	glm/gtc/round.inl	/^	struct compute_floorMultiple<false, false>$/;"	s	namespace:glm::detail	file:
compute_floorMultiple	glm/gtc/round.inl	/^	struct compute_floorMultiple<false, true>$/;"	s	namespace:glm::detail	file:
compute_floorMultiple	glm/gtc/round.inl	/^	struct compute_floorMultiple<true, true>$/;"	s	namespace:glm::detail	file:
compute_floorMultiple	glm/gtc/round.inl	/^	struct compute_floorMultiple{};$/;"	s	namespace:glm::detail	file:
compute_fmod	glm/gtx/common.inl	/^	struct compute_fmod$/;"	s	namespace:glm::detail	file:
compute_fmod	glm/gtx/common.inl	/^	struct compute_fmod<L, T, Q, false>$/;"	s	namespace:glm::detail	file:
compute_fract	glm/detail/func_common.inl	/^	struct compute_fract$/;"	s	namespace:glm::detail	file:
compute_fract	glm/detail/func_common_simd.inl	/^	struct compute_fract<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_half	glm/gtc/packing.inl	/^	struct compute_half$/;"	s	namespace:glm::detail	file:
compute_half	glm/gtc/packing.inl	/^	struct compute_half<1, Q>$/;"	s	namespace:glm::detail	file:
compute_half	glm/gtc/packing.inl	/^	struct compute_half<2, Q>$/;"	s	namespace:glm::detail	file:
compute_half	glm/gtc/packing.inl	/^	struct compute_half<3, Q>$/;"	s	namespace:glm::detail	file:
compute_half	glm/gtc/packing.inl	/^	struct compute_half<4, Q>$/;"	s	namespace:glm::detail	file:
compute_inverse	glm/detail/func_matrix.inl	/^	struct compute_inverse<2, 2, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_inverse	glm/detail/func_matrix.inl	/^	struct compute_inverse<3, 3, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_inverse	glm/detail/func_matrix.inl	/^	struct compute_inverse<4, 4, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_inverse	glm/detail/func_matrix.inl	/^	struct compute_inverse{};$/;"	s	namespace:glm::detail	file:
compute_inverse	glm/detail/func_matrix_simd.inl	/^	struct compute_inverse<4, 4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_inversesqrt	glm/detail/func_exponential.inl	/^	struct compute_inversesqrt$/;"	s	namespace:glm::detail	file:
compute_inversesqrt	glm/detail/func_exponential.inl	/^	struct compute_inversesqrt<L, float, lowp, Aligned>$/;"	s	namespace:glm::detail	file:
compute_isCompNull	glm/gtx/vector_query.inl	/^	struct compute_isCompNull<2, T, Q>$/;"	s	namespace:glm::detail	file:
compute_isCompNull	glm/gtx/vector_query.inl	/^	struct compute_isCompNull<3, T, Q>$/;"	s	namespace:glm::detail	file:
compute_isCompNull	glm/gtx/vector_query.inl	/^	struct compute_isCompNull<4, T, Q>$/;"	s	namespace:glm::detail	file:
compute_isCompNull	glm/gtx/vector_query.inl	/^	struct compute_isCompNull{};$/;"	s	namespace:glm::detail	file:
compute_length	glm/detail/func_geometric.inl	/^	struct compute_length$/;"	s	namespace:glm::detail	file:
compute_length	glm/detail/func_geometric_simd.inl	/^	struct compute_length<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_length2	glm/gtx/norm.inl	/^	struct compute_length2$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<L, double, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<L, float, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<L, int16, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<L, int32, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<L, int64, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<L, int8, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<L, long double, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<L, uint16, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<L, uint32, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<L, uint64, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<L, uint8, Q>$/;"	s	namespace:glm::detail	file:
compute_log2	glm/detail/func_exponential.inl	/^	struct compute_log2$/;"	s	namespace:glm::detail	file:
compute_log2	glm/gtc/integer.inl	/^		struct compute_log2<4, int, Q, false, Aligned>$/;"	s	namespace:glm::detail	file:
compute_log2	glm/gtc/integer.inl	/^	struct compute_log2<L, T, Q, false, Aligned>$/;"	s	namespace:glm::detail	file:
compute_matrixCompMult	glm/detail/func_matrix.inl	/^	struct compute_matrixCompMult$/;"	s	namespace:glm::detail	file:
compute_matrixCompMult	glm/detail/func_matrix_simd.inl	/^	struct compute_matrixCompMult<4, 4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_max_vector	glm/detail/func_common.inl	/^	struct compute_max_vector$/;"	s	namespace:glm::detail	file:
compute_max_vector	glm/detail/func_common_simd.inl	/^	struct compute_max_vector<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_max_vector	glm/detail/func_common_simd.inl	/^	struct compute_max_vector<4, int, Q, true>$/;"	s	namespace:glm::detail	file:
compute_max_vector	glm/detail/func_common_simd.inl	/^	struct compute_max_vector<4, uint, Q, true>$/;"	s	namespace:glm::detail	file:
compute_min_vector	glm/detail/func_common.inl	/^	struct compute_min_vector$/;"	s	namespace:glm::detail	file:
compute_min_vector	glm/detail/func_common_simd.inl	/^	struct compute_min_vector<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_min_vector	glm/detail/func_common_simd.inl	/^	struct compute_min_vector<4, int, Q, true>$/;"	s	namespace:glm::detail	file:
compute_min_vector	glm/detail/func_common_simd.inl	/^	struct compute_min_vector<4, uint, Q, true>$/;"	s	namespace:glm::detail	file:
compute_mix	glm/detail/func_common.inl	/^	struct compute_mix$/;"	s	namespace:glm::detail	file:
compute_mix	glm/detail/func_common.inl	/^	struct compute_mix<T, bool>$/;"	s	namespace:glm::detail	file:
compute_mix_scalar	glm/detail/func_common.inl	/^	struct compute_mix_scalar$/;"	s	namespace:glm::detail	file:
compute_mix_scalar	glm/detail/func_common.inl	/^	struct compute_mix_scalar<L, T, bool, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_mix_vector	glm/detail/func_common.inl	/^	struct compute_mix_vector$/;"	s	namespace:glm::detail	file:
compute_mix_vector	glm/detail/func_common.inl	/^	struct compute_mix_vector<L, T, bool, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_mix_vector	glm/detail/func_common_simd.inl	/^	struct compute_mix_vector<4, float, bool, Q, true>$/;"	s	namespace:glm::detail	file:
compute_mod	glm/detail/func_common.inl	/^	struct compute_mod$/;"	s	namespace:glm::detail	file:
compute_mod	glm/detail/func_common_simd.inl	/^	struct compute_mod<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_normalize	glm/detail/func_geometric.inl	/^	struct compute_normalize$/;"	s	namespace:glm::detail	file:
compute_normalize	glm/detail/func_geometric_simd.inl	/^	struct compute_normalize<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_add	glm/detail/type_quat_simd.inl	/^	struct compute_quat_add<double, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_add	glm/detail/type_quat_simd.inl	/^	struct compute_quat_add<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_div_scalar	glm/detail/type_quat_simd.inl	/^	struct compute_quat_div_scalar<double, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_div_scalar	glm/detail/type_quat_simd.inl	/^	struct compute_quat_div_scalar<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_mul_scalar	glm/detail/type_quat_simd.inl	/^	struct compute_quat_mul_scalar<double, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_mul_scalar	glm/detail/type_quat_simd.inl	/^	struct compute_quat_mul_scalar<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_mul_vec4	glm/detail/type_quat_simd.inl	/^	struct compute_quat_mul_vec4<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_sub	glm/detail/type_quat_simd.inl	/^	struct compute_quat_sub<double, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_sub	glm/detail/type_quat_simd.inl	/^	struct compute_quat_sub<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_rand	glm/gtc/random.inl	/^	struct compute_rand$/;"	s	namespace:glm::detail	file:
compute_rand	glm/gtc/random.inl	/^	struct compute_rand<1, uint8, P>$/;"	s	namespace:glm::detail	file:
compute_rand	glm/gtc/random.inl	/^	struct compute_rand<2, uint8, P>$/;"	s	namespace:glm::detail	file:
compute_rand	glm/gtc/random.inl	/^	struct compute_rand<3, uint8, P>$/;"	s	namespace:glm::detail	file:
compute_rand	glm/gtc/random.inl	/^	struct compute_rand<4, uint8, P>$/;"	s	namespace:glm::detail	file:
compute_rand	glm/gtc/random.inl	/^	struct compute_rand<L, uint16, Q>$/;"	s	namespace:glm::detail	file:
compute_rand	glm/gtc/random.inl	/^	struct compute_rand<L, uint32, Q>$/;"	s	namespace:glm::detail	file:
compute_rand	glm/gtc/random.inl	/^	struct compute_rand<L, uint64, Q>$/;"	s	namespace:glm::detail	file:
compute_reflect	glm/detail/func_geometric.inl	/^	struct compute_reflect$/;"	s	namespace:glm::detail	file:
compute_reflect	glm/detail/func_geometric_simd.inl	/^	struct compute_reflect<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_refract	glm/detail/func_geometric.inl	/^	struct compute_refract$/;"	s	namespace:glm::detail	file:
compute_refract	glm/detail/func_geometric_simd.inl	/^	struct compute_refract<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_rgbToSrgb	glm/gtc/color_space.inl	/^	struct compute_rgbToSrgb$/;"	s	namespace:glm::detail	file:
compute_rgbToSrgb	glm/gtc/color_space.inl	/^	struct compute_rgbToSrgb<4, T, Q>$/;"	s	namespace:glm::detail	file:
compute_round	glm/detail/func_common.inl	/^	struct compute_round$/;"	s	namespace:glm::detail	file:
compute_round	glm/detail/func_common_simd.inl	/^	struct compute_round<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_roundMultiple	glm/gtc/round.inl	/^	struct compute_roundMultiple<false, false>$/;"	s	namespace:glm::detail	file:
compute_roundMultiple	glm/gtc/round.inl	/^	struct compute_roundMultiple<false, true>$/;"	s	namespace:glm::detail	file:
compute_roundMultiple	glm/gtc/round.inl	/^	struct compute_roundMultiple<true, true>$/;"	s	namespace:glm::detail	file:
compute_roundMultiple	glm/gtc/round.inl	/^	struct compute_roundMultiple{};$/;"	s	namespace:glm::detail	file:
compute_sign	glm/detail/func_common.inl	/^	struct compute_sign$/;"	s	namespace:glm::detail	file:
compute_sign	glm/detail/func_common.inl	/^	struct compute_sign<L, T, Q, false, Aligned>$/;"	s	namespace:glm::detail	file:
compute_smoothstep_vector	glm/detail/func_common.inl	/^	struct compute_smoothstep_vector$/;"	s	namespace:glm::detail	file:
compute_smoothstep_vector	glm/detail/func_common_simd.inl	/^	struct compute_smoothstep_vector<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_sqrt	glm/detail/func_exponential.inl	/^	struct compute_sqrt$/;"	s	namespace:glm::detail	file:
compute_sqrt	glm/detail/func_exponential_simd.inl	/^	struct compute_sqrt<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_sqrt	glm/detail/func_exponential_simd.inl	/^	struct compute_sqrt<4, float, aligned_lowp, true>$/;"	s	namespace:glm::detail	file:
compute_srgbToRgb	glm/gtc/color_space.inl	/^	struct compute_srgbToRgb$/;"	s	namespace:glm::detail	file:
compute_srgbToRgb	glm/gtc/color_space.inl	/^	struct compute_srgbToRgb<4, T, Q>$/;"	s	namespace:glm::detail	file:
compute_step_vector	glm/detail/func_common.inl	/^	struct compute_step_vector$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<2, 2, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<2, 3, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<2, 4, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<3, 2, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<3, 3, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<3, 4, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<4, 2, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<4, 3, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<4, 4, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose{};$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix_simd.inl	/^	struct compute_transpose<4, 4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_trunc	glm/detail/func_common.inl	/^	struct compute_trunc$/;"	s	namespace:glm::detail	file:
compute_vec4_add	glm/detail/type_vec4.inl	/^	struct compute_vec4_add$/;"	s	namespace:glm::detail	file:
compute_vec4_add	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_add<double, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_add	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_add<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_and	glm/detail/type_vec4.inl	/^	struct compute_vec4_and$/;"	s	namespace:glm::detail	file:
compute_vec4_and	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_and<T, Q, true, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_and	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_and<T, Q, true, 64, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_bitwise_not	glm/detail/type_vec4.inl	/^	struct compute_vec4_bitwise_not$/;"	s	namespace:glm::detail	file:
compute_vec4_bitwise_not	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_bitwise_not<T, Q, true, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_bitwise_not	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_bitwise_not<T, Q, true, 64, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_div	glm/detail/type_vec4.inl	/^	struct compute_vec4_div$/;"	s	namespace:glm::detail	file:
compute_vec4_div	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_div<double, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_div	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_div<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_div	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_div<float, aligned_lowp, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_equal	glm/detail/type_vec4.inl	/^	struct compute_vec4_equal$/;"	s	namespace:glm::detail	file:
compute_vec4_equal	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_equal<float, Q, false, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_equal	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_equal<int, Q, true, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_mod	glm/detail/type_vec4.inl	/^	struct compute_vec4_mod$/;"	s	namespace:glm::detail	file:
compute_vec4_mul	glm/detail/type_vec4.inl	/^	struct compute_vec4_mul$/;"	s	namespace:glm::detail	file:
compute_vec4_mul	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_mul<double, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_mul	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_mul<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_nequal	glm/detail/type_vec4.inl	/^	struct compute_vec4_nequal$/;"	s	namespace:glm::detail	file:
compute_vec4_nequal	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_nequal<float, Q, false, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_nequal	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_nequal<int, Q, true, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_or	glm/detail/type_vec4.inl	/^	struct compute_vec4_or$/;"	s	namespace:glm::detail	file:
compute_vec4_or	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_or<T, Q, true, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_or	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_or<T, Q, true, 64, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_shift_left	glm/detail/type_vec4.inl	/^	struct compute_vec4_shift_left$/;"	s	namespace:glm::detail	file:
compute_vec4_shift_left	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_shift_left<T, Q, true, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_shift_left	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_shift_left<T, Q, true, 64, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_shift_right	glm/detail/type_vec4.inl	/^	struct compute_vec4_shift_right$/;"	s	namespace:glm::detail	file:
compute_vec4_shift_right	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_shift_right<T, Q, true, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_shift_right	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_shift_right<T, Q, true, 64, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_sub	glm/detail/type_vec4.inl	/^	struct compute_vec4_sub$/;"	s	namespace:glm::detail	file:
compute_vec4_sub	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_sub<double, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_sub	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_sub<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_xor	glm/detail/type_vec4.inl	/^	struct compute_vec4_xor$/;"	s	namespace:glm::detail	file:
compute_vec4_xor	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_xor<T, Q, true, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_xor	glm/detail/type_vec4_simd.inl	/^	struct compute_vec4_xor<T, Q, true, 64, true>$/;"	s	namespace:glm::detail	file:
conjugate	glm/ext/quaternion_common.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> conjugate(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
convertD65XYZToD50XYZ	glm/gtx/color_encoding.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> convertD65XYZToD50XYZ(vec<3, T, Q> const& ColorD65XYZ)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
convertD65XYZToLinearSRGB	glm/gtx/color_encoding.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> convertD65XYZToLinearSRGB(vec<3, T, Q> const& ColorD65XYZ)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
convertLinearSRGBToD50XYZ	glm/gtx/color_encoding.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> convertLinearSRGBToD50XYZ(vec<3, T, Q> const& ColorLinearSRGB)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
convertLinearSRGBToD65XYZ	glm/gtx/color_encoding.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> convertLinearSRGBToD65XYZ(vec<3, T, Q> const& ColorLinearSRGB)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
convertLinearToSRGB	glm/gtc/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<3, float, lowp> convertLinearToSRGB(vec<3, float, lowp> const& ColorLine/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,float,lowp>
convertLinearToSRGB	glm/gtc/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> convertLinearToSRGB(vec<L, T, Q> const& ColorLinear)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
convertLinearToSRGB	glm/gtc/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> convertLinearToSRGB(vec<L, T, Q> const& ColorLinear, T Gamma)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
convertSRGBToLinear	glm/gtc/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> convertSRGBToLinear(vec<L, T, Q> const& ColorSRGB)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
convertSRGBToLinear	glm/gtc/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> convertSRGBToLinear(vec<L, T, Q> const& ColorSRGB, T Gamma)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
cos	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> cos(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
cos_52s	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T cos_52s(T x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
cos_52s	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> cos_52s(vec<L, T, Q> const& x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
cosh	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> cosh(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
cot	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType cot(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
cot	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> cot(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
coth	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType coth(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
coth	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> coth(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
countZeros	lodepng.cpp	/^static unsigned countZeros(const unsigned char* data, size_t size, size_t pos)$/;"	f	typeref:typename:unsigned	file:
countof	glm/detail/setup.hpp	/^		constexpr std::size_t countof(T const (&)[N])$/;"	f	namespace:glm	typeref:typename:std::size_t
cross	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> cross(vec<3, T, Q> const& x, vec<3, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
cross	glm/ext/quaternion_geometric.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> cross(qua<T, Q> const& q1, qua<T, Q> const& q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
cross	glm/gtx/exterior_product.inl	/^	GLM_FUNC_QUALIFIER T cross(vec<2, T, Q> const& x, vec<2, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
cross	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> cross(qua<T, Q> const& q, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
cross	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> cross(vec<3, T, Q> const& v, qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
csc	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType csc(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
csc	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> csc(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
csch	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType csch(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
csch	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> csch(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
cube	cube.cpp	/^	Cube cube;$/;"	v	namespace:Models	typeref:typename:Cube
cubic	glm/gtx/spline.inl	/^	GLM_FUNC_QUALIFIER genType cubic$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
cubicEaseIn	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType cubicEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
cubicEaseInOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType cubicEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
cubicEaseOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType cubicEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
custom_context	lodepng.h	/^  const void* custom_context; \/*optional custom settings for custom functions*\/$/;"	m	struct:LodePNGCompressSettings	typeref:typename:const void *
custom_context	lodepng.h	/^  const void* custom_context; \/*optional custom settings for custom functions*\/$/;"	m	struct:LodePNGDecompressSettings	typeref:typename:const void *
custom_deflate	lodepng.h	/^  unsigned (*custom_deflate)(unsigned char**, size_t*,$/;"	m	struct:LodePNGCompressSettings	typeref:typename:unsigned (*)(unsigned char **,size_t *,const unsigned char *,size_t,const LodePNGCompressSettings *)
custom_inflate	lodepng.h	/^  unsigned (*custom_inflate)(unsigned char**, size_t*,$/;"	m	struct:LodePNGDecompressSettings	typeref:typename:unsigned (*)(unsigned char **,size_t *,const unsigned char *,size_t,const LodePNGDecompressSettings *)
custom_zlib	lodepng.h	/^  unsigned (*custom_zlib)(unsigned char**, size_t*,$/;"	m	struct:LodePNGCompressSettings	typeref:typename:unsigned (*)(unsigned char **,size_t *,const unsigned char *,size_t,const LodePNGCompressSettings *)
custom_zlib	lodepng.h	/^  unsigned (*custom_zlib)(unsigned char**, size_t*,$/;"	m	struct:LodePNGDecompressSettings	typeref:typename:unsigned (*)(unsigned char **,size_t *,const unsigned char *,size_t,const LodePNGDecompressSettings *)
d2r	sphere.cpp	/^	inline float Sphere::d2r(float deg) {$/;"	f	class:Models::Sphere	typeref:typename:float
d2r	torus.cpp	/^	inline float Torus::d2r(float deg) {$/;"	f	class:Models::Torus	typeref:typename:float
data	glm/detail/qualifier.hpp	/^				T data[4];$/;"	m	struct:glm::detail::storage::type	typeref:typename:T[4]
data	glm/detail/qualifier.hpp	/^				T data[L];$/;"	m	struct:glm::detail::storage::type	typeref:typename:T[]
data	glm/detail/qualifier.hpp	/^			T data[L];$/;"	m	struct:glm::detail::storage::type	typeref:typename:T[]
data	glm/detail/type_quat.hpp	/^				typename detail::storage<4, T, detail::is_aligned<Q>::value>::type data;$/;"	m	union:glm::qua::__anon3e5b6d28010a	typeref:typename:detail::storage<4,T,detail::is_aligned<Q>::value>::type
data	glm/detail/type_vec1.hpp	/^				typename detail::storage<1, T, detail::is_aligned<Q>::value>::type data;$/;"	m	union:glm::vec::__anon0beeb0fc010a	typeref:typename:detail::storage<1,T,detail::is_aligned<Q>::value>::type
data	glm/detail/type_vec2.hpp	/^				typename detail::storage<2, T, detail::is_aligned<Q>::value>::type data;$/;"	m	union:glm::vec::__anon0c00c97d010a	typeref:typename:detail::storage<2,T,detail::is_aligned<Q>::value>::type
data	glm/detail/type_vec3.hpp	/^				typename detail::storage<3, T, detail::is_aligned<Q>::value>::type data;$/;"	m	union:glm::vec::__anon0c12e1fe010a	typeref:typename:detail::storage<3,T,detail::is_aligned<Q>::value>::type
data	glm/detail/type_vec4.hpp	/^				typename detail::storage<4, T, detail::is_aligned<Q>::value>::type data;$/;"	m	union:glm::vec::__anon0c24fa7f010a	typeref:typename:detail::storage<4,T,detail::is_aligned<Q>::value>::type
data	glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::i10i10i10i2	typeref:struct:glm::detail::i10i10i10i2::__anon1165e74f0708	file:
data	glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::u10u10u10u2	typeref:struct:glm::detail::u10u10u10u2::__anon1165e74f0608	file:
data	glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::u3u3u2	typeref:struct:glm::detail::u3u3u2::__anon1165e74f0108	file:
data	glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::u4u4	typeref:struct:glm::detail::u4u4::__anon1165e74f0208	file:
data	glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::u4u4u4u4	typeref:struct:glm::detail::u4u4u4u4::__anon1165e74f0308	file:
data	glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::u5u5u5u1	typeref:struct:glm::detail::u5u5u5u1::__anon1165e74f0508	file:
data	glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::u5u6u5	typeref:struct:glm::detail::u5u6u5::__anon1165e74f0408	file:
data	glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::u9u9u9e5	typeref:struct:glm::detail::u9u9u9e5::__anon1165e74f0808	file:
data	lodepng.cpp	/^  unsigned char* data;$/;"	m	struct:ucvector	typeref:typename:unsigned char *	file:
data	lodepng.cpp	/^  unsigned* data;$/;"	m	struct:uivector	typeref:typename:unsigned *	file:
day	lodepng.h	/^  unsigned day;     \/*1-31*\/$/;"	m	struct:LodePNGTime	typeref:typename:unsigned
ddualquat	glm/gtx/dual_quaternion.hpp	/^	typedef highp_ddualquat			ddualquat;$/;"	t	namespace:glm	typeref:typename:highp_ddualquat
ddualquat	glm/gtx/dual_quaternion.hpp	/^	typedef lowp_ddualquat			ddualquat;$/;"	t	namespace:glm	typeref:typename:lowp_ddualquat
ddualquat	glm/gtx/dual_quaternion.hpp	/^	typedef mediump_ddualquat		ddualquat;$/;"	t	namespace:glm	typeref:typename:mediump_ddualquat
decode	lodepng.cpp	/^unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h, const std::string& fi/;"	f	namespace:lodepng	typeref:typename:unsigned
decode	lodepng.cpp	/^unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h, const unsigned char* /;"	f	namespace:lodepng	typeref:typename:unsigned
decode	lodepng.cpp	/^unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h,$/;"	f	namespace:lodepng	typeref:typename:unsigned
decodeGeneric	lodepng.cpp	/^static void decodeGeneric(unsigned char** out, unsigned* w, unsigned* h,$/;"	f	typeref:typename:void	file:
decoder	lodepng.h	/^  LodePNGDecoderSettings decoder; \/*the decoding settings*\/$/;"	m	struct:LodePNGState	typeref:typename:LodePNGDecoderSettings
decompose	glm/gtx/matrix_decompose.inl	/^	GLM_FUNC_QUALIFIER bool decompose(mat<4, 4, T, Q> const& ModelMatrix, vec<3, T, Q> & Scale, qua/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
decompress	lodepng.cpp	/^unsigned decompress(std::vector<unsigned char>& out, const std::vector<unsigned char>& in,$/;"	f	namespace:lodepng	typeref:typename:unsigned
decompress	lodepng.cpp	/^unsigned decompress(std::vector<unsigned char>& out, const unsigned char* in, size_t insize,$/;"	f	namespace:lodepng	typeref:typename:unsigned
defaultp	glm/detail/qualifier.hpp	/^			defaultp = aligned_highp$/;"	e	enum:glm::qualifier
deflate	lodepng.cpp	/^static unsigned deflate(unsigned char** out, size_t* outsize,$/;"	f	typeref:typename:unsigned	file:
deflateDynamic	lodepng.cpp	/^static unsigned deflateDynamic(ucvector* out, size_t* bp, Hash* hash,$/;"	f	typeref:typename:unsigned	file:
deflateFixed	lodepng.cpp	/^static unsigned deflateFixed(ucvector* out, size_t* bp, Hash* hash,$/;"	f	typeref:typename:unsigned	file:
deflateNoCompression	lodepng.cpp	/^static unsigned deflateNoCompression(ucvector* out, const unsigned char* data, size_t datasize)$/;"	f	typeref:typename:unsigned	file:
degrees	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType degrees(genType radians)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
degrees	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> degrees(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
delim_left	glm/gtx/io.hpp	/^			char_type  delim_left;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
delim_right	glm/gtx/io.hpp	/^			char_type  delim_right;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
delimeter	glm/gtx/io.hpp	/^		struct delimeter$/;"	s	namespace:glm::io
delimeter	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER delimeter<CTy>::delimeter(CTy a, CTy b, CTy c)$/;"	f	class:glm::io::delimeter	typeref:typename:GLM_FUNC_QUALIFIER
derivedEulerAngleX	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> derivedEulerAngleX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
derivedEulerAngleY	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> derivedEulerAngleY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
derivedEulerAngleZ	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> derivedEulerAngleZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
detail	glm/detail/_noise.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/_swizzle.hpp	/^	namespace detail$/;"	n	namespace:glm
detail	glm/detail/_swizzle.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/_vectorize.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/compute_common.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/compute_vector_relational.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/func_common.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/func_common_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/func_exponential.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/func_exponential_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/func_geometric.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/func_geometric_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/func_integer.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/func_integer_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/func_matrix.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/func_matrix_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/func_packing_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/func_vector_relational_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/qualifier.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/setup.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/type_float.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/type_half.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/type_half.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/type_quat.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/type_quat_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/type_vec4.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/type_vec4_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/ext/quaternion_common_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/ext/scalar_int_sized.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/ext/scalar_uint_sized.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/ext/scalar_ulp.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtc/bitfield.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtc/color_space.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtc/integer.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtc/packing.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtc/random.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtc/round.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtx/common.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtx/component_wise.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtx/exterior_product.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtx/fast_trigonometry.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtx/hash.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtx/integer.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtx/io.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtx/matrix_decompose.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtx/norm.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtx/string_cast.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtx/vector_query.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/matrix.hpp	/^namespace detail$/;"	n	namespace:glm
determinant	glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER T determinant(mat<C, R, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
diagonal2x2	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> diagonal2x2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
diagonal2x3	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> diagonal2x3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
diagonal2x4	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> diagonal2x4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
diagonal3x2	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> diagonal3x2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
diagonal3x3	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> diagonal3x3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
diagonal3x4	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> diagonal3x4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
diagonal4x2	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> diagonal4x2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
diagonal4x3	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> diagonal4x3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
diagonal4x4	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> diagonal4x4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
diskRand	glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER vec<2, T, defaultp> diskRand(T Radius)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,defaultp>
distance	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER T distance(vec<L, T, Q> const& p0, vec<L, T, Q> const& p1)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
distance	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType distance(genType const& p0, genType const& p1)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
distance2	glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T distance2(T p0, T p1)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
distance2	glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T distance2(vec<L, T, Q> const& p0, vec<L, T, Q> const& p1)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
dmat2	glm/ext/matrix_double2x2.hpp	/^	typedef mat<2, 2, double, defaultp>		dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,defaultp>
dmat2	glm/fwd.hpp	/^	typedef mat<2, 2, f64, defaultp>	dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,defaultp>
dmat2x2	glm/ext/matrix_double2x2.hpp	/^	typedef mat<2, 2, double, defaultp>		dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,defaultp>
dmat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, double, defaultp>	dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,defaultp>
dmat2x3	glm/ext/matrix_double2x3.hpp	/^	typedef mat<2, 3, double, defaultp>		dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,defaultp>
dmat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, double, defaultp>	dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,defaultp>
dmat2x4	glm/ext/matrix_double2x4.hpp	/^	typedef mat<2, 4, double, defaultp>		dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,defaultp>
dmat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, double, defaultp>	dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,defaultp>
dmat3	glm/ext/matrix_double3x3.hpp	/^	typedef mat<3, 3, double, defaultp>		dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,defaultp>
dmat3	glm/fwd.hpp	/^	typedef mat<3, 3, f64, defaultp>	dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,defaultp>
dmat3x2	glm/ext/matrix_double3x2.hpp	/^	typedef mat<3, 2, double, defaultp>		dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,defaultp>
dmat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, double, defaultp>	dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,defaultp>
dmat3x3	glm/ext/matrix_double3x3.hpp	/^	typedef mat<3, 3, double, defaultp>		dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,defaultp>
dmat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, double, defaultp>	dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,defaultp>
dmat3x4	glm/ext/matrix_double3x4.hpp	/^	typedef mat<3, 4, double, defaultp>		dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,defaultp>
dmat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, double, defaultp>	dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,defaultp>
dmat4	glm/ext/matrix_double4x4.hpp	/^	typedef mat<4, 4, double, defaultp>		dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,defaultp>
dmat4	glm/fwd.hpp	/^	typedef mat<4, 4, f64, defaultp>	dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,defaultp>
dmat4x2	glm/ext/matrix_double4x2.hpp	/^	typedef mat<4, 2, double, defaultp>		dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,defaultp>
dmat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, double, defaultp>	dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,defaultp>
dmat4x3	glm/ext/matrix_double4x3.hpp	/^	typedef mat<4, 3, double, defaultp>		dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,defaultp>
dmat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, double, defaultp>	dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,defaultp>
dmat4x4	glm/ext/matrix_double4x4.hpp	/^	typedef mat<4, 4, double, defaultp>		dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,defaultp>
dmat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, double, defaultp>	dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,defaultp>
dot	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER T dot(T x, T y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
dot	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER T dot(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
dot	glm/ext/quaternion_geometric.inl	/^	GLM_FUNC_QUALIFIER T dot(qua<T, Q> const& x, qua<T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
double1	glm/gtx/compatibility.hpp	/^	typedef double						double1;		\/\/!< \\brief double-qualifier floating-point vector with 1 comp/;"	t	namespace:glm	typeref:typename:double
double1x1	glm/gtx/compatibility.hpp	/^	typedef double						double1x1;		\/\/!< \\brief double-qualifier floating-point matrix with 1 co/;"	t	namespace:glm	typeref:typename:double
double2	glm/gtx/compatibility.hpp	/^	typedef vec<2, double, highp>		double2;		\/\/!< \\brief double-qualifier floating-point vector /;"	t	namespace:glm	typeref:typename:vec<2,double,highp>
double2x2	glm/gtx/compatibility.hpp	/^	typedef mat<2, 2, double, highp>		double2x2;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<2,2,double,highp>
double2x3	glm/gtx/compatibility.hpp	/^	typedef mat<2, 3, double, highp>		double2x3;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<2,3,double,highp>
double2x4	glm/gtx/compatibility.hpp	/^	typedef mat<2, 4, double, highp>		double2x4;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<2,4,double,highp>
double3	glm/gtx/compatibility.hpp	/^	typedef vec<3, double, highp>		double3;		\/\/!< \\brief double-qualifier floating-point vector /;"	t	namespace:glm	typeref:typename:vec<3,double,highp>
double3x2	glm/gtx/compatibility.hpp	/^	typedef mat<3, 2, double, highp>		double3x2;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<3,2,double,highp>
double3x3	glm/gtx/compatibility.hpp	/^	typedef mat<3, 3, double, highp>		double3x3;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<3,3,double,highp>
double3x4	glm/gtx/compatibility.hpp	/^	typedef mat<3, 4, double, highp>		double3x4;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<3,4,double,highp>
double4	glm/gtx/compatibility.hpp	/^	typedef vec<4, double, highp>		double4;		\/\/!< \\brief double-qualifier floating-point vector /;"	t	namespace:glm	typeref:typename:vec<4,double,highp>
double4x2	glm/gtx/compatibility.hpp	/^	typedef mat<4, 2, double, highp>		double4x2;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<4,2,double,highp>
double4x3	glm/gtx/compatibility.hpp	/^	typedef mat<4, 3, double, highp>		double4x3;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<4,3,double,highp>
double4x4	glm/gtx/compatibility.hpp	/^	typedef mat<4, 4, double, highp>		double4x4;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<4,4,double,highp>
dquat	glm/ext/quaternion_double.hpp	/^	typedef qua<double, defaultp>		dquat;$/;"	t	namespace:glm	typeref:typename:qua<double,defaultp>
dquat	glm/fwd.hpp	/^	typedef qua<double, defaultp>		dquat;$/;"	t	namespace:glm	typeref:typename:qua<double,defaultp>
drawScene	main_file.cpp	/^void drawScene(GLFWwindow* window, float angle) {$/;"	f	typeref:typename:void
drawSolid	cube.cpp	/^	void Cube::drawSolid(bool smooth) {$/;"	f	class:Models::Cube	typeref:typename:void
drawSolid	sphere.cpp	/^	void Sphere::drawSolid(bool smooth) {$/;"	f	class:Models::Sphere	typeref:typename:void
drawSolid	teapot.cpp	/^	void Teapot::drawSolid(bool smooth) {$/;"	f	class:Models::Teapot	typeref:typename:void
drawSolid	torus.cpp	/^	void Torus::drawSolid(bool smooth) {$/;"	f	class:Models::Torus	typeref:typename:void
drawSolid	walls.cpp	/^    void Walls::drawSolid(bool smooth) {$/;"	f	class:Models::Walls	typeref:typename:void
drawWire	model.cpp	/^	void Model::drawWire(bool smooth) {$/;"	f	class:Models::Model	typeref:typename:void
dual	glm/gtx/dual_quaternion.hpp	/^		qua<T, Q> real, dual;$/;"	m	struct:glm::tdualquat	typeref:typename:qua<T,Q>
dual_quat_identity	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> dual_quat_identity()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
dualquat	glm/gtx/dual_quaternion.hpp	/^	typedef highp_fdualquat			dualquat;$/;"	t	namespace:glm	typeref:typename:highp_fdualquat
dualquat	glm/gtx/dual_quaternion.hpp	/^	typedef lowp_fdualquat			dualquat;$/;"	t	namespace:glm	typeref:typename:lowp_fdualquat
dualquat	glm/gtx/dual_quaternion.hpp	/^	typedef mediump_fdualquat		dualquat;$/;"	t	namespace:glm	typeref:typename:mediump_fdualquat
dualquat_cast	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> dualquat_cast(mat<2, 4, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
dualquat_cast	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> dualquat_cast(mat<3, 4, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
dvec1	glm/ext/vector_double1.hpp	/^	typedef vec<1, double, defaultp>		dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,defaultp>
dvec1	glm/fwd.hpp	/^	typedef vec<1, f64, defaultp>		dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,defaultp>
dvec2	glm/ext/vector_double2.hpp	/^	typedef vec<2, double, defaultp>		dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,defaultp>
dvec2	glm/fwd.hpp	/^	typedef vec<2, f64, defaultp>		dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,defaultp>
dvec3	glm/ext/vector_double3.hpp	/^	typedef vec<3, double, defaultp>		dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,defaultp>
dvec3	glm/fwd.hpp	/^	typedef vec<3, f64, defaultp>		dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,defaultp>
dvec4	glm/ext/vector_double4.hpp	/^	typedef vec<4, double, defaultp>		dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,defaultp>
dvec4	glm/fwd.hpp	/^	typedef vec<4, f64, defaultp>		dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,defaultp>
dword	glm/gtx/raw_data.hpp	/^	typedef detail::uint32		dword;$/;"	t	namespace:glm	typeref:typename:detail::uint32
e	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType e()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
elasticEaseIn	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType elasticEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
elasticEaseInOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType elasticEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
elasticEaseOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType elasticEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
elem	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T const& elem(size_t i) const{ return (reinterpret_cast<const T*>(_buffer))/;"	f	struct:glm::detail::_swizzle_base0	typeref:typename:GLM_FUNC_QUALIFIER T const &
elem	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T& elem(size_t i){ return (reinterpret_cast<T*>(_buffer))[i]; }$/;"	f	struct:glm::detail::_swizzle_base0	typeref:typename:GLM_FUNC_QUALIFIER T &
encode	lodepng.cpp	/^unsigned encode(const std::string& filename,$/;"	f	namespace:lodepng	typeref:typename:unsigned
encode	lodepng.cpp	/^unsigned encode(std::vector<unsigned char>& out, const unsigned char* in, unsigned w, unsigned h/;"	f	namespace:lodepng	typeref:typename:unsigned
encode	lodepng.cpp	/^unsigned encode(std::vector<unsigned char>& out,$/;"	f	namespace:lodepng	typeref:typename:unsigned
encodeLZ77	lodepng.cpp	/^static unsigned encodeLZ77(uivector* out, Hash* hash,$/;"	f	typeref:typename:unsigned	file:
encoder	lodepng.h	/^  LodePNGEncoderSettings encoder; \/*the encoding settings*\/$/;"	m	struct:LodePNGState	typeref:typename:LodePNGEncoderSettings
end	glm/gtx/range.hpp	/^	inline typename genType::value_type * end(genType& v)$/;"	f	namespace:glm	typeref:typename:genType::value_type *
end	glm/gtx/range.hpp	/^	inline typename genType::value_type const * end(genType const& v)$/;"	f	namespace:glm	typeref:typename:genType::value_type const *
epsilon	glm/ext/scalar_constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType epsilon()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
epsilonEqual	glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER bool epsilonEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
epsilonEqual	glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> epsilonEqual(qua<T, Q> const& x, qua<T, Q> const& y, T const/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
epsilonEqual	glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> epsilonEqual(vec<L, T, Q> const& x, vec<L, T, Q> const& y, T/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
epsilonEqual	glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> epsilonEqual(vec<L, T, Q> const& x, vec<L, T, Q> const& y, v/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
epsilonNotEqual	glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER bool epsilonNotEqual(double const& x, double const& y, double const& epsilon/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
epsilonNotEqual	glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER bool epsilonNotEqual(float const& x, float const& y, float const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
epsilonNotEqual	glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> epsilonNotEqual(qua<T, Q> const& x, qua<T, Q> const& y, T co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
epsilonNotEqual	glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> epsilonNotEqual(vec<L, T, Q> const& x, vec<L, T, Q> const& y/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
equal	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> equal(vec<L, T, Q> const& x, vec<L, T, Q> cons/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
equal	glm/ext/matrix_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<C, bool, Q> equal(mat<C, R, T, Q> const& a, mat<C, R, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<C,bool,Q>
equal	glm/ext/quaternion_relational.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> equal(qua<T, Q> const& x, qua<T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
equal	glm/ext/quaternion_relational.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> equal(qua<T, Q> const& x, qua<T, Q> const& y, T epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
equal	glm/ext/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool equal(genType const& x, genType const& y, genType const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
equal	glm/ext/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool equal(genType const& x, genType const& y, int MaxULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
equal	glm/ext/vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> equal(vec<L, T, Q> const& x, vec<L, T, Q> cons/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
equal	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool equal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
error	lodepng.h	/^  unsigned error;$/;"	m	struct:LodePNGState	typeref:typename:unsigned
error_callback	main_file.cpp	/^void error_callback(int error, const char* description) {$/;"	f	typeref:typename:void
euclidean	glm/gtx/polar_coordinates.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> euclidean$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
euler	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType euler()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
eulerAngleX	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleXY	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleXY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleXYX	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleXYX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleXYZ	glm/gtx/euler_angles.inl	/^    GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleXYZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleXZ	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleXZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleXZX	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleXZX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleXZY	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleXZY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleY	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleYX	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleYX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleYXY	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleYXY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleYXZ	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleYXZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleYZ	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleYZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleYZX	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleYZX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleYZY	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleYZY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleZ	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleZX	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleZX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleZXY	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleZXY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleZXZ	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleZXZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleZY	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleZY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleZYX	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleZYX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleZYZ	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleZYZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngles	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> eulerAngles(qua<T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
exp	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> exp(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
exp	glm/ext/quaternion_exponential.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> exp(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
exp2	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER genType exp2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
exp2	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> exp2(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
exponent	glm/detail/type_float.hpp	/^		GLM_CONSTEXPR int_type exponent() const { return (i >> 23) & ((1 << 8) - 1); }$/;"	f	union:glm::detail::float_t	typeref:typename:GLM_CONSTEXPR int_type
exponent	glm/detail/type_float.hpp	/^		GLM_CONSTEXPR int_type exponent() const { return (i >> 52) & ((int_type(1) << 11) - 1); }$/;"	f	union:glm::detail::float_t	typeref:typename:GLM_CONSTEXPR int_type
exponentialEaseIn	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType exponentialEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
exponentialEaseInOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType exponentialEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
exponentialEaseOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType exponentialEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
extend	glm/gtx/extend.inl	/^	GLM_FUNC_QUALIFIER genType extend$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
extend	glm/gtx/extend.inl	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> extend$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
extend	glm/gtx/extend.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> extend$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
extend	glm/gtx/extend.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> extend$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
extractEulerAngleXYX	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleXYX(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleXYZ	glm/gtx/euler_angles.inl	/^    GLM_FUNC_DECL void extractEulerAngleXYZ(mat<4, 4, T, defaultp> const& M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL void
extractEulerAngleXZX	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleXZX(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleXZY	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleXZY(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleYXY	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleYXY(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleYXZ	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleYXZ(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleYZX	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleYZX(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleYZY	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleYZY(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleZXY	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleZXY(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleZXZ	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleZXZ(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleZYX	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleZYX(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleZYZ	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleZYZ(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractMatrixRotation	glm/gtx/matrix_interpolation.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> extractMatrixRotation(mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
extractRealComponent	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER T extractRealComponent(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
f	glm/detail/type_float.hpp	/^		float_type f;$/;"	m	union:glm::detail::float_t	typeref:typename:float_type
f	glm/detail/type_half.inl	/^		float f;$/;"	m	union:glm::detail::uif32	typeref:typename:float	file:
f32	glm/fwd.hpp	/^	typedef float					f32;$/;"	t	namespace:glm	typeref:typename:float
f32	glm/gtc/type_precision.hpp	/^	typedef float32 f32;$/;"	t	namespace:glm	typeref:typename:float32
f32	glm/gtc/type_precision.hpp	/^	typedef highp_float32_t f32;$/;"	t	namespace:glm	typeref:typename:highp_float32_t
f32	glm/gtc/type_precision.hpp	/^	typedef lowp_f32 f32;$/;"	t	namespace:glm	typeref:typename:lowp_f32
f32	glm/gtc/type_precision.hpp	/^	typedef mediump_float32 f32;$/;"	t	namespace:glm	typeref:typename:mediump_float32
f32mat1	glm/gtx/number_precision.hpp	/^	typedef f32			f32mat1;	\/\/!< \\brief Single-qualifier floating-point scalar. (from GLM_GTX_num/;"	t	namespace:glm::gtx	typeref:typename:f32
f32mat1x1	glm/gtx/number_precision.hpp	/^	typedef f32			f32mat1x1;	\/\/!< \\brief Single-qualifier floating-point scalar. (from GLM_GTX_n/;"	t	namespace:glm::gtx	typeref:typename:f32
f32mat2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	f32mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
f32mat2	glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, defaultp> f32mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
f32mat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
f32mat2x2	glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, defaultp> f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
f32mat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, f32, defaultp>	f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,defaultp>
f32mat2x3	glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f32, defaultp> f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,defaultp>
f32mat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, f32, defaultp>	f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,defaultp>
f32mat2x4	glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f32, defaultp> f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,defaultp>
f32mat3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	f32mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
f32mat3	glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, defaultp> f32mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
f32mat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, f32, defaultp>	f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,defaultp>
f32mat3x2	glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f32, defaultp> f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,defaultp>
f32mat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
f32mat3x3	glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, defaultp> f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
f32mat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, f32, defaultp>	f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,defaultp>
f32mat3x4	glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f32, defaultp> f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,defaultp>
f32mat4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	f32mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
f32mat4	glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, defaultp> f32mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
f32mat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, f32, defaultp>	f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,defaultp>
f32mat4x2	glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f32, defaultp> f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,defaultp>
f32mat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, f32, defaultp>	f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,defaultp>
f32mat4x3	glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f32, defaultp> f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,defaultp>
f32mat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
f32mat4x4	glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, defaultp> f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
f32quat	glm/fwd.hpp	/^	typedef qua<f32, defaultp>			f32quat;$/;"	t	namespace:glm	typeref:typename:qua<f32,defaultp>
f32quat	glm/gtc/type_precision.hpp	/^	typedef qua<f32, defaultp> f32quat;$/;"	t	namespace:glm	typeref:typename:qua<f32,defaultp>
f32vec1	glm/fwd.hpp	/^	typedef vec<1, f32, defaultp>		f32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,defaultp>
f32vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, f32, defaultp> f32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,defaultp>
f32vec1	glm/gtx/number_precision.hpp	/^	typedef f32			f32vec1;    \/\/!< \\brief Single-qualifier floating-point scalar. (from GLM_GTX_/;"	t	namespace:glm::gtx	typeref:typename:f32
f32vec2	glm/fwd.hpp	/^	typedef vec<2, f32, defaultp>		f32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,defaultp>
f32vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, f32, defaultp> f32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,defaultp>
f32vec3	glm/fwd.hpp	/^	typedef vec<3, f32, defaultp>		f32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,defaultp>
f32vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, f32, defaultp> f32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,defaultp>
f32vec4	glm/fwd.hpp	/^	typedef vec<4, f32, defaultp>		f32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,defaultp>
f32vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, f32, defaultp> f32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,defaultp>
f64	glm/fwd.hpp	/^	typedef double					f64;$/;"	t	namespace:glm	typeref:typename:double
f64	glm/gtc/type_precision.hpp	/^		typedef float64 f64;$/;"	t	namespace:glm	typeref:typename:float64
f64	glm/gtc/type_precision.hpp	/^	typedef highp_float64_t f64;$/;"	t	namespace:glm	typeref:typename:highp_float64_t
f64	glm/gtc/type_precision.hpp	/^	typedef lowp_f64 f64;$/;"	t	namespace:glm	typeref:typename:lowp_f64
f64	glm/gtc/type_precision.hpp	/^	typedef mediump_float64 f64;$/;"	t	namespace:glm	typeref:typename:mediump_float64
f64mat1	glm/gtx/number_precision.hpp	/^	typedef f64			f64mat1;	\/\/!< \\brief Double-qualifier floating-point scalar. (from GLM_GTX_num/;"	t	namespace:glm::gtx	typeref:typename:f64
f64mat1x1	glm/gtx/number_precision.hpp	/^	typedef f64			f64mat1x1;	\/\/!< \\brief Double-qualifier floating-point scalar. (from GLM_GTX_n/;"	t	namespace:glm::gtx	typeref:typename:f64
f64mat2	glm/fwd.hpp	/^	typedef mat<2, 2, f64, defaultp>	f64mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,defaultp>
f64mat2	glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f64, defaultp> f64mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,defaultp>
f64mat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, f64, defaultp>	f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,defaultp>
f64mat2x2	glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f64, defaultp> f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,defaultp>
f64mat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, f64, defaultp>	f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f64,defaultp>
f64mat2x3	glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f64, defaultp> f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f64,defaultp>
f64mat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, f64, defaultp>	f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f64,defaultp>
f64mat2x4	glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f64, defaultp> f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f64,defaultp>
f64mat3	glm/fwd.hpp	/^	typedef mat<3, 3, f64, defaultp>	f64mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,defaultp>
f64mat3	glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f64, defaultp> f64mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,defaultp>
f64mat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, f64, defaultp>	f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f64,defaultp>
f64mat3x2	glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f64, defaultp> f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f64,defaultp>
f64mat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, f64, defaultp>	f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,defaultp>
f64mat3x3	glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f64, defaultp> f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,defaultp>
f64mat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, f64, defaultp>	f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f64,defaultp>
f64mat3x4	glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f64, defaultp> f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f64,defaultp>
f64mat4	glm/fwd.hpp	/^	typedef mat<4, 4, f64, defaultp>	f64mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,defaultp>
f64mat4	glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f64, defaultp> f64mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,defaultp>
f64mat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, f64, defaultp>	f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f64,defaultp>
f64mat4x2	glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f64, defaultp> f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f64,defaultp>
f64mat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, f64, defaultp>	f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f64,defaultp>
f64mat4x3	glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f64, defaultp> f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f64,defaultp>
f64mat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, f64, defaultp>	f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,defaultp>
f64mat4x4	glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f64, defaultp> f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,defaultp>
f64quat	glm/fwd.hpp	/^	typedef qua<f64, defaultp>			f64quat;$/;"	t	namespace:glm	typeref:typename:qua<f64,defaultp>
f64quat	glm/gtc/type_precision.hpp	/^	typedef qua<f64, defaultp> f64quat;$/;"	t	namespace:glm	typeref:typename:qua<f64,defaultp>
f64vec1	glm/fwd.hpp	/^	typedef vec<1, f64, defaultp>		f64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,defaultp>
f64vec1	glm/gtc/type_precision.hpp	/^		typedef vec<1, f64, defaultp> f64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,defaultp>
f64vec1	glm/gtx/number_precision.hpp	/^	typedef f64			f64vec1;    \/\/!< \\brief Single-qualifier floating-point scalar. (from GLM_GTX_/;"	t	namespace:glm::gtx	typeref:typename:f64
f64vec2	glm/fwd.hpp	/^	typedef vec<2, f64, defaultp>		f64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,defaultp>
f64vec2	glm/gtc/type_precision.hpp	/^		typedef vec<2, f64, defaultp> f64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,defaultp>
f64vec3	glm/fwd.hpp	/^	typedef vec<3, f64, defaultp>		f64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,defaultp>
f64vec3	glm/gtc/type_precision.hpp	/^		typedef vec<3, f64, defaultp> f64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,defaultp>
f64vec4	glm/fwd.hpp	/^	typedef vec<4, f64, defaultp>		f64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,defaultp>
f64vec4	glm/gtc/type_precision.hpp	/^		typedef vec<4, f64, defaultp> f64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,defaultp>
faceforward	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType faceforward(genType const& N, genType const& I, genType const& Nref)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
faceforward	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> faceforward(vec<L, T, Q> const& N, vec<L, T, Q> const& I, vec<L/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
factorial	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER genType factorial(genType const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
factorial	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> factorial($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
factorial	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> factorial($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
factorial	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> factorial($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
fade	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> fade(vec<2, T, Q> const& t)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
fade	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> fade(vec<3, T, Q> const& t)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
fade	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> fade(vec<4, T, Q> const& t)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
fastAcos	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastAcos(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastAcos	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastAcos(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastAsin	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastAsin(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastAsin	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastAsin(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastAtan	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastAtan(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastAtan	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastAtan(T y, T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastAtan	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastAtan(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastAtan	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastAtan(vec<L, T, Q> const& y, vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastCos	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastCos(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastCos	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastCos(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastDistance	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER T fastDistance(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastDistance	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastDistance(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastExp	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER T fastExp(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastExp	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastExp(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastExp2	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER genType fastExp2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastExp2	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastExp2(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastInverseSqrt	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastInverseSqrt(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastInverseSqrt	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastInverseSqrt(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastLength	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER T fastLength(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastLength	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastLength(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastLog	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER genType fastLog(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastLog	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastLog(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastLog2	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER genType fastLog2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastLog2	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastLog2(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastMix	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> fastMix(qua<T, Q> const& x, qua<T, Q> const& y, T const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
fastNormalize	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastNormalize(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastNormalize	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastNormalize(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastNormalizeDot	glm/gtx/normalize_dot.inl	/^	GLM_FUNC_QUALIFIER T fastNormalizeDot(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastPow	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER T fastPow(T x, int y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastPow	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER genType fastPow(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastPow	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastPow(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastPow	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastPow(vec<L, T, Q> const& x, vec<L, int, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastSin	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastSin(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastSin	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastSin(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastSqrt	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastSqrt(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastSqrt	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastSqrt(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastTan	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastTan(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastTan	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastTan(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fclamp	glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER genType fclamp(genType x, genType minVal, genType maxVal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fclamp	glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fclamp(vec<L, T, Q> const& x, T minVal, T maxVal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fclamp	glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fclamp(vec<L, T, Q> const& x, vec<L, T, Q> const& minVal, vec<L/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fdualquat	glm/gtx/dual_quaternion.hpp	/^	typedef highp_fdualquat			fdualquat;$/;"	t	namespace:glm	typeref:typename:highp_fdualquat
fdualquat	glm/gtx/dual_quaternion.hpp	/^	typedef lowp_fdualquat			fdualquat;$/;"	t	namespace:glm	typeref:typename:lowp_fdualquat
fdualquat	glm/gtx/dual_quaternion.hpp	/^	typedef mediump_fdualquat		fdualquat;$/;"	t	namespace:glm	typeref:typename:mediump_fdualquat
fill_	glm/gtx/io.hpp	/^			char_type       fill_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:char_type
filter	lodepng.cpp	/^static unsigned filter(unsigned char* out, const unsigned char* in, unsigned w, unsigned h,$/;"	f	typeref:typename:unsigned	file:
filterScanline	lodepng.cpp	/^static void filterScanline(unsigned char* out, const unsigned char* scanline, const unsigned cha/;"	f	typeref:typename:void	file:
filter_method	lodepng.h	/^  unsigned filter_method;     \/*filter method of the original file*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
filter_palette_zero	lodepng.h	/^  unsigned filter_palette_zero;$/;"	m	struct:LodePNGEncoderSettings	typeref:typename:unsigned
filter_strategy	lodepng.h	/^  LodePNGFilterStrategy filter_strategy;$/;"	m	struct:LodePNGEncoderSettings	typeref:typename:LodePNGFilterStrategy
findLSB	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER int findLSB(genIUType Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
findLSB	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, int, Q> findLSB(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>
findMSB	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER int findMSB(genIUType v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
findMSB	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, int, Q> findMSB(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>
flags_	glm/gtx/io.hpp	/^			flags_type      flags_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:flags_type
flags_type	glm/gtx/io.hpp	/^			typedef ::std::ios_base::fmtflags      flags_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:::std::ios_base::fmtflags
fliplr	glm/gtx/matrix_factorisation.inl	/^	GLM_FUNC_QUALIFIER mat<C, R, T, Q> fliplr(mat<C, R, T, Q> const& in)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<C,R,T,Q>
flipud	glm/gtx/matrix_factorisation.inl	/^	GLM_FUNC_QUALIFIER mat<C, R, T, Q> flipud(mat<C, R, T, Q> const& in)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<C,R,T,Q>
float1	glm/gtx/compatibility.hpp	/^	typedef float						float1;			\/\/!< \\brief single-qualifier floating-point vector with 1 compo/;"	t	namespace:glm	typeref:typename:float
float1x1	glm/gtx/compatibility.hpp	/^	typedef float						float1x1;		\/\/!< \\brief single-qualifier floating-point matrix with 1 comp/;"	t	namespace:glm	typeref:typename:float
float2	glm/gtx/compatibility.hpp	/^	typedef vec<2, float, highp>		float2;			\/\/!< \\brief single-qualifier floating-point vector w/;"	t	namespace:glm	typeref:typename:vec<2,float,highp>
float2half	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint16 float2half(glm::uint32 f)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint16
float2packed10	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 float2packed10(glm::uint32 f)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
float2packed11	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 float2packed11(glm::uint32 f)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
float2x2	glm/gtx/compatibility.hpp	/^	typedef mat<2, 2, float, highp>		float2x2;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<2,2,float,highp>
float2x3	glm/gtx/compatibility.hpp	/^	typedef mat<2, 3, float, highp>		float2x3;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<2,3,float,highp>
float2x4	glm/gtx/compatibility.hpp	/^	typedef mat<2, 4, float, highp>		float2x4;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<2,4,float,highp>
float3	glm/gtx/compatibility.hpp	/^	typedef vec<3, float, highp>		float3;			\/\/!< \\brief single-qualifier floating-point vector w/;"	t	namespace:glm	typeref:typename:vec<3,float,highp>
float32	glm/fwd.hpp	/^	typedef float					float32;$/;"	t	namespace:glm	typeref:typename:float
float32	glm/gtc/type_precision.hpp	/^	typedef float float32;$/;"	t	namespace:glm	typeref:typename:float
float32_t	glm/fwd.hpp	/^	typedef float					float32_t;$/;"	t	namespace:glm	typeref:typename:float
float32_t	glm/gtc/type_precision.hpp	/^	typedef float32 float32_t;$/;"	t	namespace:glm	typeref:typename:float32
float32_t	glm/gtc/type_precision.hpp	/^	typedef highp_float32_t float32_t;$/;"	t	namespace:glm	typeref:typename:highp_float32_t
float32_t	glm/gtc/type_precision.hpp	/^	typedef lowp_float32_t float32_t;$/;"	t	namespace:glm	typeref:typename:lowp_float32_t
float32_t	glm/gtc/type_precision.hpp	/^	typedef mediump_float32 float32_t;$/;"	t	namespace:glm	typeref:typename:mediump_float32
float3x2	glm/gtx/compatibility.hpp	/^	typedef mat<3, 2, float, highp>		float3x2;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<3,2,float,highp>
float3x3	glm/gtx/compatibility.hpp	/^	typedef mat<3, 3, float, highp>		float3x3;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<3,3,float,highp>
float3x4	glm/gtx/compatibility.hpp	/^	typedef mat<3, 4, float, highp>		float3x4;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<3,4,float,highp>
float4	glm/gtx/compatibility.hpp	/^	typedef vec<4, float, highp>		float4;			\/\/!< \\brief single-qualifier floating-point vector w/;"	t	namespace:glm	typeref:typename:vec<4,float,highp>
float4x2	glm/gtx/compatibility.hpp	/^	typedef mat<4, 2, float, highp>		float4x2;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<4,2,float,highp>
float4x3	glm/gtx/compatibility.hpp	/^	typedef mat<4, 3, float, highp>		float4x3;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<4,3,float,highp>
float4x4	glm/gtx/compatibility.hpp	/^	typedef mat<4, 4, float, highp>		float4x4;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<4,4,float,highp>
float64	glm/fwd.hpp	/^	typedef double					float64;$/;"	t	namespace:glm	typeref:typename:double
float64	glm/gtc/type_precision.hpp	/^	typedef double float64;$/;"	t	namespace:glm	typeref:typename:double
float64_t	glm/fwd.hpp	/^	typedef double					float64_t;$/;"	t	namespace:glm	typeref:typename:double
float64_t	glm/gtc/type_precision.hpp	/^		typedef float64 float64_t;$/;"	t	namespace:glm	typeref:typename:float64
float64_t	glm/gtc/type_precision.hpp	/^	typedef highp_float64_t float64_t;$/;"	t	namespace:glm	typeref:typename:highp_float64_t
float64_t	glm/gtc/type_precision.hpp	/^	typedef lowp_float64_t float64_t;$/;"	t	namespace:glm	typeref:typename:lowp_float64_t
float64_t	glm/gtc/type_precision.hpp	/^	typedef mediump_float64 float64_t;$/;"	t	namespace:glm	typeref:typename:mediump_float64
floatBitsToInt	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER int floatBitsToInt(float const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
floatBitsToInt	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, int, Q> floatBitsToInt(vec<L, float, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>
floatBitsToUint	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER uint floatBitsToUint(float const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
floatBitsToUint	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, uint, Q> floatBitsToUint(vec<L, float, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint,Q>
floatNormalize	glm/gtx/float_notmalize.inl	/^	GLM_FUNC_QUALIFIER vec<L, float, Q> floatNormalize(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,float,Q>
floatTo10bit	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint floatTo10bit(float x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint
floatTo11bit	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint floatTo11bit(float x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint
float_distance	glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER int float_distance(float x, float y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
float_distance	glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER int64 float_distance(double x, double y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
float_distance	glm/ext/vector_ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, int, Q> float_distance(vec<L, float, Q> const& x, vec<L, float, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>
float_distance	glm/ext/vector_ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, int64, Q> float_distance(vec<L, double, Q> const& x, vec<L, double, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int64,Q>
float_t	glm/detail/type_float.hpp	/^		GLM_CONSTEXPR float_t(float_type Num = 0.0f) : f(Num) {}$/;"	f	union:glm::detail::float_t	typeref:typename:GLM_CONSTEXPR
float_t	glm/detail/type_float.hpp	/^		GLM_CONSTEXPR float_t(float_type Num = static_cast<float_type>(0)) : f(Num) {}$/;"	f	union:glm::detail::float_t	typeref:typename:GLM_CONSTEXPR
float_t	glm/detail/type_float.hpp	/^	union float_t$/;"	u	namespace:glm::detail
float_t	glm/detail/type_float.hpp	/^	union float_t<double>$/;"	u	namespace:glm::detail
float_t	glm/detail/type_float.hpp	/^	union float_t<float>$/;"	u	namespace:glm::detail
float_type	glm/detail/type_float.hpp	/^		typedef double float_type;$/;"	t	union:glm::detail::float_t	typeref:typename:double
float_type	glm/detail/type_float.hpp	/^		typedef float float_type;$/;"	t	union:glm::detail::float_t	typeref:typename:float
flog2	lodepng.cpp	/^static float flog2(float f)$/;"	f	typeref:typename:float	file:
floor	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> floor(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
floorMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType floorMultiple(genType Source, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
floorMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> floorMultiple(vec<L, T, Q> const& Source, vec<L, T, Q> const& M/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
floorPowerOfTwo	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType floorPowerOfTwo(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
floorPowerOfTwo	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> floorPowerOfTwo(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fma	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType fma(genType const& a, genType const& b, genType const& c)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fmat2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	fmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
fmat2	glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, defaultp> fmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
fmat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	fmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
fmat2x2	glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, defaultp> fmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
fmat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, f32, defaultp>	fmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,defaultp>
fmat2x3	glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f32, defaultp> fmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,defaultp>
fmat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, f32, defaultp>	fmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,defaultp>
fmat2x4	glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f32, defaultp> fmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,defaultp>
fmat3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	fmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
fmat3	glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, defaultp> fmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
fmat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, f32, defaultp>	fmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,defaultp>
fmat3x2	glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f32, defaultp> fmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,defaultp>
fmat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	fmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
fmat3x3	glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, defaultp> fmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
fmat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, f32, defaultp>	fmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,defaultp>
fmat3x4	glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f32, defaultp> fmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,defaultp>
fmat4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	fmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
fmat4	glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, defaultp> fmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
fmat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, f32, defaultp>	fmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,defaultp>
fmat4x2	glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f32, defaultp> fmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,defaultp>
fmat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, f32, defaultp>	fmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,defaultp>
fmat4x3	glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f32, defaultp> fmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,defaultp>
fmat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	fmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
fmat4x4	glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, defaultp> fmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
fmax	glm/ext/scalar_common.inl	/^		GLM_FUNC_QUALIFIER T fmax(T a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fmax	glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER T fmax(T a, T b, T c)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fmax	glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER T fmax(T a, T b, T c, T d)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fmax	glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmax(vec<L, T, Q> const& a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmax	glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmax(vec<L, T, Q> const& a, vec<L, T, Q> const& b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmax	glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmax(vec<L, T, Q> const& a, vec<L, T, Q> const& b, vec<L, T, Q>/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmax	glm/gtx/extended_min_max.inl	/^		GLM_FUNC_QUALIFIER genType fmax(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fmax	glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmax(vec<L, T, Q> const& a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmax	glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmax(vec<L, T, Q> const& a, vec<L, T, Q> const& b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmin	glm/ext/scalar_common.inl	/^		GLM_FUNC_QUALIFIER T fmin(T a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fmin	glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER T fmin(T a, T b, T c)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fmin	glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER T fmin(T a, T b, T c, T d)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fmin	glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmin(vec<L, T, Q> const& a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmin	glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmin(vec<L, T, Q> const& a, vec<L, T, Q> const& b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmin	glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmin(vec<L, T, Q> const& a, vec<L, T, Q> const& b, vec<L, T, Q>/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmin	glm/gtx/extended_min_max.inl	/^		GLM_FUNC_QUALIFIER genType fmin(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fmin	glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmin(vec<L, T, Q> const& a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmin	glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmin(vec<L, T, Q> const& a, vec<L, T, Q> const& b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmod	glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER genType fmod(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fmod	glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmod(vec<L, T, Q> const& x, T y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmod	glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmod(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
force_palette	lodepng.h	/^  unsigned force_palette;$/;"	m	struct:LodePNGEncoderSettings	typeref:typename:unsigned
format	glm/gtx/string_cast.inl	/^	GLM_FUNC_QUALIFIER std::string format(const char* msg, ...)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER std::string
format_punct	glm/gtx/io.hpp	/^		class format_punct : public std::locale::facet$/;"	c	namespace:glm::io
format_punct	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER format_punct<CTy>::format_punct(format_punct const& a)$/;"	f	class:glm::io::format_punct	typeref:typename:GLM_FUNC_QUALIFIER
format_punct	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER format_punct<CTy>::format_punct(size_t a)$/;"	f	class:glm::io::format_punct	typeref:typename:GLM_FUNC_QUALIFIER
format_saver	glm/gtx/io.hpp	/^		typedef basic_format_saver<char>     format_saver;$/;"	t	namespace:glm::io	typeref:typename:basic_format_saver<char>
formatted	glm/gtx/io.hpp	/^			bool       formatted;$/;"	m	class:glm::io::format_punct	typeref:typename:bool
formatted	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ios<CTy, CTr>& formatted(std::basic_ios<CTy, CTr>& ios)$/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ios<CTy,CTr> &
four_over_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType four_over_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
fquat	glm/fwd.hpp	/^	typedef qua<float, defaultp>		fquat;$/;"	t	namespace:glm	typeref:typename:qua<float,defaultp>
fract	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType fract(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fract	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fract(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fragmentShader	shaderprogram.h	/^	GLuint fragmentShader; \/\/Fragment shader handle$/;"	m	class:ShaderProgram	typeref:typename:GLuint
freeOpenGLProgram	main_file.cpp	/^void freeOpenGLProgram(GLFWwindow* window) {$/;"	f	typeref:typename:void
freeShaders	shaderprogram.cpp	/^void freeShaders(){$/;"	f	typeref:typename:void
freelist	lodepng.cpp	/^  BPMNode** freelist;$/;"	m	struct:BPMLists	typeref:typename:BPMNode **	file:
frexp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType frexp(genType x, int& exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
frexp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> frexp(vec<L, T, Q> const& v, vec<L, int, Q>& exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
frustum	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustum(T left, T right, T bottom, T top, T nearVal, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
frustumLH	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustumLH(T left, T right, T bottom, T top, T nearVal/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
frustumLH_NO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustumLH_NO(T left, T right, T bottom, T top, T near/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
frustumLH_ZO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustumLH_ZO(T left, T right, T bottom, T top, T near/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
frustumNO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustumNO(T left, T right, T bottom, T top, T nearVal/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
frustumRH	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustumRH(T left, T right, T bottom, T top, T nearVal/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
frustumRH_NO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustumRH_NO(T left, T right, T bottom, T top, T near/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
frustumRH_ZO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustumRH_ZO(T left, T right, T bottom, T top, T near/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
frustumZO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustumZO(T left, T right, T bottom, T top, T nearVal/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
functor1	glm/detail/_vectorize.hpp	/^	struct functor1<vec, 1, R, T, Q>$/;"	s	namespace:glm::detail
functor1	glm/detail/_vectorize.hpp	/^	struct functor1<vec, 2, R, T, Q>$/;"	s	namespace:glm::detail
functor1	glm/detail/_vectorize.hpp	/^	struct functor1<vec, 3, R, T, Q>$/;"	s	namespace:glm::detail
functor1	glm/detail/_vectorize.hpp	/^	struct functor1<vec, 4, R, T, Q>$/;"	s	namespace:glm::detail
functor1	glm/detail/_vectorize.hpp	/^	struct functor1{};$/;"	s	namespace:glm::detail
functor2	glm/detail/_vectorize.hpp	/^	struct functor2<vec, 1, T, Q>$/;"	s	namespace:glm::detail
functor2	glm/detail/_vectorize.hpp	/^	struct functor2<vec, 2, T, Q>$/;"	s	namespace:glm::detail
functor2	glm/detail/_vectorize.hpp	/^	struct functor2<vec, 3, T, Q>$/;"	s	namespace:glm::detail
functor2	glm/detail/_vectorize.hpp	/^	struct functor2<vec, 4, T, Q>$/;"	s	namespace:glm::detail
functor2	glm/detail/_vectorize.hpp	/^	struct functor2{};$/;"	s	namespace:glm::detail
functor2_vec_sca	glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<vec, 1, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_sca	glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<vec, 2, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_sca	glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<vec, 3, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_sca	glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<vec, 4, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_sca	glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca{};$/;"	s	namespace:glm::detail
fvec1	glm/fwd.hpp	/^	typedef vec<1, f32, defaultp>		fvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,defaultp>
fvec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, float, defaultp> fvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,defaultp>
fvec2	glm/fwd.hpp	/^	typedef vec<2, f32, defaultp>		fvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,defaultp>
fvec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, float, defaultp> fvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,defaultp>
fvec3	glm/fwd.hpp	/^	typedef vec<3, f32, defaultp>		fvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,defaultp>
fvec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, float, defaultp> fvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,defaultp>
fvec4	glm/fwd.hpp	/^	typedef vec<4, f32, defaultp>		fvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,defaultp>
fvec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, float, defaultp> fvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,defaultp>
g	glm/detail/type_vec2.hpp	/^				struct{ T r, g; };$/;"	m	struct:glm::vec::__anon0c00c97d010a::__anon0c00c97d0308	typeref:typename:T
g	glm/detail/type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::vec::__anon0c00c97d060a	typeref:typename:T
g	glm/detail/type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::vec::__anon0c12e1fe010a::__anon0c12e1fe0308	typeref:typename:T
g	glm/detail/type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::vec::__anon0c12e1fe060a	typeref:typename:T
g	glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::vec::__anon0c24fa7f010a::__anon0c24fa7f0308	typeref:typename:T
g	glm/detail/type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::vec::__anon0c24fa7f060a	typeref:typename:T
gauss	glm/gtx/functions.inl	/^	GLM_FUNC_QUALIFIER T gauss$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
gaussRand	glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER genType gaussRand(genType Mean, genType Deviation)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
gaussRand	glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> gaussRand(vec<L, T, Q> const& Mean, vec<L, T, Q> const& Deviati/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
genTypeEnum	glm/detail/qualifier.hpp	/^	enum genTypeEnum$/;"	g	namespace:glm::detail
genTypeTrait	glm/detail/qualifier.hpp	/^	struct genTypeTrait$/;"	s	namespace:glm::detail
generateFixedDistanceTree	lodepng.cpp	/^static unsigned generateFixedDistanceTree(HuffmanTree* tree)$/;"	f	typeref:typename:unsigned	file:
generateFixedLitLenTree	lodepng.cpp	/^static unsigned generateFixedLitLenTree(HuffmanTree* tree)$/;"	f	typeref:typename:unsigned	file:
generateSphereFace	sphere.cpp	/^	void Sphere::generateSphereFace(vector<vec4> &vertices, vector<vec4> &vertexNormals, vec4 &face/;"	f	class:Models::Sphere	typeref:typename:void
generateSpherePoint	sphere.cpp	/^	vec4 Sphere::generateSpherePoint(float r,float alpha,float beta) {$/;"	f	class:Models::Sphere	typeref:typename:vec4
generateTorusFace	torus.cpp	/^	void Torus::generateTorusFace(vector<vec4> &vertices, vector<vec4> &vertexNormals, vec4 &faceNo/;"	f	class:Models::Torus	typeref:typename:void
generateTorusPoint	torus.cpp	/^	vec4 Torus::generateTorusPoint(float R,float r,float alpha,float beta) {$/;"	f	class:Models::Torus	typeref:typename:vec4
geometryShader	shaderprogram.h	/^	GLuint geometryShader; \/\/Geometry shader handle$/;"	m	class:ShaderProgram	typeref:typename:GLuint
getHash	lodepng.cpp	/^static unsigned getHash(const unsigned char* data, size_t size, size_t pos)$/;"	f	typeref:typename:unsigned	file:
getNumColorChannels	lodepng.cpp	/^static unsigned getNumColorChannels(LodePNGColorType colortype)$/;"	f	typeref:typename:unsigned	file:
getPaletteTranslucency	lodepng.cpp	/^static unsigned getPaletteTranslucency(const unsigned char* palette, size_t palettesize)$/;"	f	typeref:typename:unsigned	file:
getPixelColorRGBA16	lodepng.cpp	/^static void getPixelColorRGBA16(unsigned short* r, unsigned short* g, unsigned short* b, unsigne/;"	f	typeref:typename:void	file:
getPixelColorRGBA8	lodepng.cpp	/^static void getPixelColorRGBA8(unsigned char* r, unsigned char* g,$/;"	f	typeref:typename:void	file:
getPixelColorsRGBA8	lodepng.cpp	/^static void getPixelColorsRGBA8(unsigned char* buffer, size_t numpixels,$/;"	f	typeref:typename:void	file:
getTreeInflateDynamic	lodepng.cpp	/^static unsigned getTreeInflateDynamic(HuffmanTree* tree_ll, HuffmanTree* tree_d,$/;"	f	typeref:typename:unsigned	file:
getTreeInflateFixed	lodepng.cpp	/^static void getTreeInflateFixed(HuffmanTree* tree_ll, HuffmanTree* tree_d)$/;"	f	typeref:typename:void	file:
getValueRequiredBits	lodepng.cpp	/^static unsigned getValueRequiredBits(unsigned char value)$/;"	f	typeref:typename:unsigned	file:
getView	Camera.cpp	/^glm::mat4 Camera::getView() {$/;"	f	class:Camera	typeref:typename:glm::mat4
get_facet	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER FTy const& get_facet(std::basic_ios<CTy, CTr>& ios)$/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER FTy const &
glm	glm/common.hpp	/^namespace glm$/;"	n
glm	glm/detail/_noise.hpp	/^namespace glm{$/;"	n
glm	glm/detail/_swizzle.hpp	/^namespace glm$/;"	n
glm	glm/detail/_swizzle.hpp	/^namespace glm{$/;"	n
glm	glm/detail/_vectorize.hpp	/^namespace glm{$/;"	n
glm	glm/detail/compute_common.hpp	/^namespace glm{$/;"	n
glm	glm/detail/compute_vector_relational.hpp	/^namespace glm{$/;"	n
glm	glm/detail/func_common.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/func_common.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_common_simd.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_exponential.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_exponential_simd.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_geometric.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_geometric_simd.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_integer.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_integer_simd.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_matrix.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_matrix_simd.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_packing.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/func_packing_simd.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_trigonometric.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/func_vector_relational.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/func_vector_relational_simd.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/glm.cpp	/^namespace glm$/;"	n	file:
glm	glm/detail/qualifier.hpp	/^namespace glm$/;"	n
glm	glm/detail/setup.hpp	/^	namespace glm$/;"	n
glm	glm/detail/setup.hpp	/^namespace glm$/;"	n
glm	glm/detail/setup.hpp	/^namespace glm{$/;"	n
glm	glm/detail/type_float.hpp	/^namespace glm{$/;"	n
glm	glm/detail/type_half.hpp	/^namespace glm{$/;"	n
glm	glm/detail/type_half.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/type_mat2x2.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat2x2.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_mat2x3.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat2x3.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_mat2x4.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat2x4.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_mat3x2.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat3x2.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_mat3x3.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat3x3.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_mat3x4.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat3x4.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_mat4x2.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat4x2.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_mat4x3.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat4x3.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_mat4x4.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat4x4.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_mat4x4_simd.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_quat.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_quat.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/type_quat_simd.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/type_vec1.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_vec1.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_vec2.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_vec2.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_vec3.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_vec3.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_vec4.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_vec4.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/type_vec4_simd.inl	/^namespace glm{$/;"	n	file:
glm	glm/exponential.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_clip_space.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_clip_space.inl	/^namespace glm$/;"	n	file:
glm	glm/ext/matrix_double2x2.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double2x2_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double2x3.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double2x3_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double2x4.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double2x4_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double3x2.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double3x2_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double3x3.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double3x3_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double3x4.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double3x4_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double4x2.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double4x2_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double4x3.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double4x3_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double4x4.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_double4x4_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float2x2.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float2x2_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float2x3.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float2x3_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float2x4.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float2x4_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float3x2.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float3x2_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float3x3.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float3x3_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float3x4.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float3x4_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float4x2.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float4x2_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float4x3.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float4x3_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float4x4.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_float4x4_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_projection.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_projection.inl	/^namespace glm$/;"	n	file:
glm	glm/ext/matrix_relational.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_relational.inl	/^namespace glm$/;"	n	file:
glm	glm/ext/matrix_transform.hpp	/^namespace glm$/;"	n
glm	glm/ext/matrix_transform.inl	/^namespace glm$/;"	n	file:
glm	glm/ext/quaternion_common.hpp	/^namespace glm$/;"	n
glm	glm/ext/quaternion_common.inl	/^namespace glm$/;"	n	file:
glm	glm/ext/quaternion_common_simd.inl	/^namespace glm{$/;"	n	file:
glm	glm/ext/quaternion_double.hpp	/^namespace glm$/;"	n
glm	glm/ext/quaternion_double_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/quaternion_exponential.hpp	/^namespace glm$/;"	n
glm	glm/ext/quaternion_exponential.inl	/^namespace glm$/;"	n	file:
glm	glm/ext/quaternion_float.hpp	/^namespace glm$/;"	n
glm	glm/ext/quaternion_float_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/quaternion_geometric.hpp	/^namespace glm$/;"	n
glm	glm/ext/quaternion_geometric.inl	/^namespace glm$/;"	n	file:
glm	glm/ext/quaternion_relational.hpp	/^namespace glm$/;"	n
glm	glm/ext/quaternion_relational.inl	/^namespace glm$/;"	n	file:
glm	glm/ext/quaternion_transform.hpp	/^namespace glm$/;"	n
glm	glm/ext/quaternion_transform.inl	/^namespace glm$/;"	n	file:
glm	glm/ext/quaternion_trigonometric.hpp	/^namespace glm$/;"	n
glm	glm/ext/quaternion_trigonometric.inl	/^namespace glm$/;"	n	file:
glm	glm/ext/scalar_common.hpp	/^namespace glm$/;"	n
glm	glm/ext/scalar_common.inl	/^namespace glm$/;"	n	file:
glm	glm/ext/scalar_constants.hpp	/^namespace glm$/;"	n
glm	glm/ext/scalar_constants.inl	/^namespace glm$/;"	n	file:
glm	glm/ext/scalar_int_sized.hpp	/^namespace glm{$/;"	n
glm	glm/ext/scalar_relational.hpp	/^namespace glm$/;"	n
glm	glm/ext/scalar_relational.inl	/^namespace glm$/;"	n	file:
glm	glm/ext/scalar_uint_sized.hpp	/^namespace glm{$/;"	n
glm	glm/ext/scalar_ulp.hpp	/^namespace glm$/;"	n
glm	glm/ext/scalar_ulp.inl	/^namespace glm$/;"	n	file:
glm	glm/ext/scalar_ulp.inl	/^namespace glm{$/;"	n	file:
glm	glm/ext/vector_bool1.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_bool1_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_bool2.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_bool2_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_bool3.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_bool3_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_bool4.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_bool4_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_common.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_common.inl	/^namespace glm$/;"	n	file:
glm	glm/ext/vector_double1.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_double1_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_double2.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_double2_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_double3.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_double3_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_double4.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_double4_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_float1.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_float1_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_float2.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_float2_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_float3.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_float3_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_float4.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_float4_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_int1.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_int1_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_int2.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_int2_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_int3.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_int3_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_int4.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_int4_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_relational.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_relational.inl	/^namespace glm$/;"	n	file:
glm	glm/ext/vector_uint1.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_uint1_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_uint2.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_uint2_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_uint3.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_uint3_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_uint4.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_uint4_precision.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_ulp.hpp	/^namespace glm$/;"	n
glm	glm/ext/vector_ulp.inl	/^namespace glm$/;"	n	file:
glm	glm/fwd.hpp	/^namespace glm$/;"	n
glm	glm/geometric.hpp	/^namespace glm$/;"	n
glm	glm/gtc/bitfield.hpp	/^namespace glm$/;"	n
glm	glm/gtc/bitfield.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtc/color_space.hpp	/^namespace glm$/;"	n
glm	glm/gtc/color_space.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtc/constants.hpp	/^namespace glm$/;"	n
glm	glm/gtc/constants.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/epsilon.hpp	/^namespace glm$/;"	n
glm	glm/gtc/epsilon.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/integer.hpp	/^namespace glm$/;"	n
glm	glm/gtc/integer.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtc/matrix_access.hpp	/^namespace glm$/;"	n
glm	glm/gtc/matrix_access.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/matrix_integer.hpp	/^namespace glm$/;"	n
glm	glm/gtc/matrix_inverse.hpp	/^namespace glm$/;"	n
glm	glm/gtc/matrix_inverse.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/noise.hpp	/^namespace glm$/;"	n
glm	glm/gtc/noise.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtc/packing.hpp	/^namespace glm$/;"	n
glm	glm/gtc/packing.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtc/quaternion.hpp	/^namespace glm$/;"	n
glm	glm/gtc/quaternion.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/random.hpp	/^namespace glm$/;"	n
glm	glm/gtc/random.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtc/reciprocal.hpp	/^namespace glm$/;"	n
glm	glm/gtc/reciprocal.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/round.hpp	/^namespace glm$/;"	n
glm	glm/gtc/round.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtc/type_aligned.hpp	/^namespace glm$/;"	n
glm	glm/gtc/type_precision.hpp	/^namespace glm$/;"	n
glm	glm/gtc/type_precision.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/type_ptr.hpp	/^namespace glm$/;"	n
glm	glm/gtc/type_ptr.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/associated_min_max.hpp	/^namespace glm$/;"	n
glm	glm/gtx/associated_min_max.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/bit.hpp	/^namespace glm$/;"	n
glm	glm/gtx/bit.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/closest_point.hpp	/^namespace glm$/;"	n
glm	glm/gtx/closest_point.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/color_encoding.hpp	/^namespace glm$/;"	n
glm	glm/gtx/color_encoding.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/color_space.hpp	/^namespace glm$/;"	n
glm	glm/gtx/color_space.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/color_space_YCoCg.hpp	/^namespace glm$/;"	n
glm	glm/gtx/color_space_YCoCg.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/common.hpp	/^namespace glm$/;"	n
glm	glm/gtx/common.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/compatibility.hpp	/^namespace glm$/;"	n
glm	glm/gtx/compatibility.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/component_wise.hpp	/^namespace glm$/;"	n
glm	glm/gtx/component_wise.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/dual_quaternion.hpp	/^namespace glm$/;"	n
glm	glm/gtx/dual_quaternion.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/easing.hpp	/^namespace glm{$/;"	n
glm	glm/gtx/easing.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/euler_angles.hpp	/^namespace glm$/;"	n
glm	glm/gtx/euler_angles.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/extend.hpp	/^namespace glm$/;"	n
glm	glm/gtx/extend.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/extended_min_max.hpp	/^namespace glm$/;"	n
glm	glm/gtx/extended_min_max.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/exterior_product.hpp	/^namespace glm$/;"	n
glm	glm/gtx/exterior_product.inl	/^namespace glm {$/;"	n	file:
glm	glm/gtx/fast_exponential.hpp	/^namespace glm$/;"	n
glm	glm/gtx/fast_exponential.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/fast_square_root.hpp	/^namespace glm$/;"	n
glm	glm/gtx/fast_square_root.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/fast_trigonometry.hpp	/^namespace glm$/;"	n
glm	glm/gtx/fast_trigonometry.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/float_notmalize.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/functions.hpp	/^namespace glm$/;"	n
glm	glm/gtx/functions.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/gradient_paint.hpp	/^namespace glm$/;"	n
glm	glm/gtx/gradient_paint.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/handed_coordinate_space.hpp	/^namespace glm$/;"	n
glm	glm/gtx/handed_coordinate_space.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/hash.inl	/^namespace glm {$/;"	n	file:
glm	glm/gtx/integer.hpp	/^namespace glm$/;"	n
glm	glm/gtx/integer.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/intersect.hpp	/^namespace glm$/;"	n
glm	glm/gtx/intersect.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/io.hpp	/^namespace glm$/;"	n
glm	glm/gtx/io.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/log_base.hpp	/^namespace glm$/;"	n
glm	glm/gtx/log_base.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/matrix_cross_product.hpp	/^namespace glm$/;"	n
glm	glm/gtx/matrix_cross_product.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/matrix_decompose.hpp	/^namespace glm$/;"	n
glm	glm/gtx/matrix_decompose.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/matrix_factorisation.hpp	/^namespace glm$/;"	n
glm	glm/gtx/matrix_factorisation.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/matrix_interpolation.hpp	/^namespace glm$/;"	n
glm	glm/gtx/matrix_interpolation.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/matrix_major_storage.hpp	/^namespace glm$/;"	n
glm	glm/gtx/matrix_major_storage.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/matrix_operation.hpp	/^namespace glm$/;"	n
glm	glm/gtx/matrix_operation.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/matrix_query.hpp	/^namespace glm$/;"	n
glm	glm/gtx/matrix_query.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/matrix_transform_2d.hpp	/^namespace glm$/;"	n
glm	glm/gtx/matrix_transform_2d.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/mixed_product.hpp	/^namespace glm$/;"	n
glm	glm/gtx/mixed_product.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/norm.hpp	/^namespace glm$/;"	n
glm	glm/gtx/norm.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/normal.hpp	/^namespace glm$/;"	n
glm	glm/gtx/normal.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/normalize_dot.hpp	/^namespace glm$/;"	n
glm	glm/gtx/normalize_dot.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/number_precision.hpp	/^namespace glm{$/;"	n
glm	glm/gtx/number_precision.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/optimum_pow.hpp	/^namespace glm{$/;"	n
glm	glm/gtx/optimum_pow.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/orthonormalize.hpp	/^namespace glm$/;"	n
glm	glm/gtx/orthonormalize.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/perpendicular.hpp	/^namespace glm$/;"	n
glm	glm/gtx/perpendicular.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/polar_coordinates.hpp	/^namespace glm$/;"	n
glm	glm/gtx/polar_coordinates.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/projection.hpp	/^namespace glm$/;"	n
glm	glm/gtx/projection.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/quaternion.hpp	/^namespace glm$/;"	n
glm	glm/gtx/quaternion.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/range.hpp	/^namespace glm$/;"	n
glm	glm/gtx/raw_data.hpp	/^namespace glm$/;"	n
glm	glm/gtx/rotate_normalized_axis.hpp	/^namespace glm$/;"	n
glm	glm/gtx/rotate_normalized_axis.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/rotate_vector.hpp	/^namespace glm$/;"	n
glm	glm/gtx/rotate_vector.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/scalar_multiplication.hpp	/^namespace glm$/;"	n
glm	glm/gtx/scalar_relational.hpp	/^namespace glm$/;"	n
glm	glm/gtx/scalar_relational.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/spline.hpp	/^namespace glm$/;"	n
glm	glm/gtx/spline.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/std_based_type.hpp	/^namespace glm$/;"	n
glm	glm/gtx/std_based_type.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/string_cast.hpp	/^namespace glm$/;"	n
glm	glm/gtx/string_cast.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/texture.hpp	/^namespace glm$/;"	n
glm	glm/gtx/texture.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/transform.hpp	/^namespace glm$/;"	n
glm	glm/gtx/transform.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/transform2.hpp	/^namespace glm$/;"	n
glm	glm/gtx/transform2.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/type_aligned.hpp	/^namespace glm$/;"	n
glm	glm/gtx/type_aligned.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/type_trait.hpp	/^namespace glm$/;"	n
glm	glm/gtx/type_trait.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/vec_swizzle.hpp	/^namespace glm {$/;"	n
glm	glm/gtx/vector_angle.hpp	/^namespace glm$/;"	n
glm	glm/gtx/vector_angle.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/vector_query.hpp	/^namespace glm$/;"	n
glm	glm/gtx/vector_query.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/wrap.hpp	/^namespace glm$/;"	n
glm	glm/gtx/wrap.inl	/^namespace glm$/;"	n	file:
glm	glm/integer.hpp	/^namespace glm$/;"	n
glm	glm/matrix.hpp	/^namespace glm {$/;"	n
glm	glm/packing.hpp	/^namespace glm$/;"	n
glm	glm/trigonometric.hpp	/^namespace glm$/;"	n
glm	glm/vector_relational.hpp	/^namespace glm$/;"	n
glm_dvec2	glm/simd/platform.h	/^	typedef glm_f64vec2		glm_dvec2;$/;"	t	typeref:typename:glm_f64vec2
glm_dvec4	glm/simd/platform.h	/^	typedef glm_f64vec4		glm_dvec4;$/;"	t	typeref:typename:glm_f64vec4
glm_f32vec4	glm/simd/platform.h	/^	typedef __m128			glm_f32vec4;$/;"	t	typeref:typename:__m128
glm_f64vec2	glm/simd/platform.h	/^	typedef __m128d			glm_f64vec2;$/;"	t	typeref:typename:__m128d
glm_f64vec4	glm/simd/platform.h	/^	typedef __m256d			glm_f64vec4;$/;"	t	typeref:typename:__m256d
glm_i128_interleave	glm/simd/integer.h	/^GLM_FUNC_QUALIFIER glm_uvec4 glm_i128_interleave(glm_uvec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_uvec4
glm_i128_interleave2	glm/simd/integer.h	/^GLM_FUNC_QUALIFIER glm_uvec4 glm_i128_interleave2(glm_uvec4 x, glm_uvec4 y)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_uvec4
glm_i32vec4	glm/simd/platform.h	/^	typedef __m128i			glm_i32vec4;$/;"	t	typeref:typename:__m128i
glm_i64vec2	glm/simd/platform.h	/^	typedef __m128i			glm_i64vec2;$/;"	t	typeref:typename:__m128i
glm_i64vec4	glm/simd/platform.h	/^	typedef __m256i			glm_i64vec4;$/;"	t	typeref:typename:__m256i
glm_ivec4	glm/simd/platform.h	/^	typedef glm_i32vec4		glm_ivec4;$/;"	t	typeref:typename:glm_i32vec4
glm_ivec4_abs	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_ivec4 glm_ivec4_abs(glm_ivec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_ivec4
glm_mat4_add	glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_add(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[/;"	f	typeref:typename:GLM_FUNC_QUALIFIER void
glm_mat4_determinant	glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_determinant(glm_vec4 const m[4])$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_mat4_determinant_highp	glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_determinant_highp(glm_vec4 const in[4])$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_mat4_determinant_lowp	glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_determinant_lowp(glm_vec4 const m[4])$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_mat4_inverse	glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_inverse(glm_vec4 const in[4], glm_vec4 out[4])$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER void
glm_mat4_inverse_lowp	glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_inverse_lowp(glm_vec4 const in[4], glm_vec4 out[4])$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER void
glm_mat4_matrixCompMult	glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_matrixCompMult(glm_vec4 const in1[4], glm_vec4 const in2[4], gl/;"	f	typeref:typename:GLM_FUNC_QUALIFIER void
glm_mat4_mul	glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_mul(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[/;"	f	typeref:typename:GLM_FUNC_QUALIFIER void
glm_mat4_mul_vec4	glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_mul_vec4(glm_vec4 const m[4], glm_vec4 v)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_mat4_outerProduct	glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_outerProduct(__m128 const& c, __m128 const& r, __m128 out[4])$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER void
glm_mat4_sub	glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_sub(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[/;"	f	typeref:typename:GLM_FUNC_QUALIFIER void
glm_mat4_transpose	glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_transpose(glm_vec4 const in[4], glm_vec4 out[4])$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER void
glm_shared	glm/CMakeLists.txt	/^add_library(glm_shared SHARED ${ROOT_TEXT} ${ROOT_MD} ${ROOT_NAT}$/;"	t
glm_static	glm/CMakeLists.txt	/^add_library(glm_static STATIC ${ROOT_TEXT} ${ROOT_MD} ${ROOT_NAT}$/;"	t
glm_u32vec4	glm/simd/platform.h	/^	typedef __m128i			glm_u32vec4;$/;"	t	typeref:typename:__m128i
glm_u64vec2	glm/simd/platform.h	/^	typedef __m128i			glm_u64vec2;$/;"	t	typeref:typename:__m128i
glm_u64vec4	glm/simd/platform.h	/^	typedef __m256i			glm_u64vec4;$/;"	t	typeref:typename:__m256i
glm_uvec4	glm/simd/platform.h	/^	typedef glm_u32vec4		glm_uvec4;$/;"	t	typeref:typename:glm_u32vec4
glm_vec1_add	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_add(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec1_div	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_div(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec1_dot	glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_dot(glm_vec4 v1, glm_vec4 v2)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec1_fma	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_fma(glm_f32vec4 a, glm_f32vec4 b, glm_f32vec4 c)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec1_mul	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_mul(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec1_sqrt_lowp	glm/simd/exponential.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_sqrt_lowp(glm_f32vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec1_sub	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_sub(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4	glm/simd/platform.h	/^	typedef glm_f32vec4		glm_vec4;$/;"	t	typeref:typename:glm_f32vec4
glm_vec4_abs	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_abs(glm_f32vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4_add	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_add(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4_ceil	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_ceil(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_clamp	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_clamp(glm_vec4 v, glm_vec4 minVal, glm_vec4 maxVal)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_cross	glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_cross(glm_vec4 v1, glm_vec4 v2)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_distance	glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_distance(glm_vec4 p0, glm_vec4 p1)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_div	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_div(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4_div_lowp	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_div_lowp(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4_dot	glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_dot(glm_vec4 v1, glm_vec4 v2)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_faceforward	glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_faceforward(glm_vec4 N, glm_vec4 I, glm_vec4 Nref)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_floor	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_floor(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_fma	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_fma(glm_f32vec4 a, glm_f32vec4 b, glm_f32vec4 c)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4_fract	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_fract(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_inf	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_inf(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_length	glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_length(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_mix	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_mix(glm_vec4 v1, glm_vec4 v2, glm_vec4 a)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_mod	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_mod(glm_vec4 x, glm_vec4 y)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_mul	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_mul(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4_mul_mat4	glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER __m128 glm_vec4_mul_mat4(glm_vec4 v, glm_vec4 const m[4])$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER __m128
glm_vec4_nan	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_nan(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_normalize	glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_normalize(glm_vec4 v)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_reflect	glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_reflect(glm_vec4 I, glm_vec4 N)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_refract	glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER __m128 glm_vec4_refract(glm_vec4 I, glm_vec4 N, glm_vec4 eta)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER __m128
glm_vec4_round	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_round(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_roundEven	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_roundEven(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_sign	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_sign(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_smoothstep	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_smoothstep(glm_vec4 edge0, glm_vec4 edge1, glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_sqrt_lowp	glm/simd/exponential.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_sqrt_lowp(glm_f32vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4_step	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_step(glm_vec4 edge, glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_sub	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_sub(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4_swizzle_xyzw	glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_swizzle_xyzw(glm_f32vec4 a)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
golden_ratio	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType golden_ratio()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
grad4	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> grad4(T const& j, vec<4, T, Q> const& ip)$/;"	f	namespace:glm::gtc	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
greaterThan	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> greaterThan(vec<L, T, Q> const& x, vec<L, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
greaterThan	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> greaterThan(qua<T, Q> const& x, qua<T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
greaterThan	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool greaterThan$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
greaterThanEqual	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> greaterThanEqual(vec<L, T, Q> const& x, vec<L,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
greaterThanEqual	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> greaterThanEqual(qua<T, Q> const& x, qua<T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
greaterThanEqual	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool greaterThanEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
gtc	glm/gtc/noise.inl	/^namespace gtc$/;"	n	namespace:glm	file:
gtx	glm/gtx/number_precision.hpp	/^namespace gtx$/;"	n	namespace:glm
gtx	glm/gtx/optimum_pow.hpp	/^namespace gtx$/;"	n	namespace:glm
half2float	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint half2float(glm::uint h)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint
half_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType half_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
hash_cleanup	lodepng.cpp	/^static void hash_cleanup(Hash* hash)$/;"	f	typeref:typename:void	file:
hash_combine	glm/gtx/hash.inl	/^	GLM_INLINE void hash_combine(size_t &seed, size_t hash)$/;"	f	namespace:glm::detail	typeref:typename:GLM_INLINE void
hash_init	lodepng.cpp	/^static unsigned hash_init(Hash* hash, unsigned windowsize)$/;"	f	typeref:typename:unsigned	file:
hdata	glm/detail/type_half.hpp	/^	typedef short hdata;$/;"	t	namespace:glm::detail	typeref:typename:short
head	lodepng.cpp	/^  int* head; \/*hash value to head circular pos - can be outdated if went around window*\/$/;"	m	struct:Hash	typeref:typename:int *	file:
headz	lodepng.cpp	/^  int* headz; \/*similar to head, but for chainz*\/$/;"	m	struct:Hash	typeref:typename:int *	file:
hermite	glm/gtx/spline.inl	/^	GLM_FUNC_QUALIFIER genType hermite$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
highestBitValue	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genIUType highestBitValue(genIUType Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
highestBitValue	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> highestBitValue(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
highp	glm/detail/qualifier.hpp	/^		highp = packed_highp, \/\/\/< By default highp qualifier is also packed$/;"	e	enum:glm::qualifier
highp_bvec1	glm/ext/vector_bool1_precision.hpp	/^	typedef vec<1, bool, highp>			highp_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,highp>
highp_bvec1	glm/fwd.hpp	/^	typedef vec<1, bool, highp>		highp_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,highp>
highp_bvec2	glm/ext/vector_bool2_precision.hpp	/^	typedef vec<2, bool, highp>		highp_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,highp>
highp_bvec2	glm/fwd.hpp	/^	typedef vec<2, bool, highp>		highp_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,highp>
highp_bvec3	glm/ext/vector_bool3_precision.hpp	/^	typedef vec<3, bool, highp>		highp_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,highp>
highp_bvec3	glm/fwd.hpp	/^	typedef vec<3, bool, highp>		highp_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,highp>
highp_bvec4	glm/ext/vector_bool4_precision.hpp	/^	typedef vec<4, bool, highp>		highp_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,highp>
highp_bvec4	glm/fwd.hpp	/^	typedef vec<4, bool, highp>		highp_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,highp>
highp_ddualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<double, highp>	highp_ddualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<double,highp>
highp_dmat2	glm/ext/matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, highp>	highp_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,highp>
highp_dmat2	glm/fwd.hpp	/^	typedef mat<2, 2, f64, highp>		highp_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,highp>
highp_dmat2x2	glm/ext/matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, highp>	highp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,highp>
highp_dmat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, double, highp>	highp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,highp>
highp_dmat2x3	glm/ext/matrix_double2x3_precision.hpp	/^	typedef mat<2, 3, double, highp>	highp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,highp>
highp_dmat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, double, highp>	highp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,highp>
highp_dmat2x4	glm/ext/matrix_double2x4_precision.hpp	/^	typedef mat<2, 4, double, highp>	highp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,highp>
highp_dmat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, double, highp>	highp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,highp>
highp_dmat3	glm/ext/matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, highp>	highp_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,highp>
highp_dmat3	glm/fwd.hpp	/^	typedef mat<3, 3, f64, highp>		highp_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,highp>
highp_dmat3x2	glm/ext/matrix_double3x2_precision.hpp	/^	typedef mat<3, 2, double, highp>	highp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,highp>
highp_dmat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, double, highp>	highp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,highp>
highp_dmat3x3	glm/ext/matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, highp>	highp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,highp>
highp_dmat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, double, highp>	highp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,highp>
highp_dmat3x4	glm/ext/matrix_double3x4_precision.hpp	/^	typedef mat<3, 4, double, highp>	highp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,highp>
highp_dmat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, double, highp>	highp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,highp>
highp_dmat4	glm/ext/matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, highp>	highp_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,highp>
highp_dmat4	glm/fwd.hpp	/^	typedef mat<4, 4, f64, highp>		highp_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,highp>
highp_dmat4x2	glm/ext/matrix_double4x2_precision.hpp	/^	typedef mat<4, 2, double, highp>	highp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,highp>
highp_dmat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, double, highp>	highp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,highp>
highp_dmat4x3	glm/ext/matrix_double4x3_precision.hpp	/^	typedef mat<4, 3, double, highp>	highp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,highp>
highp_dmat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, double, highp>	highp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,highp>
highp_dmat4x4	glm/ext/matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, highp>	highp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,highp>
highp_dmat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, double, highp>	highp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,highp>
highp_dquat	glm/ext/quaternion_double_precision.hpp	/^	typedef qua<double, highp>		highp_dquat;$/;"	t	namespace:glm	typeref:typename:qua<double,highp>
highp_dquat	glm/fwd.hpp	/^	typedef qua<double, highp>			highp_dquat;$/;"	t	namespace:glm	typeref:typename:qua<double,highp>
highp_dualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, highp>		highp_dualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,highp>
highp_dvec1	glm/ext/vector_double1_precision.hpp	/^	typedef vec<1, double, highp>		highp_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,highp>
highp_dvec1	glm/fwd.hpp	/^	typedef vec<1, f64, highp>			highp_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,highp>
highp_dvec2	glm/ext/vector_double2_precision.hpp	/^	typedef vec<2, double, highp>		highp_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,highp>
highp_dvec2	glm/fwd.hpp	/^	typedef vec<2, f64, highp>			highp_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,highp>
highp_dvec3	glm/ext/vector_double3_precision.hpp	/^	typedef vec<3, double, highp>		highp_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,highp>
highp_dvec3	glm/fwd.hpp	/^	typedef vec<3, f64, highp>			highp_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,highp>
highp_dvec4	glm/ext/vector_double4_precision.hpp	/^	typedef vec<4, double, highp>		highp_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,highp>
highp_dvec4	glm/fwd.hpp	/^	typedef vec<4, f64, highp>			highp_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,highp>
highp_f32	glm/fwd.hpp	/^	typedef float					highp_f32;$/;"	t	namespace:glm	typeref:typename:float
highp_f32	glm/gtc/type_precision.hpp	/^	typedef float32 highp_f32;$/;"	t	namespace:glm	typeref:typename:float32
highp_f32mat2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_f32mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,highp>
highp_f32mat2	glm/gtc/type_precision.hpp	/^	typedef highp_f32mat2x2 highp_f32mat2;$/;"	t	namespace:glm	typeref:typename:highp_f32mat2x2
highp_f32mat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,highp>
highp_f32mat2x2	glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, highp> highp_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,highp>
highp_f32mat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, f32, highp>		highp_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,highp>
highp_f32mat2x3	glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f32, highp> highp_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,highp>
highp_f32mat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, f32, highp>		highp_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,highp>
highp_f32mat2x4	glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f32, highp> highp_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,highp>
highp_f32mat3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_f32mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,highp>
highp_f32mat3	glm/gtc/type_precision.hpp	/^	typedef highp_f32mat3x3 highp_f32mat3;$/;"	t	namespace:glm	typeref:typename:highp_f32mat3x3
highp_f32mat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, f32, highp>		highp_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,highp>
highp_f32mat3x2	glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f32, highp> highp_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,highp>
highp_f32mat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,highp>
highp_f32mat3x3	glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, highp> highp_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,highp>
highp_f32mat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, f32, highp>		highp_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,highp>
highp_f32mat3x4	glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f32, highp> highp_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,highp>
highp_f32mat4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_f32mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,highp>
highp_f32mat4	glm/gtc/type_precision.hpp	/^	typedef highp_f32mat4x4 highp_f32mat4;$/;"	t	namespace:glm	typeref:typename:highp_f32mat4x4
highp_f32mat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, f32, highp>		highp_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,highp>
highp_f32mat4x2	glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f32, highp> highp_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,highp>
highp_f32mat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, f32, highp>		highp_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,highp>
highp_f32mat4x3	glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f32, highp> highp_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,highp>
highp_f32mat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,highp>
highp_f32mat4x4	glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, highp> highp_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,highp>
highp_f32quat	glm/fwd.hpp	/^	typedef qua<f32, highp>				highp_f32quat;$/;"	t	namespace:glm	typeref:typename:qua<f32,highp>
highp_f32quat	glm/gtc/type_precision.hpp	/^	typedef qua<f32, highp> highp_f32quat;$/;"	t	namespace:glm	typeref:typename:qua<f32,highp>
highp_f32vec1	glm/fwd.hpp	/^	typedef vec<1, f32, highp>			highp_f32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,highp>
highp_f32vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, f32, highp> highp_f32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,highp>
highp_f32vec2	glm/fwd.hpp	/^	typedef vec<2, f32, highp>			highp_f32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,highp>
highp_f32vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, f32, highp> highp_f32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,highp>
highp_f32vec3	glm/fwd.hpp	/^	typedef vec<3, f32, highp>			highp_f32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,highp>
highp_f32vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, f32, highp> highp_f32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,highp>
highp_f32vec4	glm/fwd.hpp	/^	typedef vec<4, f32, highp>			highp_f32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,highp>
highp_f32vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, f32, highp> highp_f32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,highp>
highp_f64	glm/fwd.hpp	/^	typedef double					highp_f64;$/;"	t	namespace:glm	typeref:typename:double
highp_f64	glm/gtc/type_precision.hpp	/^	typedef float64 highp_f64;$/;"	t	namespace:glm	typeref:typename:float64
highp_f64mat2	glm/fwd.hpp	/^	typedef mat<2, 2, f64, highp>		highp_f64mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,highp>
highp_f64mat2	glm/gtc/type_precision.hpp	/^	typedef highp_f64mat2x2 highp_f64mat2;$/;"	t	namespace:glm	typeref:typename:highp_f64mat2x2
highp_f64mat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, f64, highp>		highp_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,highp>
highp_f64mat2x2	glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f64, highp> highp_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,highp>
highp_f64mat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, f64, highp>		highp_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f64,highp>
highp_f64mat2x3	glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f64, highp> highp_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f64,highp>
highp_f64mat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, f64, highp>		highp_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f64,highp>
highp_f64mat2x4	glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f64, highp> highp_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f64,highp>
highp_f64mat3	glm/fwd.hpp	/^	typedef mat<3, 3, f64, highp>		highp_f64mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,highp>
highp_f64mat3	glm/gtc/type_precision.hpp	/^	typedef highp_f64mat3x3 highp_f64mat3;$/;"	t	namespace:glm	typeref:typename:highp_f64mat3x3
highp_f64mat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, f64, highp>		highp_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f64,highp>
highp_f64mat3x2	glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f64, highp> highp_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f64,highp>
highp_f64mat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, f64, highp>		highp_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,highp>
highp_f64mat3x3	glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f64, highp> highp_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,highp>
highp_f64mat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, f64, highp>		highp_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f64,highp>
highp_f64mat3x4	glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f64, highp> highp_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f64,highp>
highp_f64mat4	glm/fwd.hpp	/^	typedef mat<4, 4, f64, highp>		highp_f64mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,highp>
highp_f64mat4	glm/gtc/type_precision.hpp	/^	typedef highp_f64mat4x4 highp_f64mat4;$/;"	t	namespace:glm	typeref:typename:highp_f64mat4x4
highp_f64mat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, f64, highp>		highp_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f64,highp>
highp_f64mat4x2	glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f64, highp> highp_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f64,highp>
highp_f64mat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, f64, highp>		highp_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f64,highp>
highp_f64mat4x3	glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f64, highp> highp_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f64,highp>
highp_f64mat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, f64, highp>		highp_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,highp>
highp_f64mat4x4	glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f64, highp> highp_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,highp>
highp_f64quat	glm/fwd.hpp	/^	typedef qua<f64, highp>				highp_f64quat;$/;"	t	namespace:glm	typeref:typename:qua<f64,highp>
highp_f64quat	glm/gtc/type_precision.hpp	/^	typedef qua<f64, highp> highp_f64quat;$/;"	t	namespace:glm	typeref:typename:qua<f64,highp>
highp_f64vec1	glm/fwd.hpp	/^	typedef vec<1, f64, highp>			highp_f64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,highp>
highp_f64vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, f64, highp> highp_f64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,highp>
highp_f64vec2	glm/fwd.hpp	/^	typedef vec<2, f64, highp>			highp_f64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,highp>
highp_f64vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, f64, highp> highp_f64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,highp>
highp_f64vec3	glm/fwd.hpp	/^	typedef vec<3, f64, highp>			highp_f64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,highp>
highp_f64vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, f64, highp> highp_f64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,highp>
highp_f64vec4	glm/fwd.hpp	/^	typedef vec<4, f64, highp>			highp_f64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,highp>
highp_f64vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, f64, highp> highp_f64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,highp>
highp_fdualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, highp>		highp_fdualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,highp>
highp_float32	glm/fwd.hpp	/^	typedef float					highp_float32;$/;"	t	namespace:glm	typeref:typename:float
highp_float32	glm/gtc/type_precision.hpp	/^	typedef float32 highp_float32;$/;"	t	namespace:glm	typeref:typename:float32
highp_float32_t	glm/fwd.hpp	/^	typedef float					highp_float32_t;$/;"	t	namespace:glm	typeref:typename:float
highp_float32_t	glm/gtc/type_precision.hpp	/^	typedef float32 highp_float32_t;$/;"	t	namespace:glm	typeref:typename:float32
highp_float64	glm/fwd.hpp	/^	typedef double					highp_float64;$/;"	t	namespace:glm	typeref:typename:double
highp_float64	glm/gtc/type_precision.hpp	/^	typedef float64 highp_float64;$/;"	t	namespace:glm	typeref:typename:float64
highp_float64_t	glm/fwd.hpp	/^	typedef double					highp_float64_t;$/;"	t	namespace:glm	typeref:typename:double
highp_float64_t	glm/gtc/type_precision.hpp	/^	typedef float64 highp_float64_t;$/;"	t	namespace:glm	typeref:typename:float64
highp_fmat2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_fmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,highp>
highp_fmat2	glm/gtc/type_precision.hpp	/^	typedef highp_fmat2x2 highp_fmat2;$/;"	t	namespace:glm	typeref:typename:highp_fmat2x2
highp_fmat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_fmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,highp>
highp_fmat2x2	glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, highp> highp_fmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,highp>
highp_fmat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, f32, highp>		highp_fmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,highp>
highp_fmat2x3	glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f32, highp> highp_fmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,highp>
highp_fmat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, f32, highp>		highp_fmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,highp>
highp_fmat2x4	glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f32, highp> highp_fmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,highp>
highp_fmat3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_fmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,highp>
highp_fmat3	glm/gtc/type_precision.hpp	/^	typedef highp_fmat3x3 highp_fmat3;$/;"	t	namespace:glm	typeref:typename:highp_fmat3x3
highp_fmat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, f32, highp>		highp_fmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,highp>
highp_fmat3x2	glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f32, highp> highp_fmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,highp>
highp_fmat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_fmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,highp>
highp_fmat3x3	glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, highp> highp_fmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,highp>
highp_fmat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, f32, highp>		highp_fmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,highp>
highp_fmat3x4	glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f32, highp> highp_fmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,highp>
highp_fmat4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_fmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,highp>
highp_fmat4	glm/gtc/type_precision.hpp	/^	typedef highp_fmat4x4 highp_fmat4;$/;"	t	namespace:glm	typeref:typename:highp_fmat4x4
highp_fmat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, f32, highp>		highp_fmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,highp>
highp_fmat4x2	glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f32, highp> highp_fmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,highp>
highp_fmat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, f32, highp>		highp_fmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,highp>
highp_fmat4x3	glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f32, highp> highp_fmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,highp>
highp_fmat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_fmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,highp>
highp_fmat4x4	glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, highp> highp_fmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,highp>
highp_fquat	glm/fwd.hpp	/^	typedef qua<float, highp>			highp_fquat;$/;"	t	namespace:glm	typeref:typename:qua<float,highp>
highp_fvec1	glm/fwd.hpp	/^	typedef vec<1, float, highp>		highp_fvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,highp>
highp_fvec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, float, highp> highp_fvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,highp>
highp_fvec2	glm/fwd.hpp	/^	typedef vec<2, float, highp>		highp_fvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,highp>
highp_fvec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, float, highp> highp_fvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,highp>
highp_fvec3	glm/fwd.hpp	/^	typedef vec<3, float, highp>		highp_fvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,highp>
highp_fvec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, float, highp> highp_fvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,highp>
highp_fvec4	glm/fwd.hpp	/^	typedef vec<4, float, highp>		highp_fvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,highp>
highp_fvec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, float, highp> highp_fvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,highp>
highp_i16	glm/fwd.hpp	/^	typedef int16					highp_i16;$/;"	t	namespace:glm	typeref:typename:int16
highp_i16	glm/gtc/type_precision.hpp	/^	typedef detail::int16 highp_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_i16vec1	glm/fwd.hpp	/^	typedef vec<1, i16, highp>		highp_i16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i16,highp>
highp_i16vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, i16, highp>		highp_i16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i16,highp>
highp_i16vec2	glm/fwd.hpp	/^	typedef vec<2, i16, highp>		highp_i16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i16,highp>
highp_i16vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, i16, highp>		highp_i16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i16,highp>
highp_i16vec3	glm/fwd.hpp	/^	typedef vec<3, i16, highp>		highp_i16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i16,highp>
highp_i16vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, i16, highp>		highp_i16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i16,highp>
highp_i16vec4	glm/fwd.hpp	/^	typedef vec<4, i16, highp>		highp_i16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i16,highp>
highp_i16vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, i16, highp>		highp_i16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i16,highp>
highp_i32	glm/fwd.hpp	/^	typedef int32					highp_i32;$/;"	t	namespace:glm	typeref:typename:int32
highp_i32	glm/gtc/type_precision.hpp	/^	typedef detail::int32 highp_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_i32vec1	glm/fwd.hpp	/^	typedef vec<1, i32, highp>		highp_i32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,highp>
highp_i32vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, i32, highp>		highp_i32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,highp>
highp_i32vec2	glm/fwd.hpp	/^	typedef vec<2, i32, highp>		highp_i32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,highp>
highp_i32vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, i32, highp>		highp_i32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,highp>
highp_i32vec3	glm/fwd.hpp	/^	typedef vec<3, i32, highp>		highp_i32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,highp>
highp_i32vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, i32, highp>		highp_i32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,highp>
highp_i32vec4	glm/fwd.hpp	/^	typedef vec<4, i32, highp>		highp_i32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,highp>
highp_i32vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, i32, highp>		highp_i32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,highp>
highp_i64	glm/fwd.hpp	/^	typedef int64					highp_i64;$/;"	t	namespace:glm	typeref:typename:int64
highp_i64	glm/gtc/type_precision.hpp	/^	typedef detail::int64 highp_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_i64vec1	glm/fwd.hpp	/^	typedef vec<1, i64, highp>		highp_i64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i64,highp>
highp_i64vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, i64, highp>		highp_i64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i64,highp>
highp_i64vec2	glm/fwd.hpp	/^	typedef vec<2, i64, highp>		highp_i64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i64,highp>
highp_i64vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, i64, highp>		highp_i64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i64,highp>
highp_i64vec3	glm/fwd.hpp	/^	typedef vec<3, i64, highp>		highp_i64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i64,highp>
highp_i64vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, i64, highp>		highp_i64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i64,highp>
highp_i64vec4	glm/fwd.hpp	/^	typedef vec<4, i64, highp>		highp_i64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i64,highp>
highp_i64vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, i64, highp>		highp_i64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i64,highp>
highp_i8	glm/fwd.hpp	/^	typedef int8					highp_i8;$/;"	t	namespace:glm	typeref:typename:int8
highp_i8	glm/gtc/type_precision.hpp	/^	typedef detail::int8 highp_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_i8vec1	glm/fwd.hpp	/^	typedef vec<1, i8, highp>		highp_i8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i8,highp>
highp_i8vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, i8, highp> highp_i8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i8,highp>
highp_i8vec2	glm/fwd.hpp	/^	typedef vec<2, i8, highp>		highp_i8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i8,highp>
highp_i8vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, i8, highp> highp_i8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i8,highp>
highp_i8vec3	glm/fwd.hpp	/^	typedef vec<3, i8, highp>		highp_i8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i8,highp>
highp_i8vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, i8, highp> highp_i8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i8,highp>
highp_i8vec4	glm/fwd.hpp	/^	typedef vec<4, i8, highp>		highp_i8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i8,highp>
highp_i8vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, i8, highp> highp_i8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i8,highp>
highp_imat2	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, int, highp>				highp_imat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,highp>
highp_imat2x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, int, highp>				highp_imat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,highp>
highp_imat2x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 3, int, highp>				highp_imat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int,highp>
highp_imat2x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 4, int, highp>				highp_imat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int,highp>
highp_imat3	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, int, highp>				highp_imat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,highp>
highp_imat3x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 2, int, highp>				highp_imat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int,highp>
highp_imat3x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, int, highp>				highp_imat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,highp>
highp_imat3x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 4, int, highp>				highp_imat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int,highp>
highp_imat4	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, int, highp>				highp_imat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,highp>
highp_imat4x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 2, int, highp>				highp_imat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int,highp>
highp_imat4x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 3, int, highp>				highp_imat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int,highp>
highp_imat4x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, int, highp>				highp_imat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,highp>
highp_int16	glm/fwd.hpp	/^	typedef int16					highp_int16;$/;"	t	namespace:glm	typeref:typename:int16
highp_int16	glm/gtc/type_precision.hpp	/^	typedef detail::int16 highp_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_int16_t	glm/fwd.hpp	/^	typedef int16					highp_int16_t;$/;"	t	namespace:glm	typeref:typename:int16
highp_int16_t	glm/gtc/type_precision.hpp	/^	typedef detail::int16 highp_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_int32	glm/fwd.hpp	/^	typedef int32					highp_int32;$/;"	t	namespace:glm	typeref:typename:int32
highp_int32	glm/gtc/type_precision.hpp	/^	typedef detail::int32 highp_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_int32_t	glm/fwd.hpp	/^	typedef int32					highp_int32_t;$/;"	t	namespace:glm	typeref:typename:int32
highp_int32_t	glm/gtc/type_precision.hpp	/^	typedef detail::int32 highp_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_int64	glm/fwd.hpp	/^	typedef int64					highp_int64;$/;"	t	namespace:glm	typeref:typename:int64
highp_int64	glm/gtc/type_precision.hpp	/^	typedef detail::int64 highp_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_int64_t	glm/fwd.hpp	/^	typedef int64					highp_int64_t;$/;"	t	namespace:glm	typeref:typename:int64
highp_int64_t	glm/gtc/type_precision.hpp	/^	typedef detail::int64 highp_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_int8	glm/fwd.hpp	/^	typedef int8					highp_int8;$/;"	t	namespace:glm	typeref:typename:int8
highp_int8	glm/gtc/type_precision.hpp	/^	typedef detail::int8 highp_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_int8_t	glm/fwd.hpp	/^	typedef int8					highp_int8_t;$/;"	t	namespace:glm	typeref:typename:int8
highp_int8_t	glm/gtc/type_precision.hpp	/^	typedef detail::int8 highp_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_ivec1	glm/ext/vector_int1_precision.hpp	/^	typedef vec<1, int, highp>			highp_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,highp>
highp_ivec1	glm/fwd.hpp	/^	typedef vec<1, i32, highp>		highp_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,highp>
highp_ivec2	glm/ext/vector_int2_precision.hpp	/^	typedef vec<2, int, highp>		highp_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,highp>
highp_ivec2	glm/fwd.hpp	/^	typedef vec<2, i32, highp>		highp_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,highp>
highp_ivec3	glm/ext/vector_int3_precision.hpp	/^	typedef vec<3, int, highp>		highp_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,highp>
highp_ivec3	glm/fwd.hpp	/^	typedef vec<3, i32, highp>		highp_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,highp>
highp_ivec4	glm/ext/vector_int4_precision.hpp	/^	typedef vec<4, int, highp>		highp_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,highp>
highp_ivec4	glm/fwd.hpp	/^	typedef vec<4, i32, highp>		highp_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,highp>
highp_mat2	glm/ext/matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, highp>		highp_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,highp>
highp_mat2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,highp>
highp_mat2x2	glm/ext/matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, highp>		highp_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,highp>
highp_mat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,highp>
highp_mat2x3	glm/ext/matrix_float2x3_precision.hpp	/^	typedef mat<2, 3, float, highp>		highp_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,highp>
highp_mat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, f32, highp>		highp_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,highp>
highp_mat2x4	glm/ext/matrix_float2x4_precision.hpp	/^	typedef mat<2, 4, float, highp>		highp_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,highp>
highp_mat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, f32, highp>		highp_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,highp>
highp_mat3	glm/ext/matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, highp>		highp_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,highp>
highp_mat3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,highp>
highp_mat3x2	glm/ext/matrix_float3x2_precision.hpp	/^	typedef mat<3, 2, float, highp>		highp_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,highp>
highp_mat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, f32, highp>		highp_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,highp>
highp_mat3x3	glm/ext/matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, highp>		highp_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,highp>
highp_mat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,highp>
highp_mat3x4	glm/ext/matrix_float3x4_precision.hpp	/^	typedef mat<3, 4, float, highp>		highp_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,highp>
highp_mat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, f32, highp>		highp_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,highp>
highp_mat4	glm/ext/matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, highp>		highp_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,highp>
highp_mat4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,highp>
highp_mat4x2	glm/ext/matrix_float4x2_precision.hpp	/^	typedef mat<4, 2, float, highp>		highp_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,highp>
highp_mat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, f32, highp>		highp_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,highp>
highp_mat4x3	glm/ext/matrix_float4x3_precision.hpp	/^	typedef mat<4, 3, float, highp>		highp_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,highp>
highp_mat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, f32, highp>		highp_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,highp>
highp_mat4x4	glm/ext/matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, highp>		highp_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,highp>
highp_mat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,highp>
highp_quat	glm/ext/quaternion_float_precision.hpp	/^	typedef qua<float, highp>		highp_quat;$/;"	t	namespace:glm	typeref:typename:qua<float,highp>
highp_quat	glm/fwd.hpp	/^	typedef qua<float, highp>			highp_quat;$/;"	t	namespace:glm	typeref:typename:qua<float,highp>
highp_u16	glm/fwd.hpp	/^	typedef uint16					highp_u16;$/;"	t	namespace:glm	typeref:typename:uint16
highp_u16	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 highp_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_u16vec1	glm/fwd.hpp	/^	typedef vec<1, u16, highp>		highp_u16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u16,highp>
highp_u16vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, u16, highp>		highp_u16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u16,highp>
highp_u16vec2	glm/fwd.hpp	/^	typedef vec<2, u16, highp>		highp_u16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u16,highp>
highp_u16vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, u16, highp>		highp_u16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u16,highp>
highp_u16vec3	glm/fwd.hpp	/^	typedef vec<3, u16, highp>		highp_u16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u16,highp>
highp_u16vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, u16, highp>		highp_u16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u16,highp>
highp_u16vec4	glm/fwd.hpp	/^	typedef vec<4, u16, highp>		highp_u16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u16,highp>
highp_u16vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, u16, highp>		highp_u16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u16,highp>
highp_u32	glm/fwd.hpp	/^	typedef uint32					highp_u32;$/;"	t	namespace:glm	typeref:typename:uint32
highp_u32	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 highp_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_u32vec1	glm/fwd.hpp	/^	typedef vec<1, u32, highp>		highp_u32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,highp>
highp_u32vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, u32, highp>		highp_u32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,highp>
highp_u32vec2	glm/fwd.hpp	/^	typedef vec<2, u32, highp>		highp_u32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,highp>
highp_u32vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, u32, highp>		highp_u32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,highp>
highp_u32vec3	glm/fwd.hpp	/^	typedef vec<3, u32, highp>		highp_u32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,highp>
highp_u32vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, u32, highp>		highp_u32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,highp>
highp_u32vec4	glm/fwd.hpp	/^	typedef vec<4, u32, highp>		highp_u32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,highp>
highp_u32vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, u32, highp>		highp_u32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,highp>
highp_u64	glm/fwd.hpp	/^	typedef uint64					highp_u64;$/;"	t	namespace:glm	typeref:typename:uint64
highp_u64	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 highp_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_u64vec1	glm/fwd.hpp	/^	typedef vec<1, u64, highp>		highp_u64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u64,highp>
highp_u64vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, u64, highp>		highp_u64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u64,highp>
highp_u64vec2	glm/fwd.hpp	/^	typedef vec<2, u64, highp>		highp_u64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u64,highp>
highp_u64vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, u64, highp>		highp_u64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u64,highp>
highp_u64vec3	glm/fwd.hpp	/^	typedef vec<3, u64, highp>		highp_u64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u64,highp>
highp_u64vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, u64, highp>		highp_u64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u64,highp>
highp_u64vec4	glm/fwd.hpp	/^	typedef vec<4, u64, highp>		highp_u64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u64,highp>
highp_u64vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, u64, highp>		highp_u64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u64,highp>
highp_u8	glm/fwd.hpp	/^	typedef uint8					highp_u8;$/;"	t	namespace:glm	typeref:typename:uint8
highp_u8	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 highp_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_u8vec1	glm/fwd.hpp	/^	typedef vec<1, u8, highp>		highp_u8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u8,highp>
highp_u8vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, u8, highp> highp_u8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u8,highp>
highp_u8vec2	glm/fwd.hpp	/^	typedef vec<2, u8, highp>		highp_u8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u8,highp>
highp_u8vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, u8, highp> highp_u8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u8,highp>
highp_u8vec3	glm/fwd.hpp	/^	typedef vec<3, u8, highp>		highp_u8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u8,highp>
highp_u8vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, u8, highp> highp_u8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u8,highp>
highp_u8vec4	glm/fwd.hpp	/^	typedef vec<4, u8, highp>		highp_u8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u8,highp>
highp_u8vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, u8, highp> highp_u8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u8,highp>
highp_uint16	glm/fwd.hpp	/^	typedef uint16					highp_uint16;$/;"	t	namespace:glm	typeref:typename:uint16
highp_uint16	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 highp_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_uint16_t	glm/fwd.hpp	/^	typedef uint16					highp_uint16_t;$/;"	t	namespace:glm	typeref:typename:uint16
highp_uint16_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 highp_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_uint32	glm/fwd.hpp	/^	typedef uint32					highp_uint32;$/;"	t	namespace:glm	typeref:typename:uint32
highp_uint32	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 highp_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_uint32_t	glm/fwd.hpp	/^	typedef uint32					highp_uint32_t;$/;"	t	namespace:glm	typeref:typename:uint32
highp_uint32_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 highp_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_uint64	glm/fwd.hpp	/^	typedef uint64					highp_uint64;$/;"	t	namespace:glm	typeref:typename:uint64
highp_uint64	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 highp_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_uint64_t	glm/fwd.hpp	/^	typedef uint64					highp_uint64_t;$/;"	t	namespace:glm	typeref:typename:uint64
highp_uint64_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 highp_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_uint8	glm/fwd.hpp	/^	typedef uint8					highp_uint8;$/;"	t	namespace:glm	typeref:typename:uint8
highp_uint8	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 highp_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_uint8_t	glm/fwd.hpp	/^	typedef uint8					highp_uint8_t;$/;"	t	namespace:glm	typeref:typename:uint8
highp_uint8_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 highp_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_umat2	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, uint, highp>				highp_umat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,highp>
highp_umat2x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, uint, highp>				highp_umat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,highp>
highp_umat2x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 3, uint, highp>				highp_umat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint,highp>
highp_umat2x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 4, uint, highp>				highp_umat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint,highp>
highp_umat3	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, uint, highp>				highp_umat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,highp>
highp_umat3x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 2, uint, highp>				highp_umat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint,highp>
highp_umat3x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, uint, highp>				highp_umat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,highp>
highp_umat3x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 4, uint, highp>				highp_umat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint,highp>
highp_umat4	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, uint, highp>				highp_umat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,highp>
highp_umat4x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 2, uint, highp>				highp_umat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint,highp>
highp_umat4x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 3, uint, highp>				highp_umat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint,highp>
highp_umat4x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, uint, highp>				highp_umat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,highp>
highp_uvec1	glm/ext/vector_uint1_precision.hpp	/^	typedef vec<1, unsigned int, highp>			highp_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,unsigned int,highp>
highp_uvec1	glm/fwd.hpp	/^	typedef vec<1, u32, highp>		highp_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,highp>
highp_uvec2	glm/ext/vector_uint2_precision.hpp	/^	typedef vec<2, unsigned int, highp>		highp_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,unsigned int,highp>
highp_uvec2	glm/fwd.hpp	/^	typedef vec<2, u32, highp>		highp_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,highp>
highp_uvec3	glm/ext/vector_uint3_precision.hpp	/^	typedef vec<3, unsigned int, highp>		highp_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,unsigned int,highp>
highp_uvec3	glm/fwd.hpp	/^	typedef vec<3, u32, highp>		highp_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,highp>
highp_uvec4	glm/ext/vector_uint4_precision.hpp	/^	typedef vec<4, unsigned int, highp>		highp_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,unsigned int,highp>
highp_uvec4	glm/fwd.hpp	/^	typedef vec<4, u32, highp>		highp_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,highp>
highp_vec1	glm/ext/vector_float1_precision.hpp	/^	typedef vec<1, float, highp>		highp_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,highp>
highp_vec1	glm/fwd.hpp	/^	typedef vec<1, float, highp>		highp_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,highp>
highp_vec2	glm/ext/vector_float2_precision.hpp	/^	typedef vec<2, float, highp>		highp_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,highp>
highp_vec2	glm/fwd.hpp	/^	typedef vec<2, float, highp>		highp_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,highp>
highp_vec3	glm/ext/vector_float3_precision.hpp	/^	typedef vec<3, float, highp>		highp_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,highp>
highp_vec3	glm/fwd.hpp	/^	typedef vec<3, float, highp>		highp_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,highp>
highp_vec4	glm/ext/vector_float4_precision.hpp	/^	typedef vec<4, float, highp>		highp_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,highp>
highp_vec4	glm/fwd.hpp	/^	typedef vec<4, float, highp>		highp_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,highp>
hour	lodepng.h	/^  unsigned hour;    \/*0-23*\/$/;"	m	struct:LodePNGTime	typeref:typename:unsigned
hsvColor	glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> hsvColor(const vec<3, T, Q>& rgbColor)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
huffmanDecodeSymbol	lodepng.cpp	/^static unsigned huffmanDecodeSymbol(const unsigned char* in, size_t* bp,$/;"	f	typeref:typename:unsigned	file:
i	glm/detail/type_float.hpp	/^		int_type i;$/;"	m	union:glm::detail::float_t	typeref:typename:int_type
i	glm/detail/type_half.inl	/^		unsigned int i;$/;"	m	union:glm::detail::uif32	typeref:typename:unsigned int	file:
i	glm/gtc/bitfield.inl	/^			int16 i;$/;"	m	union:glm::bitfieldInterleave::sign16	typeref:typename:int16	file:
i	glm/gtc/bitfield.inl	/^			int32 i;$/;"	m	union:glm::bitfieldInterleave::sign16	typeref:typename:int32	file:
i	glm/gtc/bitfield.inl	/^			int32 i;$/;"	m	union:glm::bitfieldInterleave::sign32	typeref:typename:int32	file:
i	glm/gtc/bitfield.inl	/^			int64 i;$/;"	m	union:glm::bitfieldInterleave::sign64	typeref:typename:int64	file:
i	glm/gtc/bitfield.inl	/^			int8 i;$/;"	m	union:glm::bitfieldInterleave::sign8	typeref:typename:int8	file:
i10i10i10i2	glm/gtc/packing.inl	/^	union i10i10i10i2$/;"	u	namespace:glm::detail	file:
i16	glm/fwd.hpp	/^	typedef int16					i16;$/;"	t	namespace:glm	typeref:typename:int16
i16	glm/gtc/type_precision.hpp	/^	typedef detail::int16 i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
i16vec1	glm/fwd.hpp	/^	typedef vec<1, i16, defaultp>	i16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i16,defaultp>
i16vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, i16, defaultp> i16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i16,defaultp>
i16vec2	glm/fwd.hpp	/^	typedef vec<2, i16, defaultp>	i16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i16,defaultp>
i16vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, i16, defaultp> i16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i16,defaultp>
i16vec3	glm/fwd.hpp	/^	typedef vec<3, i16, defaultp>	i16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i16,defaultp>
i16vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, i16, defaultp> i16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i16,defaultp>
i16vec4	glm/fwd.hpp	/^	typedef vec<4, i16, defaultp>	i16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i16,defaultp>
i16vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, i16, defaultp> i16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i16,defaultp>
i32	glm/fwd.hpp	/^	typedef int32					i32;$/;"	t	namespace:glm	typeref:typename:int32
i32	glm/gtc/type_precision.hpp	/^	typedef detail::int32 i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
i32vec1	glm/fwd.hpp	/^	typedef vec<1, i32, defaultp>	i32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,defaultp>
i32vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, i32, defaultp> i32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,defaultp>
i32vec2	glm/fwd.hpp	/^	typedef vec<2, i32, defaultp>	i32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,defaultp>
i32vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, i32, defaultp> i32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,defaultp>
i32vec3	glm/fwd.hpp	/^	typedef vec<3, i32, defaultp>	i32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,defaultp>
i32vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, i32, defaultp> i32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,defaultp>
i32vec4	glm/fwd.hpp	/^	typedef vec<4, i32, defaultp>	i32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,defaultp>
i32vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, i32, defaultp> i32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,defaultp>
i64	glm/fwd.hpp	/^	typedef int64					i64;$/;"	t	namespace:glm	typeref:typename:int64
i64	glm/gtc/type_precision.hpp	/^	typedef detail::int64 i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
i64vec1	glm/fwd.hpp	/^	typedef vec<1, i64, defaultp>	i64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i64,defaultp>
i64vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, i64, defaultp> i64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i64,defaultp>
i64vec2	glm/fwd.hpp	/^	typedef vec<2, i64, defaultp>	i64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i64,defaultp>
i64vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, i64, defaultp> i64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i64,defaultp>
i64vec3	glm/fwd.hpp	/^	typedef vec<3, i64, defaultp>	i64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i64,defaultp>
i64vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, i64, defaultp> i64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i64,defaultp>
i64vec4	glm/fwd.hpp	/^	typedef vec<4, i64, defaultp>	i64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i64,defaultp>
i64vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, i64, defaultp> i64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i64,defaultp>
i8	glm/fwd.hpp	/^	typedef int8					i8;$/;"	t	namespace:glm	typeref:typename:int8
i8	glm/gtc/type_precision.hpp	/^	typedef detail::int8 i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
i8vec1	glm/fwd.hpp	/^	typedef vec<1, i8, defaultp>	i8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i8,defaultp>
i8vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, i8, defaultp> i8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i8,defaultp>
i8vec2	glm/fwd.hpp	/^	typedef vec<2, i8, defaultp>	i8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i8,defaultp>
i8vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, i8, defaultp> i8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i8,defaultp>
i8vec3	glm/fwd.hpp	/^	typedef vec<3, i8, defaultp>	i8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i8,defaultp>
i8vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, i8, defaultp> i8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i8,defaultp>
i8vec4	glm/fwd.hpp	/^	typedef vec<4, i8, defaultp>	i8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i8,defaultp>
i8vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, i8, defaultp> i8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i8,defaultp>
id	glm/gtx/io.hpp	/^			static std::locale::id id;$/;"	m	class:glm::io::format_punct	typeref:typename:std::locale::id
id	glm/gtx/io.inl	/^	template<typename CTy> std::locale::id format_punct<CTy>::id;$/;"	m	class:glm::io::format_punct<CTy>	typeref:typename:std::locale::id
identity	glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType identity()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
ieee_double_shape_type	glm/ext/scalar_ulp.inl	/^} ieee_double_shape_type;$/;"	t	typeref:union:__anonb4cc412b020a	file:
ieee_float_shape_type	glm/ext/scalar_ulp.inl	/^} ieee_float_shape_type;$/;"	t	typeref:union:__anonb4cc412b010a	file:
ignore_adler32	lodepng.h	/^  unsigned ignore_adler32; \/*if 1, continue and don't give an error message if the Adler32 chec/;"	m	struct:LodePNGDecompressSettings	typeref:typename:unsigned
ignore_crc	lodepng.h	/^  unsigned ignore_crc; \/*ignore CRC checksums*\/$/;"	m	struct:LodePNGDecoderSettings	typeref:typename:unsigned
imat2	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat2								imat2;$/;"	t	namespace:glm	typeref:typename:highp_imat2
imat2	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat2								imat2;$/;"	t	namespace:glm	typeref:typename:lowp_imat2
imat2	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat2							imat2;$/;"	t	namespace:glm	typeref:typename:mediump_imat2
imat2x2	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat2x2							imat2x2;$/;"	t	namespace:glm	typeref:typename:highp_imat2x2
imat2x2	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat2x2							imat2x2;$/;"	t	namespace:glm	typeref:typename:lowp_imat2x2
imat2x2	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat2x2							imat2x2;$/;"	t	namespace:glm	typeref:typename:mediump_imat2x2
imat2x3	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat2x3							imat2x3;$/;"	t	namespace:glm	typeref:typename:highp_imat2x3
imat2x3	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat2x3							imat2x3;$/;"	t	namespace:glm	typeref:typename:lowp_imat2x3
imat2x3	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat2x3							imat2x3;$/;"	t	namespace:glm	typeref:typename:mediump_imat2x3
imat2x4	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat2x4							imat2x4;$/;"	t	namespace:glm	typeref:typename:highp_imat2x4
imat2x4	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat2x4							imat2x4;$/;"	t	namespace:glm	typeref:typename:lowp_imat2x4
imat2x4	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat2x4							imat2x4;$/;"	t	namespace:glm	typeref:typename:mediump_imat2x4
imat3	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat3								imat3;$/;"	t	namespace:glm	typeref:typename:highp_imat3
imat3	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat3								imat3;$/;"	t	namespace:glm	typeref:typename:lowp_imat3
imat3	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat3							imat3;$/;"	t	namespace:glm	typeref:typename:mediump_imat3
imat3x2	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat3x2							imat3x2;$/;"	t	namespace:glm	typeref:typename:highp_imat3x2
imat3x2	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat3x2							imat3x2;$/;"	t	namespace:glm	typeref:typename:lowp_imat3x2
imat3x2	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat3x2							imat3x2;$/;"	t	namespace:glm	typeref:typename:mediump_imat3x2
imat3x3	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat3x3							imat3x3;$/;"	t	namespace:glm	typeref:typename:highp_imat3x3
imat3x3	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat3x3							imat3x3;$/;"	t	namespace:glm	typeref:typename:lowp_imat3x3
imat3x3	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat3x3							imat3x3;$/;"	t	namespace:glm	typeref:typename:mediump_imat3x3
imat3x4	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat3x4							imat3x4;$/;"	t	namespace:glm	typeref:typename:highp_imat3x4
imat3x4	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat3x4							imat3x4;$/;"	t	namespace:glm	typeref:typename:lowp_imat3x4
imat3x4	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat3x4							imat3x4;$/;"	t	namespace:glm	typeref:typename:mediump_imat3x4
imat4	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat4								imat4;$/;"	t	namespace:glm	typeref:typename:highp_imat4
imat4	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat4								imat4;$/;"	t	namespace:glm	typeref:typename:lowp_imat4
imat4	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat4							imat4;$/;"	t	namespace:glm	typeref:typename:mediump_imat4
imat4x2	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat4x2							imat4x2;$/;"	t	namespace:glm	typeref:typename:highp_imat4x2
imat4x2	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat4x2							imat4x2;$/;"	t	namespace:glm	typeref:typename:lowp_imat4x2
imat4x2	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat4x2							imat4x2;$/;"	t	namespace:glm	typeref:typename:mediump_imat4x2
imat4x3	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat4x3							imat4x3;$/;"	t	namespace:glm	typeref:typename:highp_imat4x3
imat4x3	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat4x3							imat4x3;$/;"	t	namespace:glm	typeref:typename:lowp_imat4x3
imat4x3	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat4x3							imat4x3;$/;"	t	namespace:glm	typeref:typename:mediump_imat4x3
imat4x4	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat4x4							imat4x4;$/;"	t	namespace:glm	typeref:typename:highp_imat4x4
imat4x4	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat4x4							imat4x4;$/;"	t	namespace:glm	typeref:typename:lowp_imat4x4
imat4x4	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat4x4							imat4x4;$/;"	t	namespace:glm	typeref:typename:mediump_imat4x4
imulExtended	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER void imulExtended(int x, int y, int& msb, int& lsb)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
imulExtended	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER void imulExtended(vec<L, int, Q> const& x, vec<L, int, Q> const& y, vec<L, i/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
in	glm/detail/func_common.inl	/^			float in;$/;"	m	union:glm::floatBitsToInt::__anon0405017b010a	typeref:typename:float	file:
in	glm/detail/func_common.inl	/^			float in;$/;"	m	union:glm::floatBitsToUint::__anon0405017b020a	typeref:typename:float	file:
in	glm/detail/func_common.inl	/^			int in;$/;"	m	union:glm::intBitsToFloat::__anon0405017b030a	typeref:typename:int	file:
in	glm/detail/func_common.inl	/^			uint in;$/;"	m	union:glm::uintBitsToFloat::__anon0405017b040a	typeref:typename:uint	file:
in	glm/detail/func_packing.inl	/^			double in;$/;"	m	union:glm::unpackDouble2x32::__anone26ffacf0a0a	typeref:typename:double	file:
in	glm/detail/func_packing.inl	/^			signed char in[4];$/;"	m	union:glm::packSnorm4x8::__anone26ffacf070a	typeref:typename:signed char[4]	file:
in	glm/detail/func_packing.inl	/^			signed short in[2];$/;"	m	union:glm::packHalf2x16::__anone26ffacf0b0a	typeref:typename:signed short[2]	file:
in	glm/detail/func_packing.inl	/^			signed short in[2];$/;"	m	union:glm::packSnorm2x16::__anone26ffacf030a	typeref:typename:signed short[2]	file:
in	glm/detail/func_packing.inl	/^			uint   in[2];$/;"	m	union:glm::packDouble2x32::__anone26ffacf090a	typeref:typename:uint[2]	file:
in	glm/detail/func_packing.inl	/^			uint in;$/;"	m	union:glm::unpackHalf2x16::__anone26ffacf0c0a	typeref:typename:uint	file:
in	glm/detail/func_packing.inl	/^			uint in;$/;"	m	union:glm::unpackSnorm2x16::__anone26ffacf040a	typeref:typename:uint	file:
in	glm/detail/func_packing.inl	/^			uint in;$/;"	m	union:glm::unpackSnorm4x8::__anone26ffacf080a	typeref:typename:uint	file:
in	glm/detail/func_packing.inl	/^			uint in;$/;"	m	union:glm::unpackUnorm2x16::__anone26ffacf020a	typeref:typename:uint	file:
in	glm/detail/func_packing.inl	/^			uint in;$/;"	m	union:glm::unpackUnorm4x8::__anone26ffacf060a	typeref:typename:uint	file:
in	glm/detail/func_packing.inl	/^			unsigned char in[4];$/;"	m	union:glm::packUnorm4x8::__anone26ffacf050a	typeref:typename:unsigned char[4]	file:
in	glm/detail/func_packing.inl	/^			unsigned short in[2];$/;"	m	union:glm::packUnorm2x16::__anone26ffacf010a	typeref:typename:unsigned short[2]	file:
in_use	lodepng.cpp	/^  int in_use;$/;"	m	struct:BPMNode	typeref:typename:int	file:
index	lodepng.cpp	/^  int index; \/*the payload. Only has a meaningful value if this is in the last level*\/$/;"	m	struct:ColorTree	typeref:typename:int	file:
index	lodepng.cpp	/^  unsigned index; \/*index of this leaf node (called "count" in the paper)*\/$/;"	m	struct:BPMNode	typeref:typename:unsigned	file:
infinitePerspective	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> infinitePerspective(T fovy, T aspect, T zNear)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
infinitePerspectiveLH	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> infinitePerspectiveLH(T fovy, T aspect, T zNear)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
infinitePerspectiveRH	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> infinitePerspectiveRH(T fovy, T aspect, T zNear)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
inflate	lodepng.cpp	/^static unsigned inflate(unsigned char** out, size_t* outsize,$/;"	f	typeref:typename:unsigned	file:
inflateHuffmanBlock	lodepng.cpp	/^static unsigned inflateHuffmanBlock(ucvector* out, const unsigned char* in, size_t* bp,$/;"	f	typeref:typename:unsigned	file:
inflateNoCompression	lodepng.cpp	/^static unsigned inflateNoCompression(ucvector* out, const unsigned char* in, size_t* bp, size_t*/;"	f	typeref:typename:unsigned	file:
info_png	lodepng.h	/^  LodePNGInfo info_png; \/*info of the PNG image obtained after decoding*\/$/;"	m	struct:LodePNGState	typeref:typename:LodePNGInfo
info_raw	lodepng.h	/^  LodePNGColorMode info_raw; \/*specifies the format in which you would like to get the raw pixe/;"	m	struct:LodePNGState	typeref:typename:LodePNGColorMode
initOpenGLProgram	main_file.cpp	/^void initOpenGLProgram(GLFWwindow* window) {$/;"	f	typeref:typename:void
initShaders	shaderprogram.cpp	/^void initShaders(){$/;"	f	typeref:typename:void
int1	glm/gtx/compatibility.hpp	/^	typedef int							int1;			\/\/!< \\brief integer vector with 1 component. (From GLM_GTX_compati/;"	t	namespace:glm	typeref:typename:int
int16	glm/ext/scalar_int_sized.hpp	/^		typedef std::int16_t		int16;$/;"	t	namespace:glm::detail	typeref:typename:std::int16_t
int16	glm/ext/scalar_int_sized.hpp	/^	typedef detail::int16		int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
int16	glm/fwd.hpp	/^	typedef std::int16_t			int16;$/;"	t	namespace:glm	typeref:typename:std::int16_t
int16_t	glm/fwd.hpp	/^	typedef int16					int16_t;$/;"	t	namespace:glm	typeref:typename:int16
int16_t	glm/gtc/type_precision.hpp	/^	typedef detail::int16 int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
int1x1	glm/gtx/compatibility.hpp	/^	typedef int							int1x1;			\/\/!< \\brief integer matrix with 1 component. (From GLM_GTX_compa/;"	t	namespace:glm	typeref:typename:int
int2	glm/gtx/compatibility.hpp	/^	typedef vec<2, int, highp>			int2;			\/\/!< \\brief integer vector with 2 components. (From GLM/;"	t	namespace:glm	typeref:typename:vec<2,int,highp>
int2x2	glm/gtx/compatibility.hpp	/^	typedef mat<2, 2, int, highp>		int2x2;			\/\/!< \\brief integer matrix with 2 x 2 components. (/;"	t	namespace:glm	typeref:typename:mat<2,2,int,highp>
int2x3	glm/gtx/compatibility.hpp	/^	typedef mat<2, 3, int, highp>		int2x3;			\/\/!< \\brief integer matrix with 2 x 3 components. (/;"	t	namespace:glm	typeref:typename:mat<2,3,int,highp>
int2x4	glm/gtx/compatibility.hpp	/^	typedef mat<2, 4, int, highp>		int2x4;			\/\/!< \\brief integer matrix with 2 x 4 components. (/;"	t	namespace:glm	typeref:typename:mat<2,4,int,highp>
int3	glm/gtx/compatibility.hpp	/^	typedef vec<3, int, highp>			int3;			\/\/!< \\brief integer vector with 3 components. (From GLM/;"	t	namespace:glm	typeref:typename:vec<3,int,highp>
int32	glm/ext/scalar_int_sized.hpp	/^		typedef std::int32_t		int32;$/;"	t	namespace:glm::detail	typeref:typename:std::int32_t
int32	glm/ext/scalar_int_sized.hpp	/^	typedef detail::int32		int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
int32	glm/fwd.hpp	/^	typedef std::int32_t			int32;$/;"	t	namespace:glm	typeref:typename:std::int32_t
int32_t	glm/fwd.hpp	/^	typedef int32					int32_t;$/;"	t	namespace:glm	typeref:typename:int32
int32_t	glm/gtc/type_precision.hpp	/^	typedef detail::int32 int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
int3x2	glm/gtx/compatibility.hpp	/^	typedef mat<3, 2, int, highp>		int3x2;			\/\/!< \\brief integer matrix with 3 x 2 components. (/;"	t	namespace:glm	typeref:typename:mat<3,2,int,highp>
int3x3	glm/gtx/compatibility.hpp	/^	typedef mat<3, 3, int, highp>		int3x3;			\/\/!< \\brief integer matrix with 3 x 3 components. (/;"	t	namespace:glm	typeref:typename:mat<3,3,int,highp>
int3x4	glm/gtx/compatibility.hpp	/^	typedef mat<3, 4, int, highp>		int3x4;			\/\/!< \\brief integer matrix with 3 x 4 components. (/;"	t	namespace:glm	typeref:typename:mat<3,4,int,highp>
int4	glm/gtx/compatibility.hpp	/^	typedef vec<4, int, highp>			int4;			\/\/!< \\brief integer vector with 4 components. (From GLM/;"	t	namespace:glm	typeref:typename:vec<4,int,highp>
int4x2	glm/gtx/compatibility.hpp	/^	typedef mat<4, 2, int, highp>		int4x2;			\/\/!< \\brief integer matrix with 4 x 2 components. (/;"	t	namespace:glm	typeref:typename:mat<4,2,int,highp>
int4x3	glm/gtx/compatibility.hpp	/^	typedef mat<4, 3, int, highp>		int4x3;			\/\/!< \\brief integer matrix with 4 x 3 components. (/;"	t	namespace:glm	typeref:typename:mat<4,3,int,highp>
int4x4	glm/gtx/compatibility.hpp	/^	typedef mat<4, 4, int, highp>		int4x4;			\/\/!< \\brief integer matrix with 4 x 4 components. (/;"	t	namespace:glm	typeref:typename:mat<4,4,int,highp>
int64	glm/detail/setup.hpp	/^		typedef std::int64_t						int64;$/;"	t	namespace:glm::detail	typeref:typename:std::int64_t
int64	glm/ext/scalar_int_sized.hpp	/^	typedef detail::int64		int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
int64	glm/fwd.hpp	/^	typedef std::int64_t			int64;$/;"	t	namespace:glm	typeref:typename:std::int64_t
int64_t	glm/fwd.hpp	/^	typedef int64					int64_t;$/;"	t	namespace:glm	typeref:typename:int64
int64_t	glm/gtc/type_precision.hpp	/^	typedef detail::int64 int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
int8	glm/ext/scalar_int_sized.hpp	/^		typedef std::int8_t			int8;$/;"	t	namespace:glm::detail	typeref:typename:std::int8_t
int8	glm/ext/scalar_int_sized.hpp	/^	typedef detail::int8		int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
int8	glm/fwd.hpp	/^	typedef std::int8_t				int8;$/;"	t	namespace:glm	typeref:typename:std::int8_t
int8_t	glm/fwd.hpp	/^	typedef int8					int8_t;$/;"	t	namespace:glm	typeref:typename:int8
int8_t	glm/gtc/type_precision.hpp	/^	typedef detail::int8 int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
intBitsToFloat	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER float intBitsToFloat(int const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
intBitsToFloat	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, float, Q> intBitsToFloat(vec<L, int, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,float,Q>
int_type	glm/detail/type_float.hpp	/^		typedef detail::int64 int_type;$/;"	t	union:glm::detail::float_t	typeref:typename:detail::int64
int_type	glm/detail/type_float.hpp	/^		typedef int int_type;$/;"	t	union:glm::detail::float_t	typeref:typename:int
interlace_method	lodepng.h	/^  unsigned interlace_method;  \/*interlace method of the original file*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
intermediate	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> intermediate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
internalFaceNormals	sphere.h	/^			vector<vec4> internalFaceNormals;$/;"	m	class:Models::Sphere	typeref:typename:vector<vec4>
internalFaceNormals	torus.h	/^			vector<vec4> internalFaceNormals;$/;"	m	class:Models::Torus	typeref:typename:vector<vec4>
internalVertexNormals	sphere.h	/^			vector<vec4> internalVertexNormals;$/;"	m	class:Models::Sphere	typeref:typename:vector<vec4>
internalVertexNormals	torus.h	/^			vector<vec4> internalVertexNormals;$/;"	m	class:Models::Torus	typeref:typename:vector<vec4>
internalVertices	sphere.h	/^			vector<vec4> internalVertices;$/;"	m	class:Models::Sphere	typeref:typename:vector<vec4>
internalVertices	torus.h	/^			vector<vec4> internalVertices;$/;"	m	class:Models::Torus	typeref:typename:vector<vec4>
interpolate	glm/gtx/matrix_interpolation.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> interpolate(mat<4, 4, T, Q> const& m1, mat<4, 4, T, Q> const/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
intersectLineSphere	glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectLineSphere$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersectLineTriangle	glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectLineTriangle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersectRayPlane	glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectRayPlane$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersectRaySphere	glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectRaySphere$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersectRayTriangle	glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectRayTriangle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
inverse	glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER mat<C, R, T, Q> inverse(mat<C, R, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<C,R,T,Q>
inverse	glm/ext/quaternion_common.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> inverse(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
inverse	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> inverse(tdualquat<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
inverseTranspose	glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> inverseTranspose(mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
inverseTranspose	glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> inverseTranspose(mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
inverseTranspose	glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> inverseTranspose(mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
inversesqrt	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER genType inversesqrt(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
inversesqrt	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> inversesqrt(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
io	glm/gtx/io.hpp	/^	namespace io$/;"	n	namespace:glm
io	glm/gtx/io.inl	/^namespace io$/;"	n	namespace:glm	file:
iround	glm/gtc/integer.inl	/^	GLM_FUNC_QUALIFIER int iround(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
iround	glm/gtc/integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, int, Q> iround(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>
isCompNull	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER vec<2, bool, Q> isCompNull(vec<2, T, Q> const& v, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,bool,Q>
isCompNull	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER vec<3, bool, Q> isCompNull(vec<3, T, Q> const& v, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,bool,Q>
isCompNull	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> isCompNull(vec<4, T, Q> const& v, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
isCompNull	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> isCompNull(vec<L, T, Q> const& v, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
isIdentity	glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isIdentity(mat<C, R, T, Q> const& m, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER bool isMultiple(genType Value, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> isMultiple(vec<L, T, Q> const& Value, T Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
isMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> isMultiple(vec<L, T, Q> const& Value, vec<L, T, Q> const& Mu/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
isNormalized	glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNormalized(mat<2, 2, T, Q> const& m, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNormalized	glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNormalized(mat<3, 3, T, Q> const& m, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNormalized	glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNormalized(mat<4, 4, T, Q> const& m, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNormalized	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool isNormalized(vec<L, T, Q> const& v, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNull	glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNull(mat<2, 2, T, Q> const& m, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNull	glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNull(mat<3, 3, T, Q> const& m, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNull	glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNull(mat<4, 4, T, Q> const& m, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNull	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool isNull(vec<L, T, Q> const& v, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isOrthogonal	glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isOrthogonal(mat<C, R, T, Q> const& m, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isPowerOfTwo	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER bool isPowerOfTwo(genType Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isPowerOfTwo	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> isPowerOfTwo(vec<L, T, Q> const& Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
is_aligned	glm/detail/qualifier.hpp	/^		struct is_aligned<glm::aligned_highp>$/;"	s	namespace:glm::detail
is_aligned	glm/detail/qualifier.hpp	/^		struct is_aligned<glm::aligned_lowp>$/;"	s	namespace:glm::detail
is_aligned	glm/detail/qualifier.hpp	/^		struct is_aligned<glm::aligned_mediump>$/;"	s	namespace:glm::detail
is_aligned	glm/detail/qualifier.hpp	/^	struct is_aligned$/;"	s	namespace:glm::detail
is_int	glm/detail/setup.hpp	/^	struct is_int$/;"	s	namespace:glm::detail
is_int	glm/detail/setup.hpp	/^	struct is_int<signed int>$/;"	s	namespace:glm::detail
is_int	glm/detail/setup.hpp	/^	struct is_int<unsigned int>$/;"	s	namespace:glm::detail
is_int	glm/ext/scalar_int_sized.hpp	/^	struct is_int<int16>$/;"	s	namespace:glm::detail
is_int	glm/ext/scalar_int_sized.hpp	/^	struct is_int<int64>$/;"	s	namespace:glm::detail
is_int	glm/ext/scalar_int_sized.hpp	/^	struct is_int<int8>$/;"	s	namespace:glm::detail
is_int	glm/ext/scalar_uint_sized.hpp	/^	struct is_int<uint16>$/;"	s	namespace:glm::detail
is_int	glm/ext/scalar_uint_sized.hpp	/^	struct is_int<uint64>$/;"	s	namespace:glm::detail
is_int	glm/ext/scalar_uint_sized.hpp	/^	struct is_int<uint8>$/;"	s	namespace:glm::detail
is_mat	glm/gtx/type_trait.hpp	/^		static bool const is_mat = false;$/;"	m	struct:glm::type	typeref:typename:bool const
is_mat	glm/gtx/type_trait.hpp	/^		static bool const is_mat = false;$/;"	v	namespace:glm	typeref:struct:type bool const
is_mat	glm/gtx/type_trait.hpp	/^		static bool const is_mat = true;$/;"	v	typeref:struct:type bool const
is_mat	glm/gtx/type_trait.inl	/^	bool const type<T>::is_mat;$/;"	m	class:glm::type<T>	typeref:typename:bool const
is_mat	glm/gtx/type_trait.inl	/^	bool const type<mat<C, R, T, Q> >::is_mat;$/;"	m	class:glm::type<mat<C, R, T, Q> >	typeref:typename:bool const
is_mat	glm/gtx/type_trait.inl	/^	bool const type<qua<T, Q> >::is_mat;$/;"	m	class:glm::type<qua<T, Q> >	typeref:typename:bool const
is_mat	glm/gtx/type_trait.inl	/^	bool const type<tdualquat<T, Q> >::is_mat;$/;"	m	class:glm::type<tdualquat<T, Q> >	typeref:typename:bool const
is_mat	glm/gtx/type_trait.inl	/^	bool const type<vec<L, T, Q> >::is_mat;$/;"	m	class:glm::type<vec<L, T, Q> >	typeref:typename:bool const
is_quat	glm/gtx/type_trait.hpp	/^		static bool const is_quat = false;$/;"	m	struct:glm::type	typeref:typename:bool const
is_quat	glm/gtx/type_trait.hpp	/^		static bool const is_quat = false;$/;"	v	namespace:glm	typeref:typename:bool const
is_quat	glm/gtx/type_trait.hpp	/^		static bool const is_quat = false;$/;"	v	typeref:typename:bool const
is_quat	glm/gtx/type_trait.inl	/^	bool const type<T>::is_quat;$/;"	m	class:glm::type<T>	typeref:typename:bool const
is_quat	glm/gtx/type_trait.inl	/^	bool const type<mat<C, R, T, Q> >::is_quat;$/;"	m	class:glm::type<mat<C, R, T, Q> >	typeref:typename:bool const
is_quat	glm/gtx/type_trait.inl	/^	bool const type<qua<T, Q> >::is_quat;$/;"	m	class:glm::type<qua<T, Q> >	typeref:typename:bool const
is_quat	glm/gtx/type_trait.inl	/^	bool const type<tdualquat<T, Q> >::is_quat;$/;"	m	class:glm::type<tdualquat<T, Q> >	typeref:typename:bool const
is_quat	glm/gtx/type_trait.inl	/^	bool const type<vec<L, T, Q> >::is_quat;$/;"	m	class:glm::type<vec<L, T, Q> >	typeref:typename:bool const
is_vec	glm/gtx/type_trait.hpp	/^		static bool const is_vec = false;$/;"	m	struct:glm::type	typeref:typename:bool const
is_vec	glm/gtx/type_trait.inl	/^	bool const type<T>::is_vec;$/;"	m	class:glm::type<T>	typeref:typename:bool const
is_vec	glm/gtx/type_trait.inl	/^	bool const type<mat<C, R, T, Q> >::is_vec;$/;"	m	class:glm::type<mat<C, R, T, Q> >	typeref:typename:bool const
is_vec	glm/gtx/type_trait.inl	/^	bool const type<qua<T, Q> >::is_vec;$/;"	m	class:glm::type<qua<T, Q> >	typeref:typename:bool const
is_vec	glm/gtx/type_trait.inl	/^	bool const type<tdualquat<T, Q> >::is_vec;$/;"	m	class:glm::type<tdualquat<T, Q> >	typeref:typename:bool const
is_vec	glm/gtx/type_trait.inl	/^	bool const type<vec<L, T, Q> >::is_vec;$/;"	m	class:glm::type<vec<L, T, Q> >	typeref:typename:bool const
isdenormal	glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER bool isdenormal(T const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isdenormal	glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER typename vec<1, T, Q>::bool_type isdenormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename vec<1,T,Q>::bool_type
isdenormal	glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER typename vec<2, T, Q>::bool_type isdenormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename vec<2,T,Q>::bool_type
isdenormal	glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER typename vec<3, T, Q>::bool_type isdenormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename vec<3,T,Q>::bool_type
isdenormal	glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER typename vec<4, T, Q>::bool_type isdenormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename vec<4,T,Q>::bool_type
isfinite	glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER bool isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isfinite	glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER vec<1, bool, Q> isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<1,bool,Q>
isfinite	glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER vec<2, bool, Q> isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,bool,Q>
isfinite	glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER vec<3, bool, Q> isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,bool,Q>
isfinite	glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
isinf	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER bool isinf(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isinf	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> isinf(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
isinf	glm/ext/quaternion_common.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> isinf(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
isnan	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER bool isnan(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isnan	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> isnan(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
isnan	glm/ext/quaternion_common.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> isnan(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
itext_keys	lodepng.h	/^  char** itext_keys; \/*the English keyword of the text chunk (e.g. "Comment")*\/$/;"	m	struct:LodePNGInfo	typeref:typename:char **
itext_langtags	lodepng.h	/^  char** itext_langtags; \/*language tag for this text's language, ISO\/IEC 646 string, e.g. ISO/;"	m	struct:LodePNGInfo	typeref:typename:char **
itext_num	lodepng.h	/^  size_t itext_num; \/*the amount of international texts in this PNG*\/$/;"	m	struct:LodePNGInfo	typeref:typename:size_t
itext_strings	lodepng.h	/^  char** itext_strings; \/*the actual international text - UTF-8 string*\/$/;"	m	struct:LodePNGInfo	typeref:typename:char **
itext_transkeys	lodepng.h	/^  char** itext_transkeys; \/*keyword translated to the international language - UTF-8 string*\/$/;"	m	struct:LodePNGInfo	typeref:typename:char **
ivec1	glm/ext/vector_int1.hpp	/^	typedef vec<1, int, defaultp>			ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,defaultp>
ivec1	glm/fwd.hpp	/^	typedef vec<1, i32, defaultp>	ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,defaultp>
ivec2	glm/ext/vector_int2.hpp	/^	typedef vec<2, int, defaultp>		ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,defaultp>
ivec2	glm/fwd.hpp	/^	typedef vec<2, i32, defaultp>	ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,defaultp>
ivec3	glm/ext/vector_int3.hpp	/^	typedef vec<3, int, defaultp>		ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,defaultp>
ivec3	glm/fwd.hpp	/^	typedef vec<3, i32, defaultp>	ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,defaultp>
ivec4	glm/ext/vector_int4.hpp	/^	typedef vec<4, int, defaultp>		ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,defaultp>
ivec4	glm/fwd.hpp	/^	typedef vec<4, i32, defaultp>	ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,defaultp>
key	lodepng.h	/^  unsigned key; \/*if true, image is not opaque. Only if true and alpha is false, color key is p/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned
key_b	lodepng.h	/^  unsigned key_b;       \/*blue component of color key*\/$/;"	m	struct:LodePNGColorMode	typeref:typename:unsigned
key_b	lodepng.h	/^  unsigned short key_b;$/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned short
key_defined	lodepng.h	/^  unsigned key_defined; \/*is a transparent color key given? 0 = false, 1 = true*\/$/;"	m	struct:LodePNGColorMode	typeref:typename:unsigned
key_g	lodepng.h	/^  unsigned key_g;       \/*green component of color key*\/$/;"	m	struct:LodePNGColorMode	typeref:typename:unsigned
key_g	lodepng.h	/^  unsigned short key_g;$/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned short
key_r	lodepng.h	/^  unsigned key_r;       \/*red\/greyscale component of color key*\/$/;"	m	struct:LodePNGColorMode	typeref:typename:unsigned
key_r	lodepng.h	/^  unsigned short key_r; \/*these values are always in 16-bit bitdepth in the profile*\/$/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned short
l1Norm	glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T l1Norm(vec<3, T, Q> const& a, vec<3, T, Q> const& b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
l1Norm	glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T l1Norm(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
l2Norm	glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T l2Norm(vec<3, T, Q> const& a, vec<3, T, Q> const& b$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
l2Norm	glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T l2Norm(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
lazymatching	lodepng.h	/^  unsigned lazymatching; \/*use lazy matching: better compression but a bit slower. Default: tru/;"	m	struct:LodePNGCompressSettings	typeref:typename:unsigned
ldexp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType ldexp(genType const& x, int const& exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ldexp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> ldexp(vec<L, T, Q> const& v, vec<L, int, Q> const& exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
leftHanded	glm/gtx/handed_coordinate_space.inl	/^	GLM_FUNC_QUALIFIER bool leftHanded$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
length	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER T length(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
length	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType length(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
length	glm/detail/type_mat2x2.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	glm/detail/type_mat2x3.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	glm/detail/type_mat2x4.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	glm/detail/type_mat3x2.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	glm/detail/type_mat3x3.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	glm/detail/type_mat3x4.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	glm/detail/type_mat4x2.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	glm/detail/type_mat4x3.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	glm/detail/type_mat4x4.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	glm/detail/type_quat.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}$/;"	f	struct:glm::qua	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	glm/detail/type_vec1.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}$/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	glm/detail/type_vec2.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}$/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	glm/detail/type_vec3.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}$/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	glm/detail/type_vec4.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}$/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	glm/ext/quaternion_geometric.inl	/^	GLM_FUNC_QUALIFIER T length(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
length	glm/gtx/dual_quaternion.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}$/;"	f	struct:glm::tdualquat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length2	glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T length2(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
length2	glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER genType length2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
length2	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER T length2(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
length_t	glm/detail/setup.hpp	/^		typedef int length_t;$/;"	t	namespace:glm	typeref:typename:int
length_t	glm/detail/setup.hpp	/^		typedef size_t length_t;$/;"	t	namespace:glm	typeref:typename:size_t
length_type	glm/detail/type_mat2x2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	glm/detail/type_mat2x3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	glm/detail/type_mat2x4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	glm/detail/type_mat3x2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	glm/detail/type_mat3x3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	glm/detail/type_mat3x4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	glm/detail/type_mat4x2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	glm/detail/type_mat4x3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	glm/detail/type_mat4x4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	glm/detail/type_quat.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::qua	typeref:typename:length_t
length_type	glm/detail/type_vec1.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::vec	typeref:typename:length_t
length_type	glm/detail/type_vec2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::vec	typeref:typename:length_t
length_type	glm/detail/type_vec3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::vec	typeref:typename:length_t
length_type	glm/detail/type_vec4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::vec	typeref:typename:length_t
length_type	glm/gtx/dual_quaternion.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tdualquat	typeref:typename:length_t
lengths	lodepng.cpp	/^  unsigned* lengths; \/*the lengths of the codes of the 1d-tree*\/$/;"	m	struct:HuffmanTree	typeref:typename:unsigned *	file:
lerp	glm/ext/quaternion_common.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> lerp(qua<T, Q> const& x, qua<T, Q> const& y, T a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
lerp	glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<2, T, Q> lerp(const vec<2, T, Q>& x, c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
lerp	glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<3, T, Q> lerp(const vec<3, T, Q>& x, c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
lerp	glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<4, T, Q> lerp(const vec<4, T, Q>& x, c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
lerp	glm/gtx/compatibility.hpp	/^	template<typename T> GLM_FUNC_QUALIFIER T lerp(T x, T y, T a){return mix(x, y, a);}												/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
lerp	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> lerp(tdualquat<T, Q> const& x, tdualquat<T, Q> const& y, T c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
lessThan	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> lessThan(vec<L, T, Q> const& x, vec<L, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
lessThan	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> lessThan(qua<T, Q> const& x, qua<T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
lessThan	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool lessThan$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
lessThanEqual	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> lessThanEqual(vec<L, T, Q> const& x, vec<L, T,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
lessThanEqual	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> lessThanEqual(qua<T, Q> const& x, qua<T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
lessThanEqual	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool lessThanEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
levels	glm/gtx/texture.inl	/^	inline T levels(T Extent)$/;"	f	namespace:glm	typeref:typename:T
levels	glm/gtx/texture.inl	/^	inline T levels(vec<L, T, Q> const& Extent)$/;"	f	namespace:glm	typeref:typename:T
linearGradient	glm/gtx/gradient_paint.inl	/^	GLM_FUNC_QUALIFIER T linearGradient$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
linearInterpolation	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType linearInterpolation(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
linearRand	glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER genType linearRand(genType Min, genType Max)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
linearRand	glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> linearRand(vec<L, T, Q> const& Min, vec<L, T, Q> const& Max)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
listsize	lodepng.cpp	/^  unsigned listsize;$/;"	m	struct:BPMLists	typeref:typename:unsigned	file:
literal	glm/gtx/string_cast.inl	/^	struct literal$/;"	s	namespace:glm::detail	file:
literal	glm/gtx/string_cast.inl	/^	struct literal<T, true>$/;"	s	namespace:glm::detail	file:
literal	glm/gtx/string_cast.inl	/^	struct literal<int64_t, false>$/;"	s	namespace:glm::detail	file:
literal	glm/gtx/string_cast.inl	/^	struct literal<uint64_t, false>$/;"	s	namespace:glm::detail	file:
ln_ln_two	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType ln_ln_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
ln_ten	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType ln_ten()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
ln_two	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType ln_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
loadShader	shaderprogram.cpp	/^GLuint ShaderProgram::loadShader(GLenum shaderType,const char* fileName) {$/;"	f	class:ShaderProgram	typeref:typename:GLuint
load_file	lodepng.cpp	/^unsigned load_file(std::vector<unsigned char>& buffer, const std::string& filename)$/;"	f	namespace:lodepng	typeref:typename:unsigned
locale_	glm/gtx/io.hpp	/^			locale_type     locale_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:locale_type
locale_type	glm/gtx/io.hpp	/^			typedef ::std::locale const            locale_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:::std::locale const
lodepng	lodepng.cpp	/^namespace lodepng$/;"	n	file:
lodepng	lodepng.h	/^namespace lodepng$/;"	n
lodepng_add32bitInt	lodepng.cpp	/^static void lodepng_add32bitInt(ucvector* buffer, unsigned value)$/;"	f	typeref:typename:void	file:
lodepng_add_itext	lodepng.cpp	/^unsigned lodepng_add_itext(LodePNGInfo* info, const char* key, const char* langtag,$/;"	f	typeref:typename:unsigned
lodepng_add_text	lodepng.cpp	/^unsigned lodepng_add_text(LodePNGInfo* info, const char* key, const char* str)$/;"	f	typeref:typename:unsigned
lodepng_auto_choose_color	lodepng.cpp	/^unsigned lodepng_auto_choose_color(LodePNGColorMode* mode_out,$/;"	f	typeref:typename:unsigned
lodepng_can_have_alpha	lodepng.cpp	/^unsigned lodepng_can_have_alpha(const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned
lodepng_chunk_ancillary	lodepng.cpp	/^unsigned char lodepng_chunk_ancillary(const unsigned char* chunk)$/;"	f	typeref:typename:unsigned char
lodepng_chunk_append	lodepng.cpp	/^unsigned lodepng_chunk_append(unsigned char** out, size_t* outlength, const unsigned char* chunk/;"	f	typeref:typename:unsigned
lodepng_chunk_check_crc	lodepng.cpp	/^unsigned lodepng_chunk_check_crc(const unsigned char* chunk)$/;"	f	typeref:typename:unsigned
lodepng_chunk_create	lodepng.cpp	/^unsigned lodepng_chunk_create(unsigned char** out, size_t* outlength, unsigned length,$/;"	f	typeref:typename:unsigned
lodepng_chunk_data	lodepng.cpp	/^unsigned char* lodepng_chunk_data(unsigned char* chunk)$/;"	f	typeref:typename:unsigned char *
lodepng_chunk_data_const	lodepng.cpp	/^const unsigned char* lodepng_chunk_data_const(const unsigned char* chunk)$/;"	f	typeref:typename:const unsigned char *
lodepng_chunk_generate_crc	lodepng.cpp	/^void lodepng_chunk_generate_crc(unsigned char* chunk)$/;"	f	typeref:typename:void
lodepng_chunk_length	lodepng.cpp	/^unsigned lodepng_chunk_length(const unsigned char* chunk)$/;"	f	typeref:typename:unsigned
lodepng_chunk_next	lodepng.cpp	/^unsigned char* lodepng_chunk_next(unsigned char* chunk)$/;"	f	typeref:typename:unsigned char *
lodepng_chunk_next_const	lodepng.cpp	/^const unsigned char* lodepng_chunk_next_const(const unsigned char* chunk)$/;"	f	typeref:typename:const unsigned char *
lodepng_chunk_private	lodepng.cpp	/^unsigned char lodepng_chunk_private(const unsigned char* chunk)$/;"	f	typeref:typename:unsigned char
lodepng_chunk_safetocopy	lodepng.cpp	/^unsigned char lodepng_chunk_safetocopy(const unsigned char* chunk)$/;"	f	typeref:typename:unsigned char
lodepng_chunk_type	lodepng.cpp	/^void lodepng_chunk_type(char type[5], const unsigned char* chunk)$/;"	f	typeref:typename:void
lodepng_chunk_type_equals	lodepng.cpp	/^unsigned char lodepng_chunk_type_equals(const unsigned char* chunk, const char* type)$/;"	f	typeref:typename:unsigned char
lodepng_clear_itext	lodepng.cpp	/^void lodepng_clear_itext(LodePNGInfo* info)$/;"	f	typeref:typename:void
lodepng_clear_text	lodepng.cpp	/^void lodepng_clear_text(LodePNGInfo* info)$/;"	f	typeref:typename:void
lodepng_color_mode_cleanup	lodepng.cpp	/^void lodepng_color_mode_cleanup(LodePNGColorMode* info)$/;"	f	typeref:typename:void
lodepng_color_mode_copy	lodepng.cpp	/^unsigned lodepng_color_mode_copy(LodePNGColorMode* dest, const LodePNGColorMode* source)$/;"	f	typeref:typename:unsigned
lodepng_color_mode_equal	lodepng.cpp	/^static int lodepng_color_mode_equal(const LodePNGColorMode* a, const LodePNGColorMode* b)$/;"	f	typeref:typename:int	file:
lodepng_color_mode_init	lodepng.cpp	/^void lodepng_color_mode_init(LodePNGColorMode* info)$/;"	f	typeref:typename:void
lodepng_color_profile_init	lodepng.cpp	/^void lodepng_color_profile_init(LodePNGColorProfile* profile)$/;"	f	typeref:typename:void
lodepng_compress_settings_init	lodepng.cpp	/^void lodepng_compress_settings_init(LodePNGCompressSettings* settings)$/;"	f	typeref:typename:void
lodepng_convert	lodepng.cpp	/^unsigned lodepng_convert(unsigned char* out, const unsigned char* in,$/;"	f	typeref:typename:unsigned
lodepng_crc32	lodepng.cpp	/^unsigned lodepng_crc32(const unsigned char* data, size_t length)$/;"	f	typeref:typename:unsigned
lodepng_crc32_table	lodepng.cpp	/^static unsigned lodepng_crc32_table[256] = {$/;"	v	typeref:typename:unsigned[256]	file:
lodepng_decode	lodepng.cpp	/^unsigned lodepng_decode(unsigned char** out, unsigned* w, unsigned* h,$/;"	f	typeref:typename:unsigned
lodepng_decode24	lodepng.cpp	/^unsigned lodepng_decode24(unsigned char** out, unsigned* w, unsigned* h, const unsigned char* in/;"	f	typeref:typename:unsigned
lodepng_decode24_file	lodepng.cpp	/^unsigned lodepng_decode24_file(unsigned char** out, unsigned* w, unsigned* h, const char* filena/;"	f	typeref:typename:unsigned
lodepng_decode32	lodepng.cpp	/^unsigned lodepng_decode32(unsigned char** out, unsigned* w, unsigned* h, const unsigned char* in/;"	f	typeref:typename:unsigned
lodepng_decode32_file	lodepng.cpp	/^unsigned lodepng_decode32_file(unsigned char** out, unsigned* w, unsigned* h, const char* filena/;"	f	typeref:typename:unsigned
lodepng_decode_file	lodepng.cpp	/^unsigned lodepng_decode_file(unsigned char** out, unsigned* w, unsigned* h, const char* filename/;"	f	typeref:typename:unsigned
lodepng_decode_memory	lodepng.cpp	/^unsigned lodepng_decode_memory(unsigned char** out, unsigned* w, unsigned* h, const unsigned cha/;"	f	typeref:typename:unsigned
lodepng_decoder_settings_init	lodepng.cpp	/^void lodepng_decoder_settings_init(LodePNGDecoderSettings* settings)$/;"	f	typeref:typename:void
lodepng_decompress_settings_init	lodepng.cpp	/^void lodepng_decompress_settings_init(LodePNGDecompressSettings* settings)$/;"	f	typeref:typename:void
lodepng_default_compress_settings	lodepng.cpp	/^const LodePNGCompressSettings lodepng_default_compress_settings = {2, 1, DEFAULT_WINDOWSIZE, 3, /;"	v	typeref:typename:const LodePNGCompressSettings
lodepng_default_decompress_settings	lodepng.cpp	/^const LodePNGDecompressSettings lodepng_default_decompress_settings = {0, 0, 0, 0};$/;"	v	typeref:typename:const LodePNGDecompressSettings
lodepng_deflate	lodepng.cpp	/^unsigned lodepng_deflate(unsigned char** out, size_t* outsize,$/;"	f	typeref:typename:unsigned
lodepng_deflatev	lodepng.cpp	/^static unsigned lodepng_deflatev(ucvector* out, const unsigned char* in, size_t insize,$/;"	f	typeref:typename:unsigned	file:
lodepng_encode	lodepng.cpp	/^unsigned lodepng_encode(unsigned char** out, size_t* outsize,$/;"	f	typeref:typename:unsigned
lodepng_encode24	lodepng.cpp	/^unsigned lodepng_encode24(unsigned char** out, size_t* outsize, const unsigned char* image, unsi/;"	f	typeref:typename:unsigned
lodepng_encode24_file	lodepng.cpp	/^unsigned lodepng_encode24_file(const char* filename, const unsigned char* image, unsigned w, uns/;"	f	typeref:typename:unsigned
lodepng_encode32	lodepng.cpp	/^unsigned lodepng_encode32(unsigned char** out, size_t* outsize, const unsigned char* image, unsi/;"	f	typeref:typename:unsigned
lodepng_encode32_file	lodepng.cpp	/^unsigned lodepng_encode32_file(const char* filename, const unsigned char* image, unsigned w, uns/;"	f	typeref:typename:unsigned
lodepng_encode_file	lodepng.cpp	/^unsigned lodepng_encode_file(const char* filename, const unsigned char* image, unsigned w, unsig/;"	f	typeref:typename:unsigned
lodepng_encode_memory	lodepng.cpp	/^unsigned lodepng_encode_memory(unsigned char** out, size_t* outsize, const unsigned char* image,$/;"	f	typeref:typename:unsigned
lodepng_encoder_settings_init	lodepng.cpp	/^void lodepng_encoder_settings_init(LodePNGEncoderSettings* settings)$/;"	f	typeref:typename:void
lodepng_error_text	lodepng.cpp	/^const char* lodepng_error_text(unsigned code)$/;"	f	typeref:typename:const char *
lodepng_free	lodepng.cpp	/^static void lodepng_free(void* ptr)$/;"	f	typeref:typename:void	file:
lodepng_get_bpp	lodepng.cpp	/^unsigned lodepng_get_bpp(const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned
lodepng_get_bpp_lct	lodepng.cpp	/^static unsigned lodepng_get_bpp_lct(LodePNGColorType colortype, unsigned bitdepth)$/;"	f	typeref:typename:unsigned	file:
lodepng_get_channels	lodepng.cpp	/^unsigned lodepng_get_channels(const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned
lodepng_get_color_profile	lodepng.cpp	/^unsigned lodepng_get_color_profile(LodePNGColorProfile* profile,$/;"	f	typeref:typename:unsigned
lodepng_get_raw_size	lodepng.cpp	/^size_t lodepng_get_raw_size(unsigned w, unsigned h, const LodePNGColorMode* color)$/;"	f	typeref:typename:size_t
lodepng_get_raw_size_idat	lodepng.cpp	/^static size_t lodepng_get_raw_size_idat(unsigned w, unsigned h, const LodePNGColorMode* color)$/;"	f	typeref:typename:size_t	file:
lodepng_get_raw_size_lct	lodepng.cpp	/^size_t lodepng_get_raw_size_lct(unsigned w, unsigned h, LodePNGColorType colortype, unsigned bit/;"	f	typeref:typename:size_t
lodepng_has_palette_alpha	lodepng.cpp	/^unsigned lodepng_has_palette_alpha(const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned
lodepng_huffman_code_lengths	lodepng.cpp	/^unsigned lodepng_huffman_code_lengths(unsigned* lengths, const unsigned* frequencies,$/;"	f	typeref:typename:unsigned
lodepng_inflate	lodepng.cpp	/^unsigned lodepng_inflate(unsigned char** out, size_t* outsize,$/;"	f	typeref:typename:unsigned
lodepng_inflatev	lodepng.cpp	/^static unsigned lodepng_inflatev(ucvector* out,$/;"	f	typeref:typename:unsigned	file:
lodepng_info_cleanup	lodepng.cpp	/^void lodepng_info_cleanup(LodePNGInfo* info)$/;"	f	typeref:typename:void
lodepng_info_copy	lodepng.cpp	/^unsigned lodepng_info_copy(LodePNGInfo* dest, const LodePNGInfo* source)$/;"	f	typeref:typename:unsigned
lodepng_info_init	lodepng.cpp	/^void lodepng_info_init(LodePNGInfo* info)$/;"	f	typeref:typename:void
lodepng_info_swap	lodepng.cpp	/^void lodepng_info_swap(LodePNGInfo* a, LodePNGInfo* b)$/;"	f	typeref:typename:void
lodepng_inspect	lodepng.cpp	/^unsigned lodepng_inspect(unsigned* w, unsigned* h, LodePNGState* state,$/;"	f	typeref:typename:unsigned
lodepng_is_alpha_type	lodepng.cpp	/^unsigned lodepng_is_alpha_type(const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned
lodepng_is_greyscale_type	lodepng.cpp	/^unsigned lodepng_is_greyscale_type(const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned
lodepng_is_palette_type	lodepng.cpp	/^unsigned lodepng_is_palette_type(const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned
lodepng_load_file	lodepng.cpp	/^unsigned lodepng_load_file(unsigned char** out, size_t* outsize, const char* filename)$/;"	f	typeref:typename:unsigned
lodepng_malloc	lodepng.cpp	/^static void* lodepng_malloc(size_t size)$/;"	f	typeref:typename:void *	file:
lodepng_palette_add	lodepng.cpp	/^unsigned lodepng_palette_add(LodePNGColorMode* info,$/;"	f	typeref:typename:unsigned
lodepng_palette_clear	lodepng.cpp	/^void lodepng_palette_clear(LodePNGColorMode* info)$/;"	f	typeref:typename:void
lodepng_read32bitInt	lodepng.cpp	/^unsigned lodepng_read32bitInt(const unsigned char* buffer)$/;"	f	typeref:typename:unsigned
lodepng_realloc	lodepng.cpp	/^static void* lodepng_realloc(void* ptr, size_t new_size)$/;"	f	typeref:typename:void *	file:
lodepng_save_file	lodepng.cpp	/^unsigned lodepng_save_file(const unsigned char* buffer, size_t buffersize, const char* filename)$/;"	f	typeref:typename:unsigned
lodepng_set32bitInt	lodepng.cpp	/^static void lodepng_set32bitInt(unsigned char* buffer, unsigned value)$/;"	f	typeref:typename:void	file:
lodepng_state_cleanup	lodepng.cpp	/^void lodepng_state_cleanup(LodePNGState* state)$/;"	f	typeref:typename:void
lodepng_state_copy	lodepng.cpp	/^void lodepng_state_copy(LodePNGState* dest, const LodePNGState* source)$/;"	f	typeref:typename:void
lodepng_state_init	lodepng.cpp	/^void lodepng_state_init(LodePNGState* state)$/;"	f	typeref:typename:void
lodepng_zlib_compress	lodepng.cpp	/^unsigned lodepng_zlib_compress(unsigned char** out, size_t* outsize, const unsigned char* in,$/;"	f	typeref:typename:unsigned
lodepng_zlib_decompress	lodepng.cpp	/^unsigned lodepng_zlib_decompress(unsigned char** out, size_t* outsize, const unsigned char* in,$/;"	f	typeref:typename:unsigned
log	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> log(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
log	glm/ext/quaternion_exponential.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> log(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
log	glm/gtx/log_base.inl	/^	GLM_FUNC_QUALIFIER genType log(genType const& x, genType const& base)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
log	glm/gtx/log_base.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> log(vec<L, T, Q> const& x, vec<L, T, Q> const& base)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
log2	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER genType log2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
log2	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> log2(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
lookAt	glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> lookAt(vec<3, T, Q> const& eye, vec<3, T, Q> const& center, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
lookAtLH	glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> lookAtLH(vec<3, T, Q> const& eye, vec<3, T, Q> const& center/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
lookAtRH	glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> lookAtRH(vec<3, T, Q> const& eye, vec<3, T, Q> const& center/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
lowestBitValue	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genIUType lowestBitValue(genIUType Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
lowestBitValue	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> lowestBitValue(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
lowp	glm/detail/qualifier.hpp	/^		lowp = packed_lowp, \/\/\/< By default lowp qualifier is also packed$/;"	e	enum:glm::qualifier
lowp_bvec1	glm/ext/vector_bool1_precision.hpp	/^	typedef vec<1, bool, lowp>			lowp_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,lowp>
lowp_bvec1	glm/fwd.hpp	/^	typedef vec<1, bool, lowp>		lowp_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,lowp>
lowp_bvec2	glm/ext/vector_bool2_precision.hpp	/^	typedef vec<2, bool, lowp>		lowp_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,lowp>
lowp_bvec2	glm/fwd.hpp	/^	typedef vec<2, bool, lowp>		lowp_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,lowp>
lowp_bvec3	glm/ext/vector_bool3_precision.hpp	/^	typedef vec<3, bool, lowp>		lowp_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,lowp>
lowp_bvec3	glm/fwd.hpp	/^	typedef vec<3, bool, lowp>		lowp_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,lowp>
lowp_bvec4	glm/ext/vector_bool4_precision.hpp	/^	typedef vec<4, bool, lowp>		lowp_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,lowp>
lowp_bvec4	glm/fwd.hpp	/^	typedef vec<4, bool, lowp>		lowp_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,lowp>
lowp_ddualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<double, lowp>		lowp_ddualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<double,lowp>
lowp_dmat2	glm/ext/matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, lowp>		lowp_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,lowp>
lowp_dmat2	glm/fwd.hpp	/^	typedef mat<2, 2, f64, lowp>		lowp_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,lowp>
lowp_dmat2x2	glm/ext/matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, lowp>		lowp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,lowp>
lowp_dmat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, double, lowp>		lowp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,lowp>
lowp_dmat2x3	glm/ext/matrix_double2x3_precision.hpp	/^	typedef mat<2, 3, double, lowp>		lowp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,lowp>
lowp_dmat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, double, lowp>		lowp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,lowp>
lowp_dmat2x4	glm/ext/matrix_double2x4_precision.hpp	/^	typedef mat<2, 4, double, lowp>		lowp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,lowp>
lowp_dmat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, double, lowp>		lowp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,lowp>
lowp_dmat3	glm/ext/matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, lowp>		lowp_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,lowp>
lowp_dmat3	glm/fwd.hpp	/^	typedef mat<3, 3, f64, lowp>		lowp_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,lowp>
lowp_dmat3x2	glm/ext/matrix_double3x2_precision.hpp	/^	typedef mat<3, 2, double, lowp>		lowp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,lowp>
lowp_dmat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, double, lowp>		lowp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,lowp>
lowp_dmat3x3	glm/ext/matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, lowp>		lowp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,lowp>
lowp_dmat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, double, lowp>		lowp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,lowp>
lowp_dmat3x4	glm/ext/matrix_double3x4_precision.hpp	/^	typedef mat<3, 4, double, lowp>		lowp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,lowp>
lowp_dmat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, double, lowp>		lowp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,lowp>
lowp_dmat4	glm/ext/matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, lowp>		lowp_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,lowp>
lowp_dmat4	glm/fwd.hpp	/^	typedef mat<4, 4, f64, lowp>		lowp_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,lowp>
lowp_dmat4x2	glm/ext/matrix_double4x2_precision.hpp	/^	typedef mat<4, 2, double, lowp>		lowp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,lowp>
lowp_dmat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, double, lowp>		lowp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,lowp>
lowp_dmat4x3	glm/ext/matrix_double4x3_precision.hpp	/^	typedef mat<4, 3, double, lowp>		lowp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,lowp>
lowp_dmat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, double, lowp>		lowp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,lowp>
lowp_dmat4x4	glm/ext/matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, lowp>		lowp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,lowp>
lowp_dmat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, double, lowp>		lowp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,lowp>
lowp_dquat	glm/ext/quaternion_double_precision.hpp	/^	typedef qua<double, lowp>		lowp_dquat;$/;"	t	namespace:glm	typeref:typename:qua<double,lowp>
lowp_dquat	glm/fwd.hpp	/^	typedef qua<double, lowp>			lowp_dquat;$/;"	t	namespace:glm	typeref:typename:qua<double,lowp>
lowp_dualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, lowp>		lowp_dualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,lowp>
lowp_dvec1	glm/ext/vector_double1_precision.hpp	/^	typedef vec<1, double, lowp>		lowp_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,lowp>
lowp_dvec1	glm/fwd.hpp	/^	typedef vec<1, f64, lowp>			lowp_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,lowp>
lowp_dvec2	glm/ext/vector_double2_precision.hpp	/^	typedef vec<2, double, lowp>		lowp_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,lowp>
lowp_dvec2	glm/fwd.hpp	/^	typedef vec<2, f64, lowp>			lowp_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,lowp>
lowp_dvec3	glm/ext/vector_double3_precision.hpp	/^	typedef vec<3, double, lowp>		lowp_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,lowp>
lowp_dvec3	glm/fwd.hpp	/^	typedef vec<3, f64, lowp>			lowp_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,lowp>
lowp_dvec4	glm/ext/vector_double4_precision.hpp	/^	typedef vec<4, double, lowp>		lowp_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,lowp>
lowp_dvec4	glm/fwd.hpp	/^	typedef vec<4, f64, lowp>			lowp_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,lowp>
lowp_f32	glm/fwd.hpp	/^	typedef float					lowp_f32;$/;"	t	namespace:glm	typeref:typename:float
lowp_f32	glm/gtc/type_precision.hpp	/^	typedef float32 lowp_f32;$/;"	t	namespace:glm	typeref:typename:float32
lowp_f32mat2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_f32mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,lowp>
lowp_f32mat2	glm/gtc/type_precision.hpp	/^	typedef lowp_f32mat2x2 lowp_f32mat2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2x2
lowp_f32mat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,lowp>
lowp_f32mat2x2	glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, lowp> lowp_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,lowp>
lowp_f32mat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, f32, lowp>		lowp_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,lowp>
lowp_f32mat2x3	glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f32, lowp> lowp_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,lowp>
lowp_f32mat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, f32, lowp>		lowp_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,lowp>
lowp_f32mat2x4	glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f32, lowp> lowp_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,lowp>
lowp_f32mat3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_f32mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,lowp>
lowp_f32mat3	glm/gtc/type_precision.hpp	/^	typedef lowp_f32mat3x3 lowp_f32mat3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3x3
lowp_f32mat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, f32, lowp>		lowp_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,lowp>
lowp_f32mat3x2	glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f32, lowp> lowp_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,lowp>
lowp_f32mat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,lowp>
lowp_f32mat3x3	glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, lowp> lowp_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,lowp>
lowp_f32mat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, f32, lowp>		lowp_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,lowp>
lowp_f32mat3x4	glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f32, lowp> lowp_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,lowp>
lowp_f32mat4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_f32mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,lowp>
lowp_f32mat4	glm/gtc/type_precision.hpp	/^	typedef lowp_f32mat4x4 lowp_f32mat4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4x4
lowp_f32mat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, f32, lowp>		lowp_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,lowp>
lowp_f32mat4x2	glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f32, lowp> lowp_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,lowp>
lowp_f32mat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, f32, lowp>		lowp_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,lowp>
lowp_f32mat4x3	glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f32, lowp> lowp_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,lowp>
lowp_f32mat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,lowp>
lowp_f32mat4x4	glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, lowp> lowp_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,lowp>
lowp_f32quat	glm/fwd.hpp	/^	typedef qua<f32, lowp>				lowp_f32quat;$/;"	t	namespace:glm	typeref:typename:qua<f32,lowp>
lowp_f32quat	glm/gtc/type_precision.hpp	/^	typedef qua<f32, lowp> lowp_f32quat;$/;"	t	namespace:glm	typeref:typename:qua<f32,lowp>
lowp_f32vec1	glm/fwd.hpp	/^	typedef vec<1, f32, lowp>			lowp_f32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,lowp>
lowp_f32vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, f32, lowp> lowp_f32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,lowp>
lowp_f32vec2	glm/fwd.hpp	/^	typedef vec<2, f32, lowp>			lowp_f32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,lowp>
lowp_f32vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, f32, lowp> lowp_f32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,lowp>
lowp_f32vec3	glm/fwd.hpp	/^	typedef vec<3, f32, lowp>			lowp_f32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,lowp>
lowp_f32vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, f32, lowp> lowp_f32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,lowp>
lowp_f32vec4	glm/fwd.hpp	/^	typedef vec<4, f32, lowp>			lowp_f32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,lowp>
lowp_f32vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, f32, lowp> lowp_f32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,lowp>
lowp_f64	glm/fwd.hpp	/^	typedef double					lowp_f64;$/;"	t	namespace:glm	typeref:typename:double
lowp_f64	glm/gtc/type_precision.hpp	/^	typedef float64 lowp_f64;$/;"	t	namespace:glm	typeref:typename:float64
lowp_f64mat2	glm/fwd.hpp	/^	typedef mat<2, 2, f64, lowp>		lowp_f64mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,lowp>
lowp_f64mat2	glm/gtc/type_precision.hpp	/^	typedef lowp_f64mat2x2 lowp_f64mat2;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat2x2
lowp_f64mat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, f64, lowp>		lowp_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,lowp>
lowp_f64mat2x2	glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f64, lowp> lowp_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,lowp>
lowp_f64mat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, f64, lowp>		lowp_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f64,lowp>
lowp_f64mat2x3	glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f64, lowp> lowp_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f64,lowp>
lowp_f64mat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, f64, lowp>		lowp_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f64,lowp>
lowp_f64mat2x4	glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f64, lowp> lowp_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f64,lowp>
lowp_f64mat3	glm/fwd.hpp	/^	typedef mat<3, 3, f64, lowp>		lowp_f64mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,lowp>
lowp_f64mat3	glm/gtc/type_precision.hpp	/^	typedef lowp_f64mat3x3 lowp_f64mat3;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat3x3
lowp_f64mat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, f64, lowp>		lowp_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f64,lowp>
lowp_f64mat3x2	glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f64, lowp> lowp_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f64,lowp>
lowp_f64mat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, f64, lowp>		lowp_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,lowp>
lowp_f64mat3x3	glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f64, lowp> lowp_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,lowp>
lowp_f64mat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, f64, lowp>		lowp_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f64,lowp>
lowp_f64mat3x4	glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f64, lowp> lowp_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f64,lowp>
lowp_f64mat4	glm/fwd.hpp	/^	typedef mat<4, 4, f64, lowp>		lowp_f64mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,lowp>
lowp_f64mat4	glm/gtc/type_precision.hpp	/^	typedef lowp_f64mat4x4 lowp_f64mat4;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat4x4
lowp_f64mat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, f64, lowp>		lowp_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f64,lowp>
lowp_f64mat4x2	glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f64, lowp> lowp_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f64,lowp>
lowp_f64mat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, f64, lowp>		lowp_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f64,lowp>
lowp_f64mat4x3	glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f64, lowp> lowp_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f64,lowp>
lowp_f64mat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, f64, lowp>		lowp_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,lowp>
lowp_f64mat4x4	glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f64, lowp> lowp_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,lowp>
lowp_f64quat	glm/fwd.hpp	/^	typedef qua<f64, lowp>				lowp_f64quat;$/;"	t	namespace:glm	typeref:typename:qua<f64,lowp>
lowp_f64quat	glm/gtc/type_precision.hpp	/^	typedef qua<f64, lowp> lowp_f64quat;$/;"	t	namespace:glm	typeref:typename:qua<f64,lowp>
lowp_f64vec1	glm/fwd.hpp	/^	typedef vec<1, f64, lowp>			lowp_f64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,lowp>
lowp_f64vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, f64, lowp> lowp_f64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,lowp>
lowp_f64vec2	glm/fwd.hpp	/^	typedef vec<2, f64, lowp>			lowp_f64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,lowp>
lowp_f64vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, f64, lowp> lowp_f64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,lowp>
lowp_f64vec3	glm/fwd.hpp	/^	typedef vec<3, f64, lowp>			lowp_f64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,lowp>
lowp_f64vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, f64, lowp> lowp_f64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,lowp>
lowp_f64vec4	glm/fwd.hpp	/^	typedef vec<4, f64, lowp>			lowp_f64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,lowp>
lowp_f64vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, f64, lowp> lowp_f64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,lowp>
lowp_fdualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, lowp>		lowp_fdualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,lowp>
lowp_float32	glm/fwd.hpp	/^	typedef float					lowp_float32;$/;"	t	namespace:glm	typeref:typename:float
lowp_float32	glm/gtc/type_precision.hpp	/^	typedef float32 lowp_float32;$/;"	t	namespace:glm	typeref:typename:float32
lowp_float32_t	glm/fwd.hpp	/^	typedef float					lowp_float32_t;$/;"	t	namespace:glm	typeref:typename:float
lowp_float32_t	glm/gtc/type_precision.hpp	/^	typedef float32 lowp_float32_t;$/;"	t	namespace:glm	typeref:typename:float32
lowp_float64	glm/fwd.hpp	/^	typedef double					lowp_float64;$/;"	t	namespace:glm	typeref:typename:double
lowp_float64	glm/gtc/type_precision.hpp	/^	typedef float64 lowp_float64;$/;"	t	namespace:glm	typeref:typename:float64
lowp_float64_t	glm/fwd.hpp	/^	typedef double					lowp_float64_t;$/;"	t	namespace:glm	typeref:typename:double
lowp_float64_t	glm/gtc/type_precision.hpp	/^	typedef float64 lowp_float64_t;$/;"	t	namespace:glm	typeref:typename:float64
lowp_fmat2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_fmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,lowp>
lowp_fmat2	glm/gtc/type_precision.hpp	/^	typedef lowp_fmat2x2 lowp_fmat2;$/;"	t	namespace:glm	typeref:typename:lowp_fmat2x2
lowp_fmat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_fmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,lowp>
lowp_fmat2x2	glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, lowp> lowp_fmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,lowp>
lowp_fmat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, f32, lowp>		lowp_fmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,lowp>
lowp_fmat2x3	glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f32, lowp> lowp_fmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,lowp>
lowp_fmat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, f32, lowp>		lowp_fmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,lowp>
lowp_fmat2x4	glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f32, lowp> lowp_fmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,lowp>
lowp_fmat3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_fmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,lowp>
lowp_fmat3	glm/gtc/type_precision.hpp	/^	typedef lowp_fmat3x3 lowp_fmat3;$/;"	t	namespace:glm	typeref:typename:lowp_fmat3x3
lowp_fmat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, f32, lowp>		lowp_fmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,lowp>
lowp_fmat3x2	glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f32, lowp> lowp_fmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,lowp>
lowp_fmat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_fmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,lowp>
lowp_fmat3x3	glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, lowp> lowp_fmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,lowp>
lowp_fmat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, f32, lowp>		lowp_fmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,lowp>
lowp_fmat3x4	glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f32, lowp> lowp_fmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,lowp>
lowp_fmat4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_fmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,lowp>
lowp_fmat4	glm/gtc/type_precision.hpp	/^	typedef lowp_fmat4x4 lowp_fmat4;$/;"	t	namespace:glm	typeref:typename:lowp_fmat4x4
lowp_fmat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, f32, lowp>		lowp_fmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,lowp>
lowp_fmat4x2	glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f32, lowp> lowp_fmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,lowp>
lowp_fmat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, f32, lowp>		lowp_fmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,lowp>
lowp_fmat4x3	glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f32, lowp> lowp_fmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,lowp>
lowp_fmat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_fmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,lowp>
lowp_fmat4x4	glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, lowp> lowp_fmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,lowp>
lowp_fquat	glm/fwd.hpp	/^	typedef qua<float, lowp>			lowp_fquat;$/;"	t	namespace:glm	typeref:typename:qua<float,lowp>
lowp_fvec1	glm/fwd.hpp	/^	typedef vec<1, float, lowp>			lowp_fvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,lowp>
lowp_fvec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, float, lowp> lowp_fvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,lowp>
lowp_fvec2	glm/fwd.hpp	/^	typedef vec<2, float, lowp>			lowp_fvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,lowp>
lowp_fvec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, float, lowp> lowp_fvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,lowp>
lowp_fvec3	glm/fwd.hpp	/^	typedef vec<3, float, lowp>			lowp_fvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,lowp>
lowp_fvec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, float, lowp> lowp_fvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,lowp>
lowp_fvec4	glm/fwd.hpp	/^	typedef vec<4, float, lowp>			lowp_fvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,lowp>
lowp_fvec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, float, lowp> lowp_fvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,lowp>
lowp_i16	glm/fwd.hpp	/^	typedef int16					lowp_i16;$/;"	t	namespace:glm	typeref:typename:int16
lowp_i16	glm/gtc/type_precision.hpp	/^	typedef detail::int16 lowp_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_i16vec1	glm/fwd.hpp	/^	typedef vec<1, i16, lowp>		lowp_i16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i16,lowp>
lowp_i16vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, i16, lowp>		lowp_i16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i16,lowp>
lowp_i16vec2	glm/fwd.hpp	/^	typedef vec<2, i16, lowp>		lowp_i16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i16,lowp>
lowp_i16vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, i16, lowp>		lowp_i16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i16,lowp>
lowp_i16vec3	glm/fwd.hpp	/^	typedef vec<3, i16, lowp>		lowp_i16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i16,lowp>
lowp_i16vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, i16, lowp>		lowp_i16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i16,lowp>
lowp_i16vec4	glm/fwd.hpp	/^	typedef vec<4, i16, lowp>		lowp_i16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i16,lowp>
lowp_i16vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, i16, lowp>		lowp_i16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i16,lowp>
lowp_i32	glm/fwd.hpp	/^	typedef int32					lowp_i32;$/;"	t	namespace:glm	typeref:typename:int32
lowp_i32	glm/gtc/type_precision.hpp	/^	typedef detail::int32 lowp_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_i32vec1	glm/fwd.hpp	/^	typedef vec<1, i32, lowp>		lowp_i32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,lowp>
lowp_i32vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, i32, lowp>		lowp_i32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,lowp>
lowp_i32vec2	glm/fwd.hpp	/^	typedef vec<2, i32, lowp>		lowp_i32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,lowp>
lowp_i32vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, i32, lowp>		lowp_i32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,lowp>
lowp_i32vec3	glm/fwd.hpp	/^	typedef vec<3, i32, lowp>		lowp_i32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,lowp>
lowp_i32vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, i32, lowp>		lowp_i32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,lowp>
lowp_i32vec4	glm/fwd.hpp	/^	typedef vec<4, i32, lowp>		lowp_i32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,lowp>
lowp_i32vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, i32, lowp>		lowp_i32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,lowp>
lowp_i64	glm/fwd.hpp	/^	typedef int64					lowp_i64;$/;"	t	namespace:glm	typeref:typename:int64
lowp_i64	glm/gtc/type_precision.hpp	/^	typedef detail::int64 lowp_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_i64vec1	glm/fwd.hpp	/^	typedef vec<1, i64, lowp>		lowp_i64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i64,lowp>
lowp_i64vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, i64, lowp>		lowp_i64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i64,lowp>
lowp_i64vec2	glm/fwd.hpp	/^	typedef vec<2, i64, lowp>		lowp_i64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i64,lowp>
lowp_i64vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, i64, lowp>		lowp_i64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i64,lowp>
lowp_i64vec3	glm/fwd.hpp	/^	typedef vec<3, i64, lowp>		lowp_i64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i64,lowp>
lowp_i64vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, i64, lowp>		lowp_i64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i64,lowp>
lowp_i64vec4	glm/fwd.hpp	/^	typedef vec<4, i64, lowp>		lowp_i64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i64,lowp>
lowp_i64vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, i64, lowp>		lowp_i64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i64,lowp>
lowp_i8	glm/fwd.hpp	/^	typedef int8					lowp_i8;$/;"	t	namespace:glm	typeref:typename:int8
lowp_i8	glm/gtc/type_precision.hpp	/^	typedef detail::int8 lowp_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_i8vec1	glm/fwd.hpp	/^	typedef vec<1, i8, lowp>		lowp_i8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i8,lowp>
lowp_i8vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, i8, lowp> lowp_i8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i8,lowp>
lowp_i8vec2	glm/fwd.hpp	/^	typedef vec<2, i8, lowp>		lowp_i8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i8,lowp>
lowp_i8vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, i8, lowp> lowp_i8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i8,lowp>
lowp_i8vec3	glm/fwd.hpp	/^	typedef vec<3, i8, lowp>		lowp_i8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i8,lowp>
lowp_i8vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, i8, lowp> lowp_i8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i8,lowp>
lowp_i8vec4	glm/fwd.hpp	/^	typedef vec<4, i8, lowp>		lowp_i8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i8,lowp>
lowp_i8vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, i8, lowp> lowp_i8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i8,lowp>
lowp_imat2	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, int, lowp>				lowp_imat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,lowp>
lowp_imat2x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, int, lowp>				lowp_imat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,lowp>
lowp_imat2x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 3, int, lowp>				lowp_imat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int,lowp>
lowp_imat2x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 4, int, lowp>				lowp_imat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int,lowp>
lowp_imat3	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, int, lowp>				lowp_imat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,lowp>
lowp_imat3x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 2, int, lowp>				lowp_imat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int,lowp>
lowp_imat3x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, int, lowp>				lowp_imat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,lowp>
lowp_imat3x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 4, int, lowp>				lowp_imat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int,lowp>
lowp_imat4	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, int, lowp>				lowp_imat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,lowp>
lowp_imat4x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 2, int, lowp>				lowp_imat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int,lowp>
lowp_imat4x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 3, int, lowp>				lowp_imat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int,lowp>
lowp_imat4x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, int, lowp>				lowp_imat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,lowp>
lowp_int16	glm/fwd.hpp	/^	typedef int16					lowp_int16;$/;"	t	namespace:glm	typeref:typename:int16
lowp_int16	glm/gtc/type_precision.hpp	/^	typedef detail::int16 lowp_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_int16_t	glm/fwd.hpp	/^	typedef int16					lowp_int16_t;$/;"	t	namespace:glm	typeref:typename:int16
lowp_int16_t	glm/gtc/type_precision.hpp	/^	typedef detail::int16 lowp_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_int32	glm/fwd.hpp	/^	typedef int32					lowp_int32;$/;"	t	namespace:glm	typeref:typename:int32
lowp_int32	glm/gtc/type_precision.hpp	/^	typedef detail::int32 lowp_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_int32_t	glm/fwd.hpp	/^	typedef int32					lowp_int32_t;$/;"	t	namespace:glm	typeref:typename:int32
lowp_int32_t	glm/gtc/type_precision.hpp	/^	typedef detail::int32 lowp_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_int64	glm/fwd.hpp	/^	typedef int64					lowp_int64;$/;"	t	namespace:glm	typeref:typename:int64
lowp_int64	glm/gtc/type_precision.hpp	/^	typedef detail::int64 lowp_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_int64_t	glm/fwd.hpp	/^	typedef int64					lowp_int64_t;$/;"	t	namespace:glm	typeref:typename:int64
lowp_int64_t	glm/gtc/type_precision.hpp	/^	typedef detail::int64 lowp_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_int8	glm/fwd.hpp	/^	typedef int8					lowp_int8;$/;"	t	namespace:glm	typeref:typename:int8
lowp_int8	glm/gtc/type_precision.hpp	/^	typedef detail::int8 lowp_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_int8_t	glm/fwd.hpp	/^	typedef int8					lowp_int8_t;$/;"	t	namespace:glm	typeref:typename:int8
lowp_int8_t	glm/gtc/type_precision.hpp	/^	typedef detail::int8 lowp_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_ivec1	glm/ext/vector_int1_precision.hpp	/^	typedef vec<1, int, lowp>			lowp_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,lowp>
lowp_ivec1	glm/fwd.hpp	/^	typedef vec<1, i32, lowp>		lowp_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,lowp>
lowp_ivec2	glm/ext/vector_int2_precision.hpp	/^	typedef vec<2, int, lowp>		lowp_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,lowp>
lowp_ivec2	glm/fwd.hpp	/^	typedef vec<2, i32, lowp>		lowp_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,lowp>
lowp_ivec3	glm/ext/vector_int3_precision.hpp	/^	typedef vec<3, int, lowp>		lowp_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,lowp>
lowp_ivec3	glm/fwd.hpp	/^	typedef vec<3, i32, lowp>		lowp_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,lowp>
lowp_ivec4	glm/ext/vector_int4_precision.hpp	/^	typedef vec<4, int, lowp>		lowp_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,lowp>
lowp_ivec4	glm/fwd.hpp	/^	typedef vec<4, i32, lowp>		lowp_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,lowp>
lowp_mat2	glm/ext/matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, lowp>		lowp_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,lowp>
lowp_mat2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,lowp>
lowp_mat2x2	glm/ext/matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, lowp>		lowp_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,lowp>
lowp_mat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,lowp>
lowp_mat2x3	glm/ext/matrix_float2x3_precision.hpp	/^	typedef mat<2, 3, float, lowp>		lowp_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,lowp>
lowp_mat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, f32, lowp>		lowp_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,lowp>
lowp_mat2x4	glm/ext/matrix_float2x4_precision.hpp	/^	typedef mat<2, 4, float, lowp>		lowp_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,lowp>
lowp_mat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, f32, lowp>		lowp_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,lowp>
lowp_mat3	glm/ext/matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, lowp>		lowp_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,lowp>
lowp_mat3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,lowp>
lowp_mat3x2	glm/ext/matrix_float3x2_precision.hpp	/^	typedef mat<3, 2, float, lowp>		lowp_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,lowp>
lowp_mat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, f32, lowp>		lowp_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,lowp>
lowp_mat3x3	glm/ext/matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, lowp>		lowp_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,lowp>
lowp_mat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,lowp>
lowp_mat3x4	glm/ext/matrix_float3x4_precision.hpp	/^	typedef mat<3, 4, float, lowp>		lowp_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,lowp>
lowp_mat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, f32, lowp>		lowp_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,lowp>
lowp_mat4	glm/ext/matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, lowp>		lowp_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,lowp>
lowp_mat4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,lowp>
lowp_mat4x2	glm/ext/matrix_float4x2_precision.hpp	/^	typedef mat<4, 2, float, lowp>		lowp_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,lowp>
lowp_mat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, f32, lowp>		lowp_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,lowp>
lowp_mat4x3	glm/ext/matrix_float4x3_precision.hpp	/^	typedef mat<4, 3, float, lowp>		lowp_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,lowp>
lowp_mat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, f32, lowp>		lowp_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,lowp>
lowp_mat4x4	glm/ext/matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, lowp>		lowp_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,lowp>
lowp_mat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,lowp>
lowp_quat	glm/ext/quaternion_float_precision.hpp	/^	typedef qua<float, lowp>		lowp_quat;$/;"	t	namespace:glm	typeref:typename:qua<float,lowp>
lowp_quat	glm/fwd.hpp	/^	typedef qua<float, lowp>			lowp_quat;$/;"	t	namespace:glm	typeref:typename:qua<float,lowp>
lowp_u16	glm/fwd.hpp	/^	typedef uint16					lowp_u16;$/;"	t	namespace:glm	typeref:typename:uint16
lowp_u16	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 lowp_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_u16vec1	glm/fwd.hpp	/^	typedef vec<1, u16, lowp>		lowp_u16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u16,lowp>
lowp_u16vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, u16, lowp>		lowp_u16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u16,lowp>
lowp_u16vec2	glm/fwd.hpp	/^	typedef vec<2, u16, lowp>		lowp_u16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u16,lowp>
lowp_u16vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, u16, lowp>		lowp_u16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u16,lowp>
lowp_u16vec3	glm/fwd.hpp	/^	typedef vec<3, u16, lowp>		lowp_u16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u16,lowp>
lowp_u16vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, u16, lowp>		lowp_u16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u16,lowp>
lowp_u16vec4	glm/fwd.hpp	/^	typedef vec<4, u16, lowp>		lowp_u16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u16,lowp>
lowp_u16vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, u16, lowp>		lowp_u16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u16,lowp>
lowp_u32	glm/fwd.hpp	/^	typedef uint32					lowp_u32;$/;"	t	namespace:glm	typeref:typename:uint32
lowp_u32	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 lowp_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_u32vec1	glm/fwd.hpp	/^	typedef vec<1, u32, lowp>		lowp_u32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,lowp>
lowp_u32vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, u32, lowp>		lowp_u32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,lowp>
lowp_u32vec2	glm/fwd.hpp	/^	typedef vec<2, u32, lowp>		lowp_u32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,lowp>
lowp_u32vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, u32, lowp>		lowp_u32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,lowp>
lowp_u32vec3	glm/fwd.hpp	/^	typedef vec<3, u32, lowp>		lowp_u32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,lowp>
lowp_u32vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, u32, lowp>		lowp_u32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,lowp>
lowp_u32vec4	glm/fwd.hpp	/^	typedef vec<4, u32, lowp>		lowp_u32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,lowp>
lowp_u32vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, u32, lowp>		lowp_u32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,lowp>
lowp_u64	glm/fwd.hpp	/^	typedef uint64					lowp_u64;$/;"	t	namespace:glm	typeref:typename:uint64
lowp_u64	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 lowp_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_u64vec1	glm/fwd.hpp	/^	typedef vec<1, u64, lowp>		lowp_u64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u64,lowp>
lowp_u64vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, u64, lowp>		lowp_u64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u64,lowp>
lowp_u64vec2	glm/fwd.hpp	/^	typedef vec<2, u64, lowp>		lowp_u64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u64,lowp>
lowp_u64vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, u64, lowp>		lowp_u64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u64,lowp>
lowp_u64vec3	glm/fwd.hpp	/^	typedef vec<3, u64, lowp>		lowp_u64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u64,lowp>
lowp_u64vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, u64, lowp>		lowp_u64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u64,lowp>
lowp_u64vec4	glm/fwd.hpp	/^	typedef vec<4, u64, lowp>		lowp_u64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u64,lowp>
lowp_u64vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, u64, lowp>		lowp_u64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u64,lowp>
lowp_u8	glm/fwd.hpp	/^	typedef uint8					lowp_u8;$/;"	t	namespace:glm	typeref:typename:uint8
lowp_u8	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 lowp_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_u8vec1	glm/fwd.hpp	/^	typedef vec<1, u8, lowp>		lowp_u8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u8,lowp>
lowp_u8vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, u8, lowp> lowp_u8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u8,lowp>
lowp_u8vec2	glm/fwd.hpp	/^	typedef vec<2, u8, lowp>		lowp_u8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u8,lowp>
lowp_u8vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, u8, lowp> lowp_u8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u8,lowp>
lowp_u8vec3	glm/fwd.hpp	/^	typedef vec<3, u8, lowp>		lowp_u8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u8,lowp>
lowp_u8vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, u8, lowp> lowp_u8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u8,lowp>
lowp_u8vec4	glm/fwd.hpp	/^	typedef vec<4, u8, lowp>		lowp_u8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u8,lowp>
lowp_u8vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, u8, lowp> lowp_u8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u8,lowp>
lowp_uint16	glm/fwd.hpp	/^	typedef uint16					lowp_uint16;$/;"	t	namespace:glm	typeref:typename:uint16
lowp_uint16	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 lowp_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_uint16_t	glm/fwd.hpp	/^	typedef uint16					lowp_uint16_t;$/;"	t	namespace:glm	typeref:typename:uint16
lowp_uint16_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 lowp_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_uint32	glm/fwd.hpp	/^	typedef uint32					lowp_uint32;$/;"	t	namespace:glm	typeref:typename:uint32
lowp_uint32	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 lowp_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_uint32_t	glm/fwd.hpp	/^	typedef uint32					lowp_uint32_t;$/;"	t	namespace:glm	typeref:typename:uint32
lowp_uint32_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 lowp_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_uint64	glm/fwd.hpp	/^	typedef uint64					lowp_uint64;$/;"	t	namespace:glm	typeref:typename:uint64
lowp_uint64	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 lowp_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_uint64_t	glm/fwd.hpp	/^	typedef uint64					lowp_uint64_t;$/;"	t	namespace:glm	typeref:typename:uint64
lowp_uint64_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 lowp_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_uint8	glm/fwd.hpp	/^	typedef uint8					lowp_uint8;$/;"	t	namespace:glm	typeref:typename:uint8
lowp_uint8	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 lowp_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_uint8_t	glm/fwd.hpp	/^	typedef uint8					lowp_uint8_t;$/;"	t	namespace:glm	typeref:typename:uint8
lowp_uint8_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 lowp_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_umat2	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, uint, lowp>				lowp_umat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,lowp>
lowp_umat2x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, uint, lowp>				lowp_umat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,lowp>
lowp_umat2x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 3, uint, lowp>				lowp_umat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint,lowp>
lowp_umat2x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 4, uint, lowp>				lowp_umat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint,lowp>
lowp_umat3	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, uint, lowp>				lowp_umat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,lowp>
lowp_umat3x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 2, uint, lowp>				lowp_umat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint,lowp>
lowp_umat3x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, uint, lowp>				lowp_umat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,lowp>
lowp_umat3x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 4, uint, lowp>				lowp_umat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint,lowp>
lowp_umat4	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, uint, lowp>				lowp_umat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,lowp>
lowp_umat4x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 2, uint, lowp>				lowp_umat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint,lowp>
lowp_umat4x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 3, uint, lowp>				lowp_umat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint,lowp>
lowp_umat4x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, uint, lowp>				lowp_umat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,lowp>
lowp_uvec1	glm/ext/vector_uint1_precision.hpp	/^	typedef vec<1, unsigned int, lowp>			lowp_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,unsigned int,lowp>
lowp_uvec1	glm/fwd.hpp	/^	typedef vec<1, u32, lowp>		lowp_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,lowp>
lowp_uvec2	glm/ext/vector_uint2_precision.hpp	/^	typedef vec<2, unsigned int, lowp>		lowp_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,unsigned int,lowp>
lowp_uvec2	glm/fwd.hpp	/^	typedef vec<2, u32, lowp>		lowp_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,lowp>
lowp_uvec3	glm/ext/vector_uint3_precision.hpp	/^	typedef vec<3, unsigned int, lowp>		lowp_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,unsigned int,lowp>
lowp_uvec3	glm/fwd.hpp	/^	typedef vec<3, u32, lowp>		lowp_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,lowp>
lowp_uvec4	glm/ext/vector_uint4_precision.hpp	/^	typedef vec<4, unsigned int, lowp>		lowp_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,unsigned int,lowp>
lowp_uvec4	glm/fwd.hpp	/^	typedef vec<4, u32, lowp>		lowp_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,lowp>
lowp_vec1	glm/ext/vector_float1_precision.hpp	/^	typedef vec<1, float, lowp>			lowp_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,lowp>
lowp_vec1	glm/fwd.hpp	/^	typedef vec<1, float, lowp>			lowp_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,lowp>
lowp_vec2	glm/ext/vector_float2_precision.hpp	/^	typedef vec<2, float, lowp>			lowp_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,lowp>
lowp_vec2	glm/fwd.hpp	/^	typedef vec<2, float, lowp>			lowp_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,lowp>
lowp_vec3	glm/ext/vector_float3_precision.hpp	/^	typedef vec<3, float, lowp>			lowp_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,lowp>
lowp_vec3	glm/fwd.hpp	/^	typedef vec<3, float, lowp>			lowp_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,lowp>
lowp_vec4	glm/ext/vector_float4_precision.hpp	/^	typedef vec<4, float, lowp>			lowp_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,lowp>
lowp_vec4	glm/fwd.hpp	/^	typedef vec<4, float, lowp>			lowp_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,lowp>
lsw	glm/ext/scalar_ulp.inl	/^		int lsw;$/;"	m	struct:__anonb4cc412b020a::__anonb4cc412b0308	typeref:typename:int	file:
luminosity	glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER T luminosity(const vec<3, T, Q>& color)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
lxNorm	glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T lxNorm(vec<3, T, Q> const& v, unsigned int Depth)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
lxNorm	glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T lxNorm(vec<3, T, Q> const& x, vec<3, T, Q> const& y, unsigned int Depth)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
main	main_file.cpp	/^int main(void)$/;"	f	typeref:typename:int
main_file	Makefile	/^main_file: $(FILES) $(HEADERS)$/;"	t
make_mat2	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, defaultp> make_mat2(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,defaultp>
make_mat2x2	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, defaultp> make_mat2x2(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,defaultp>
make_mat2x3	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, defaultp> make_mat2x3(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,defaultp>
make_mat2x4	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, defaultp> make_mat2x4(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,defaultp>
make_mat3	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, defaultp> make_mat3(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,defaultp>
make_mat3x2	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, defaultp> make_mat3x2(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,defaultp>
make_mat3x3	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, defaultp> make_mat3x3(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,defaultp>
make_mat3x4	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, defaultp> make_mat3x4(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,defaultp>
make_mat4	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> make_mat4(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
make_mat4x2	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, defaultp> make_mat4x2(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,defaultp>
make_mat4x3	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, defaultp> make_mat4x3(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,defaultp>
make_mat4x4	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> make_mat4x4(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
make_quat	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER qua<T, defaultp> make_quat(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,defaultp>
make_unsigned	glm/detail/setup.hpp	/^	struct make_unsigned$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/setup.hpp	/^	struct make_unsigned<char>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/setup.hpp	/^	struct make_unsigned<int64>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/setup.hpp	/^	struct make_unsigned<int>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/setup.hpp	/^	struct make_unsigned<long>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/setup.hpp	/^	struct make_unsigned<short>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/setup.hpp	/^	struct make_unsigned<uint64>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/setup.hpp	/^	struct make_unsigned<unsigned char>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/setup.hpp	/^	struct make_unsigned<unsigned int>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/setup.hpp	/^	struct make_unsigned<unsigned long>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/setup.hpp	/^	struct make_unsigned<unsigned short>$/;"	s	namespace:glm::detail
make_vec1	glm/gtc/type_ptr.inl	/^	inline vec<1, T, Q> make_vec1(vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:vec<1,T,Q>
make_vec1	glm/gtc/type_ptr.inl	/^	inline vec<1, T, Q> make_vec1(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:vec<1,T,Q>
make_vec1	glm/gtc/type_ptr.inl	/^	inline vec<1, T, Q> make_vec1(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:vec<1,T,Q>
make_vec1	glm/gtc/type_ptr.inl	/^	inline vec<1, T, Q> make_vec1(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:vec<1,T,Q>
make_vec2	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER vec<2, T, defaultp> make_vec2(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,defaultp>
make_vec2	glm/gtc/type_ptr.inl	/^	inline vec<2, T, Q> make_vec2(vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:vec<2,T,Q>
make_vec2	glm/gtc/type_ptr.inl	/^	inline vec<2, T, Q> make_vec2(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:vec<2,T,Q>
make_vec2	glm/gtc/type_ptr.inl	/^	inline vec<2, T, Q> make_vec2(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:vec<2,T,Q>
make_vec2	glm/gtc/type_ptr.inl	/^	inline vec<2, T, Q> make_vec2(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:vec<2,T,Q>
make_vec3	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, defaultp> make_vec3(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,defaultp>
make_vec3	glm/gtc/type_ptr.inl	/^	inline vec<3, T, Q> make_vec3(vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:vec<3,T,Q>
make_vec3	glm/gtc/type_ptr.inl	/^	inline vec<3, T, Q> make_vec3(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:vec<3,T,Q>
make_vec3	glm/gtc/type_ptr.inl	/^	inline vec<3, T, Q> make_vec3(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:vec<3,T,Q>
make_vec3	glm/gtc/type_ptr.inl	/^	inline vec<3, T, Q> make_vec3(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:vec<3,T,Q>
make_vec4	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, defaultp> make_vec4(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,defaultp>
make_vec4	glm/gtc/type_ptr.inl	/^	inline vec<4, T, Q> make_vec4(vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:vec<4,T,Q>
make_vec4	glm/gtc/type_ptr.inl	/^	inline vec<4, T, Q> make_vec4(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:vec<4,T,Q>
make_vec4	glm/gtc/type_ptr.inl	/^	inline vec<4, T, Q> make_vec4(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:vec<4,T,Q>
make_vec4	glm/gtc/type_ptr.inl	/^	inline vec<4, T, Q> make_vec4(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:vec<4,T,Q>
mantissa	glm/detail/type_float.hpp	/^		GLM_CONSTEXPR int_type mantissa() const { return i & ((1 << 23) - 1); }$/;"	f	union:glm::detail::float_t	typeref:typename:GLM_CONSTEXPR int_type
mantissa	glm/detail/type_float.hpp	/^		GLM_CONSTEXPR int_type mantissa() const { return i & ((int_type(1) << 52) - 1); }$/;"	f	union:glm::detail::float_t	typeref:typename:GLM_CONSTEXPR int_type
mask	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER T mask(T Bits)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
mask	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIUType mask(genIUType Bits)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
mask	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> mask(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
mat	glm/detail/glm.cpp	/^template struct mat<2, 2, float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 2, float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 2, float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 2, float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 2, float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 2, float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 3, float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 3, float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 3, float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 3, float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 3, float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 3, float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 4, float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 4, float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 4, float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 4, float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 4, float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<2, 4, float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 2, float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 2, float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 2, float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 2, float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 2, float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 2, float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 3, float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 3, float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 3, float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 3, float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 3, float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 3, float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 4, float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 4, float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 4, float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 4, float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 4, float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<3, 4, float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 2, float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 2, float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 2, float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 2, float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 2, float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 2, float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 3, float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 3, float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 3, float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 3, float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 3, float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 3, float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 4, float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 4, float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 4, float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 4, float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 4, float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/glm.cpp	/^template struct mat<4, 4, float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
mat	glm/detail/type_mat2x2.hpp	/^	struct mat<2, 2, T, Q>$/;"	s	namespace:glm
mat	glm/detail/type_mat2x2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(T scalar)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(col_type const& v0, col_type const& v1)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<2, 2, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<2, 2, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<2, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<3, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<4, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<4, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(vec<2, V1, Q> const& v1, vec<2, V2, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x3.hpp	/^	struct mat<2, 3, T, Q>$/;"	s	namespace:glm
mat	glm/detail/type_mat2x3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR  mat<2, 3, T, Q>::mat(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(T scalar)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(col_type const& v0, col_type const& v1)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<2, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<2, 3, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<2, 3, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<3, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<4, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<4, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(vec<3, V1, Q> const& v1, vec<3, V2, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x4.hpp	/^	struct mat<2, 4, T, Q>$/;"	s	namespace:glm
mat	glm/detail/type_mat2x4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(T s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(col_type const& v0, col_type const& v1)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<2, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<2, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<2, 4, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<2, 4, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<3, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<4, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<4, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(vec<4, V1, Q> const& v1, vec<4, V2, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x2.hpp	/^	struct mat<3, 2, T, Q>$/;"	s	namespace:glm
mat	glm/detail/type_mat3x2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(T s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(col_type const& v0, col_type const& v1, c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<2, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<2, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<3, 2, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<3, 2, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<4, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<4, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(vec<2, V0, Q> const& v0, vec<2, V1, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x3.hpp	/^	struct mat<3, 3, T, Q>$/;"	s	namespace:glm
mat	glm/detail/type_mat3x3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(T s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(col_type const& v0, col_type const& v1, c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<2, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<2, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<3, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<3, 3, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<3, 3, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<4, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<4, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(vec<3, V1, Q> const& v1, vec<3, V2, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x4.hpp	/^	struct mat<3, 4, T, Q>$/;"	s	namespace:glm
mat	glm/detail/type_mat3x4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(T s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(col_type const& v0, col_type const& v1, c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<2, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<2, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<3, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<3, 4, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<3, 4, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<4, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<4, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(vec<4, V1, Q> const& v0, vec<4, V2, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x2.hpp	/^	struct mat<4, 2, T, Q>$/;"	s	namespace:glm
mat	glm/detail/type_mat4x2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(T s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(col_type const& v0, col_type const& v1, c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<2, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<2, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<3, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<4, 2, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<4, 2, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<4, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(vec<2, V0, Q> const& v0, vec<2, V1, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x3.hpp	/^	struct mat<4, 3, T, Q>$/;"	s	namespace:glm
mat	glm/detail/type_mat4x3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(T const& s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(col_type const& v0, col_type const& v1, c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<2, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<2, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<3, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<4, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<4, 3, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<4, 3, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(vec<3, V1, Q> const& v1, vec<3, V2, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x4.hpp	/^	struct mat<4, 4, T, Q>$/;"	s	namespace:glm
mat	glm/detail/type_mat4x4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(T const& s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(col_type const& v0, col_type const& v1, c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<2, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<2, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<3, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<4, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<4, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<4, 4, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<4, 4, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(vec<4, V1, Q> const& v1, vec<4, V2, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat2	glm/ext/matrix_float2x2.hpp	/^	typedef mat<2, 2, float, defaultp>		mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,defaultp>
mat2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
mat2x2	glm/ext/matrix_float2x2.hpp	/^	typedef mat<2, 2, float, defaultp>		mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,defaultp>
mat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
mat2x3	glm/ext/matrix_float2x3.hpp	/^	typedef mat<2, 3, float, defaultp>		mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,defaultp>
mat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, f32, defaultp>	mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,defaultp>
mat2x4	glm/ext/matrix_float2x4.hpp	/^	typedef mat<2, 4, float, defaultp>		mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,defaultp>
mat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, f32, defaultp>	mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,defaultp>
mat2x4_cast	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> mat2x4_cast(tdualquat<T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
mat3	glm/ext/matrix_float3x3.hpp	/^	typedef mat<3, 3, float, defaultp>			mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,defaultp>
mat3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
mat3_cast	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> mat3_cast(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
mat3x2	glm/ext/matrix_float3x2.hpp	/^	typedef mat<3, 2, float, defaultp>			mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,defaultp>
mat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, f32, defaultp>	mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,defaultp>
mat3x3	glm/ext/matrix_float3x3.hpp	/^	typedef mat<3, 3, float, defaultp>			mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,defaultp>
mat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
mat3x4	glm/ext/matrix_float3x4.hpp	/^	typedef mat<3, 4, float, defaultp>			mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,defaultp>
mat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, f32, defaultp>	mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,defaultp>
mat3x4_cast	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> mat3x4_cast(tdualquat<T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
mat4	glm/ext/matrix_float4x4.hpp	/^	typedef mat<4, 4, float, defaultp>			mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,defaultp>
mat4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
mat4_cast	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> mat4_cast(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
mat4x2	glm/ext/matrix_float4x2.hpp	/^	typedef mat<4, 2, float, defaultp>			mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,defaultp>
mat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, f32, defaultp>	mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,defaultp>
mat4x3	glm/ext/matrix_float4x3.hpp	/^	typedef mat<4, 3, float, defaultp>			mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,defaultp>
mat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, f32, defaultp>	mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,defaultp>
mat4x4	glm/ext/matrix_float4x4.hpp	/^	typedef mat<4, 4, float, defaultp>			mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,defaultp>
mat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
matrixCompMult	glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER mat<C, R, T, Q> matrixCompMult(mat<C, R, T, Q> const& x, mat<C, R, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<C,R,T,Q>
matrixCross3	glm/gtx/matrix_cross_product.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> matrixCross3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
matrixCross4	glm/gtx/matrix_cross_product.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> matrixCross4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
max	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType max(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
max	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> max(vec<L, T, Q> const& a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
max	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> max(vec<L, T, Q> const& a, vec<L, T, Q> const& b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
max	glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER T max(T a, T b, T c)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
max	glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER T max(T a, T b, T c, T d)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
max	glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> max(vec<L, T, Q> const& x, vec<L, T, Q> const& y,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
max	glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER C<T> max$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER C<T>
max	glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER T max$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
max	glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER T max($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
maxbitlen	lodepng.cpp	/^  unsigned maxbitlen; \/*maximum number of bits a single code can get*\/$/;"	m	struct:HuffmanTree	typeref:typename:unsigned	file:
mediump	glm/detail/qualifier.hpp	/^		mediump = packed_mediump, \/\/\/< By default mediump qualifier is also packed$/;"	e	enum:glm::qualifier
mediump_bvec1	glm/ext/vector_bool1_precision.hpp	/^	typedef vec<1, bool, mediump>		mediump_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,mediump>
mediump_bvec1	glm/fwd.hpp	/^	typedef vec<1, bool, mediump>	mediump_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,mediump>
mediump_bvec2	glm/ext/vector_bool2_precision.hpp	/^	typedef vec<2, bool, mediump>	mediump_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,mediump>
mediump_bvec2	glm/fwd.hpp	/^	typedef vec<2, bool, mediump>	mediump_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,mediump>
mediump_bvec3	glm/ext/vector_bool3_precision.hpp	/^	typedef vec<3, bool, mediump>	mediump_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,mediump>
mediump_bvec3	glm/fwd.hpp	/^	typedef vec<3, bool, mediump>	mediump_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,mediump>
mediump_bvec4	glm/ext/vector_bool4_precision.hpp	/^	typedef vec<4, bool, mediump>	mediump_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,mediump>
mediump_bvec4	glm/fwd.hpp	/^	typedef vec<4, bool, mediump>	mediump_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,mediump>
mediump_ddualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<double, mediump>	mediump_ddualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<double,mediump>
mediump_dmat2	glm/ext/matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, mediump>	mediump_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,mediump>
mediump_dmat2	glm/fwd.hpp	/^	typedef mat<2, 2, f64, mediump>		mediump_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,mediump>
mediump_dmat2x2	glm/ext/matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, mediump>	mediump_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,mediump>
mediump_dmat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, double, mediump>	mediump_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,mediump>
mediump_dmat2x3	glm/ext/matrix_double2x3_precision.hpp	/^	typedef mat<2, 3, double, mediump>	mediump_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,mediump>
mediump_dmat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, double, mediump>	mediump_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,mediump>
mediump_dmat2x4	glm/ext/matrix_double2x4_precision.hpp	/^	typedef mat<2, 4, double, mediump>	mediump_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,mediump>
mediump_dmat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, double, mediump>	mediump_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,mediump>
mediump_dmat3	glm/ext/matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, mediump>	mediump_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,mediump>
mediump_dmat3	glm/fwd.hpp	/^	typedef mat<3, 3, f64, mediump>		mediump_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,mediump>
mediump_dmat3x2	glm/ext/matrix_double3x2_precision.hpp	/^	typedef mat<3, 2, double, mediump>	mediump_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,mediump>
mediump_dmat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, double, mediump>	mediump_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,mediump>
mediump_dmat3x3	glm/ext/matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, mediump>	mediump_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,mediump>
mediump_dmat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, double, mediump>	mediump_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,mediump>
mediump_dmat3x4	glm/ext/matrix_double3x4_precision.hpp	/^	typedef mat<3, 4, double, mediump>	mediump_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,mediump>
mediump_dmat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, double, mediump>	mediump_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,mediump>
mediump_dmat4	glm/ext/matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, mediump>	mediump_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,mediump>
mediump_dmat4	glm/fwd.hpp	/^	typedef mat<4, 4, f64, mediump>		mediump_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,mediump>
mediump_dmat4x2	glm/ext/matrix_double4x2_precision.hpp	/^	typedef mat<4, 2, double, mediump>	mediump_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,mediump>
mediump_dmat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, double, mediump>	mediump_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,mediump>
mediump_dmat4x3	glm/ext/matrix_double4x3_precision.hpp	/^	typedef mat<4, 3, double, mediump>	mediump_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,mediump>
mediump_dmat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, double, mediump>	mediump_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,mediump>
mediump_dmat4x4	glm/ext/matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, mediump>	mediump_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,mediump>
mediump_dmat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, double, mediump>	mediump_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,mediump>
mediump_dquat	glm/ext/quaternion_double_precision.hpp	/^	typedef qua<double, mediump>	mediump_dquat;$/;"	t	namespace:glm	typeref:typename:qua<double,mediump>
mediump_dquat	glm/fwd.hpp	/^	typedef qua<double, mediump>		mediump_dquat;$/;"	t	namespace:glm	typeref:typename:qua<double,mediump>
mediump_dualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, mediump>	mediump_dualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,mediump>
mediump_dvec1	glm/ext/vector_double1_precision.hpp	/^	typedef vec<1, double, mediump>		mediump_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,mediump>
mediump_dvec1	glm/fwd.hpp	/^	typedef vec<1, f64, mediump>		mediump_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,mediump>
mediump_dvec2	glm/ext/vector_double2_precision.hpp	/^	typedef vec<2, double, mediump>		mediump_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,mediump>
mediump_dvec2	glm/fwd.hpp	/^	typedef vec<2, f64, mediump>		mediump_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,mediump>
mediump_dvec3	glm/ext/vector_double3_precision.hpp	/^	typedef vec<3, double, mediump>		mediump_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,mediump>
mediump_dvec3	glm/fwd.hpp	/^	typedef vec<3, f64, mediump>		mediump_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,mediump>
mediump_dvec4	glm/ext/vector_double4_precision.hpp	/^	typedef vec<4, double, mediump>		mediump_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,mediump>
mediump_dvec4	glm/fwd.hpp	/^	typedef vec<4, f64, mediump>		mediump_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,mediump>
mediump_f32	glm/fwd.hpp	/^	typedef float					mediump_f32;$/;"	t	namespace:glm	typeref:typename:float
mediump_f32	glm/gtc/type_precision.hpp	/^	typedef float32 mediump_f32;$/;"	t	namespace:glm	typeref:typename:float32
mediump_f32mat2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_f32mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,mediump>
mediump_f32mat2	glm/gtc/type_precision.hpp	/^	typedef mediump_f32mat2x2 mediump_f32mat2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2x2
mediump_f32mat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,mediump>
mediump_f32mat2x2	glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, mediump> mediump_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,mediump>
mediump_f32mat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, f32, mediump>		mediump_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,mediump>
mediump_f32mat2x3	glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f32, mediump> mediump_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,mediump>
mediump_f32mat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, f32, mediump>		mediump_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,mediump>
mediump_f32mat2x4	glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f32, mediump> mediump_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,mediump>
mediump_f32mat3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_f32mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,mediump>
mediump_f32mat3	glm/gtc/type_precision.hpp	/^	typedef mediump_f32mat3x3 mediump_f32mat3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3x3
mediump_f32mat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, f32, mediump>		mediump_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,mediump>
mediump_f32mat3x2	glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f32, mediump> mediump_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,mediump>
mediump_f32mat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,mediump>
mediump_f32mat3x3	glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, mediump> mediump_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,mediump>
mediump_f32mat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, f32, mediump>		mediump_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,mediump>
mediump_f32mat3x4	glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f32, mediump> mediump_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,mediump>
mediump_f32mat4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_f32mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,mediump>
mediump_f32mat4	glm/gtc/type_precision.hpp	/^	typedef mediump_f32mat4x4 mediump_f32mat4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4x4
mediump_f32mat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, f32, mediump>		mediump_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,mediump>
mediump_f32mat4x2	glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f32, mediump> mediump_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,mediump>
mediump_f32mat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, f32, mediump>		mediump_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,mediump>
mediump_f32mat4x3	glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f32, mediump> mediump_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,mediump>
mediump_f32mat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,mediump>
mediump_f32mat4x4	glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, mediump> mediump_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,mediump>
mediump_f32quat	glm/fwd.hpp	/^	typedef qua<f32, mediump>			mediump_f32quat;$/;"	t	namespace:glm	typeref:typename:qua<f32,mediump>
mediump_f32quat	glm/gtc/type_precision.hpp	/^	typedef qua<f32, mediump> mediump_f32quat;$/;"	t	namespace:glm	typeref:typename:qua<f32,mediump>
mediump_f32vec1	glm/fwd.hpp	/^	typedef vec<1, f32, mediump>		mediump_f32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,mediump>
mediump_f32vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, f32, mediump> mediump_f32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,mediump>
mediump_f32vec2	glm/fwd.hpp	/^	typedef vec<2, f32, mediump>		mediump_f32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,mediump>
mediump_f32vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, f32, mediump> mediump_f32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,mediump>
mediump_f32vec3	glm/fwd.hpp	/^	typedef vec<3, f32, mediump>		mediump_f32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,mediump>
mediump_f32vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, f32, mediump> mediump_f32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,mediump>
mediump_f32vec4	glm/fwd.hpp	/^	typedef vec<4, f32, mediump>		mediump_f32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,mediump>
mediump_f32vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, f32, mediump> mediump_f32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,mediump>
mediump_f64	glm/fwd.hpp	/^	typedef double					mediump_f64;$/;"	t	namespace:glm	typeref:typename:double
mediump_f64	glm/gtc/type_precision.hpp	/^	typedef float64 mediump_f64;$/;"	t	namespace:glm	typeref:typename:float64
mediump_f64mat2	glm/fwd.hpp	/^	typedef mat<2, 2, f64, mediump>		mediump_f64mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,mediump>
mediump_f64mat2	glm/gtc/type_precision.hpp	/^	typedef mediump_f64mat2x2 mediump_f64mat2;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat2x2
mediump_f64mat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, f64, mediump>		mediump_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,mediump>
mediump_f64mat2x2	glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f64, mediump> mediump_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,mediump>
mediump_f64mat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, f64, mediump>		mediump_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f64,mediump>
mediump_f64mat2x3	glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f64, mediump> mediump_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f64,mediump>
mediump_f64mat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, f64, mediump>		mediump_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f64,mediump>
mediump_f64mat2x4	glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f64, mediump> mediump_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f64,mediump>
mediump_f64mat3	glm/fwd.hpp	/^	typedef mat<3, 3, f64, mediump>		mediump_f64mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,mediump>
mediump_f64mat3	glm/gtc/type_precision.hpp	/^	typedef mediump_f64mat3x3 mediump_f64mat3;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat3x3
mediump_f64mat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, f64, mediump>		mediump_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f64,mediump>
mediump_f64mat3x2	glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f64, mediump> mediump_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f64,mediump>
mediump_f64mat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, f64, mediump>		mediump_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,mediump>
mediump_f64mat3x3	glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f64, mediump> mediump_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,mediump>
mediump_f64mat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, f64, mediump>		mediump_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f64,mediump>
mediump_f64mat3x4	glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f64, mediump> mediump_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f64,mediump>
mediump_f64mat4	glm/fwd.hpp	/^	typedef mat<4, 4, f64, mediump>		mediump_f64mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,mediump>
mediump_f64mat4	glm/gtc/type_precision.hpp	/^	typedef mediump_f64mat4x4 mediump_f64mat4;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat4x4
mediump_f64mat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, f64, mediump>		mediump_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f64,mediump>
mediump_f64mat4x2	glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f64, mediump> mediump_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f64,mediump>
mediump_f64mat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, f64, mediump>		mediump_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f64,mediump>
mediump_f64mat4x3	glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f64, mediump> mediump_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f64,mediump>
mediump_f64mat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, f64, mediump>		mediump_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,mediump>
mediump_f64mat4x4	glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f64, mediump> mediump_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,mediump>
mediump_f64quat	glm/fwd.hpp	/^	typedef qua<f64, mediump>			mediump_f64quat;$/;"	t	namespace:glm	typeref:typename:qua<f64,mediump>
mediump_f64quat	glm/gtc/type_precision.hpp	/^	typedef qua<f64, mediump> mediump_f64quat;$/;"	t	namespace:glm	typeref:typename:qua<f64,mediump>
mediump_f64vec1	glm/fwd.hpp	/^	typedef vec<1, f64, mediump>		mediump_f64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,mediump>
mediump_f64vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, f64, mediump> mediump_f64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,mediump>
mediump_f64vec2	glm/fwd.hpp	/^	typedef vec<2, f64, mediump>		mediump_f64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,mediump>
mediump_f64vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, f64, mediump> mediump_f64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,mediump>
mediump_f64vec3	glm/fwd.hpp	/^	typedef vec<3, f64, mediump>		mediump_f64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,mediump>
mediump_f64vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, f64, mediump> mediump_f64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,mediump>
mediump_f64vec4	glm/fwd.hpp	/^	typedef vec<4, f64, mediump>		mediump_f64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,mediump>
mediump_f64vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, f64, mediump> mediump_f64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,mediump>
mediump_fdualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, mediump>	mediump_fdualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,mediump>
mediump_float32	glm/fwd.hpp	/^	typedef float					mediump_float32;$/;"	t	namespace:glm	typeref:typename:float
mediump_float32	glm/gtc/type_precision.hpp	/^	typedef float32 mediump_float32;$/;"	t	namespace:glm	typeref:typename:float32
mediump_float32_t	glm/fwd.hpp	/^	typedef float					mediump_float32_t;$/;"	t	namespace:glm	typeref:typename:float
mediump_float32_t	glm/gtc/type_precision.hpp	/^	typedef float32 mediump_float32_t;$/;"	t	namespace:glm	typeref:typename:float32
mediump_float64	glm/fwd.hpp	/^	typedef double					mediump_float64;$/;"	t	namespace:glm	typeref:typename:double
mediump_float64	glm/gtc/type_precision.hpp	/^	typedef float64 mediump_float64;$/;"	t	namespace:glm	typeref:typename:float64
mediump_float64_t	glm/fwd.hpp	/^	typedef double					mediump_float64_t;$/;"	t	namespace:glm	typeref:typename:double
mediump_float64_t	glm/gtc/type_precision.hpp	/^	typedef float64 mediump_float64_t;$/;"	t	namespace:glm	typeref:typename:float64
mediump_fmat2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_fmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,mediump>
mediump_fmat2	glm/gtc/type_precision.hpp	/^	typedef mediump_fmat2x2 mediump_fmat2;$/;"	t	namespace:glm	typeref:typename:mediump_fmat2x2
mediump_fmat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_fmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,mediump>
mediump_fmat2x2	glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, mediump> mediump_fmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,mediump>
mediump_fmat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, f32, mediump>		mediump_fmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,mediump>
mediump_fmat2x3	glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f32, mediump> mediump_fmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,mediump>
mediump_fmat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, f32, mediump>		mediump_fmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,mediump>
mediump_fmat2x4	glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f32, mediump> mediump_fmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,mediump>
mediump_fmat3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_fmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,mediump>
mediump_fmat3	glm/gtc/type_precision.hpp	/^	typedef mediump_fmat3x3 mediump_fmat3;$/;"	t	namespace:glm	typeref:typename:mediump_fmat3x3
mediump_fmat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, f32, mediump>		mediump_fmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,mediump>
mediump_fmat3x2	glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f32, mediump> mediump_fmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,mediump>
mediump_fmat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_fmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,mediump>
mediump_fmat3x3	glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, mediump> mediump_fmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,mediump>
mediump_fmat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, f32, mediump>		mediump_fmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,mediump>
mediump_fmat3x4	glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f32, mediump> mediump_fmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,mediump>
mediump_fmat4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_fmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,mediump>
mediump_fmat4	glm/gtc/type_precision.hpp	/^	typedef mediump_fmat4x4 mediump_fmat4;$/;"	t	namespace:glm	typeref:typename:mediump_fmat4x4
mediump_fmat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, f32, mediump>		mediump_fmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,mediump>
mediump_fmat4x2	glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f32, mediump> mediump_fmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,mediump>
mediump_fmat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, f32, mediump>		mediump_fmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,mediump>
mediump_fmat4x3	glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f32, mediump> mediump_fmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,mediump>
mediump_fmat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_fmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,mediump>
mediump_fmat4x4	glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, mediump> mediump_fmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,mediump>
mediump_fquat	glm/fwd.hpp	/^	typedef qua<float, mediump>			mediump_fquat;$/;"	t	namespace:glm	typeref:typename:qua<float,mediump>
mediump_fvec1	glm/fwd.hpp	/^	typedef vec<1, float, mediump>		mediump_fvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,mediump>
mediump_fvec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, float, mediump> mediump_fvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,mediump>
mediump_fvec2	glm/fwd.hpp	/^	typedef vec<2, float, mediump>		mediump_fvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,mediump>
mediump_fvec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, float, mediump> mediump_fvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,mediump>
mediump_fvec3	glm/fwd.hpp	/^	typedef vec<3, float, mediump>		mediump_fvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,mediump>
mediump_fvec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, float, mediump> mediump_fvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,mediump>
mediump_fvec4	glm/fwd.hpp	/^	typedef vec<4, float, mediump>		mediump_fvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,mediump>
mediump_fvec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, float, mediump> mediump_fvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,mediump>
mediump_i16	glm/fwd.hpp	/^	typedef int16					mediump_i16;$/;"	t	namespace:glm	typeref:typename:int16
mediump_i16	glm/gtc/type_precision.hpp	/^	typedef detail::int16 mediump_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_i16vec1	glm/fwd.hpp	/^	typedef vec<1, i16, mediump>	mediump_i16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i16,mediump>
mediump_i16vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, i16, mediump>		mediump_i16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i16,mediump>
mediump_i16vec2	glm/fwd.hpp	/^	typedef vec<2, i16, mediump>	mediump_i16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i16,mediump>
mediump_i16vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, i16, mediump>		mediump_i16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i16,mediump>
mediump_i16vec3	glm/fwd.hpp	/^	typedef vec<3, i16, mediump>	mediump_i16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i16,mediump>
mediump_i16vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, i16, mediump>		mediump_i16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i16,mediump>
mediump_i16vec4	glm/fwd.hpp	/^	typedef vec<4, i16, mediump>	mediump_i16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i16,mediump>
mediump_i16vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, i16, mediump>		mediump_i16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i16,mediump>
mediump_i32	glm/fwd.hpp	/^	typedef int32					mediump_i32;$/;"	t	namespace:glm	typeref:typename:int32
mediump_i32	glm/gtc/type_precision.hpp	/^	typedef detail::int32 mediump_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_i32vec1	glm/fwd.hpp	/^	typedef vec<1, i32, mediump>	mediump_i32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,mediump>
mediump_i32vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, i32, mediump>		mediump_i32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,mediump>
mediump_i32vec2	glm/fwd.hpp	/^	typedef vec<2, i32, mediump>	mediump_i32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,mediump>
mediump_i32vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, i32, mediump>		mediump_i32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,mediump>
mediump_i32vec3	glm/fwd.hpp	/^	typedef vec<3, i32, mediump>	mediump_i32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,mediump>
mediump_i32vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, i32, mediump>		mediump_i32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,mediump>
mediump_i32vec4	glm/fwd.hpp	/^	typedef vec<4, i32, mediump>	mediump_i32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,mediump>
mediump_i32vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, i32, mediump>		mediump_i32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,mediump>
mediump_i64	glm/fwd.hpp	/^	typedef int64					mediump_i64;$/;"	t	namespace:glm	typeref:typename:int64
mediump_i64	glm/gtc/type_precision.hpp	/^	typedef detail::int64 mediump_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_i64vec1	glm/fwd.hpp	/^	typedef vec<1, i64, mediump>	mediump_i64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i64,mediump>
mediump_i64vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, i64, mediump>		mediump_i64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i64,mediump>
mediump_i64vec2	glm/fwd.hpp	/^	typedef vec<2, i64, mediump>	mediump_i64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i64,mediump>
mediump_i64vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, i64, mediump>		mediump_i64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i64,mediump>
mediump_i64vec3	glm/fwd.hpp	/^	typedef vec<3, i64, mediump>	mediump_i64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i64,mediump>
mediump_i64vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, i64, mediump>		mediump_i64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i64,mediump>
mediump_i64vec4	glm/fwd.hpp	/^	typedef vec<4, i64, mediump>	mediump_i64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i64,mediump>
mediump_i64vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, i64, mediump>		mediump_i64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i64,mediump>
mediump_i8	glm/fwd.hpp	/^	typedef int8					mediump_i8;$/;"	t	namespace:glm	typeref:typename:int8
mediump_i8	glm/gtc/type_precision.hpp	/^	typedef detail::int8 mediump_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_i8vec1	glm/fwd.hpp	/^	typedef vec<1, i8, mediump>		mediump_i8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i8,mediump>
mediump_i8vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, i8, mediump> mediump_i8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i8,mediump>
mediump_i8vec2	glm/fwd.hpp	/^	typedef vec<2, i8, mediump>		mediump_i8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i8,mediump>
mediump_i8vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, i8, mediump> mediump_i8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i8,mediump>
mediump_i8vec3	glm/fwd.hpp	/^	typedef vec<3, i8, mediump>		mediump_i8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i8,mediump>
mediump_i8vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, i8, mediump> mediump_i8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i8,mediump>
mediump_i8vec4	glm/fwd.hpp	/^	typedef vec<4, i8, mediump>		mediump_i8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i8,mediump>
mediump_i8vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, i8, mediump> mediump_i8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i8,mediump>
mediump_imat2	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, int, mediump>			mediump_imat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,mediump>
mediump_imat2x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, int, mediump>			mediump_imat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,mediump>
mediump_imat2x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 3, int, mediump>			mediump_imat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int,mediump>
mediump_imat2x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 4, int, mediump>			mediump_imat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int,mediump>
mediump_imat3	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, int, mediump>			mediump_imat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,mediump>
mediump_imat3x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 2, int, mediump>			mediump_imat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int,mediump>
mediump_imat3x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, int, mediump>			mediump_imat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,mediump>
mediump_imat3x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 4, int, mediump>			mediump_imat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int,mediump>
mediump_imat4	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, int, mediump>			mediump_imat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,mediump>
mediump_imat4x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 2, int, mediump>			mediump_imat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int,mediump>
mediump_imat4x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 3, int, mediump>			mediump_imat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int,mediump>
mediump_imat4x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, int, mediump>			mediump_imat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,mediump>
mediump_int16	glm/fwd.hpp	/^	typedef int16					mediump_int16;$/;"	t	namespace:glm	typeref:typename:int16
mediump_int16	glm/gtc/type_precision.hpp	/^	typedef detail::int16 mediump_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_int16_t	glm/fwd.hpp	/^	typedef int16					mediump_int16_t;$/;"	t	namespace:glm	typeref:typename:int16
mediump_int16_t	glm/gtc/type_precision.hpp	/^	typedef detail::int16 mediump_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_int32	glm/fwd.hpp	/^	typedef int32					mediump_int32;$/;"	t	namespace:glm	typeref:typename:int32
mediump_int32	glm/gtc/type_precision.hpp	/^	typedef detail::int32 mediump_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_int32_t	glm/fwd.hpp	/^	typedef int32					mediump_int32_t;$/;"	t	namespace:glm	typeref:typename:int32
mediump_int32_t	glm/gtc/type_precision.hpp	/^	typedef detail::int32 mediump_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_int64	glm/fwd.hpp	/^	typedef int64					mediump_int64;$/;"	t	namespace:glm	typeref:typename:int64
mediump_int64	glm/gtc/type_precision.hpp	/^	typedef detail::int64 mediump_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_int64_t	glm/fwd.hpp	/^	typedef int64					mediump_int64_t;$/;"	t	namespace:glm	typeref:typename:int64
mediump_int64_t	glm/gtc/type_precision.hpp	/^	typedef detail::int64 mediump_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_int8	glm/fwd.hpp	/^	typedef int8					mediump_int8;$/;"	t	namespace:glm	typeref:typename:int8
mediump_int8	glm/gtc/type_precision.hpp	/^	typedef detail::int8 mediump_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_int8_t	glm/fwd.hpp	/^	typedef int8					mediump_int8_t;$/;"	t	namespace:glm	typeref:typename:int8
mediump_int8_t	glm/gtc/type_precision.hpp	/^	typedef detail::int8 mediump_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_ivec1	glm/ext/vector_int1_precision.hpp	/^	typedef vec<1, int, mediump>		mediump_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,mediump>
mediump_ivec1	glm/fwd.hpp	/^	typedef vec<1, i32, mediump>	mediump_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,mediump>
mediump_ivec2	glm/ext/vector_int2_precision.hpp	/^	typedef vec<2, int, mediump>	mediump_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,mediump>
mediump_ivec2	glm/fwd.hpp	/^	typedef vec<2, i32, mediump>	mediump_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,mediump>
mediump_ivec3	glm/ext/vector_int3_precision.hpp	/^	typedef vec<3, int, mediump>	mediump_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,mediump>
mediump_ivec3	glm/fwd.hpp	/^	typedef vec<3, i32, mediump>	mediump_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,mediump>
mediump_ivec4	glm/ext/vector_int4_precision.hpp	/^	typedef vec<4, int, mediump>	mediump_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,mediump>
mediump_ivec4	glm/fwd.hpp	/^	typedef vec<4, i32, mediump>	mediump_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,mediump>
mediump_mat2	glm/ext/matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, mediump>	mediump_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,mediump>
mediump_mat2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,mediump>
mediump_mat2x2	glm/ext/matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, mediump>	mediump_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,mediump>
mediump_mat2x2	glm/fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,mediump>
mediump_mat2x3	glm/ext/matrix_float2x3_precision.hpp	/^	typedef mat<2, 3, float, mediump>	mediump_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,mediump>
mediump_mat2x3	glm/fwd.hpp	/^	typedef mat<2, 3, f32, mediump>		mediump_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,mediump>
mediump_mat2x4	glm/ext/matrix_float2x4_precision.hpp	/^	typedef mat<2, 4, float, mediump>	mediump_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,mediump>
mediump_mat2x4	glm/fwd.hpp	/^	typedef mat<2, 4, f32, mediump>		mediump_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,mediump>
mediump_mat3	glm/ext/matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, mediump>	mediump_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,mediump>
mediump_mat3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,mediump>
mediump_mat3x2	glm/ext/matrix_float3x2_precision.hpp	/^	typedef mat<3, 2, float, mediump>	mediump_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,mediump>
mediump_mat3x2	glm/fwd.hpp	/^	typedef mat<3, 2, f32, mediump>		mediump_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,mediump>
mediump_mat3x3	glm/ext/matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, mediump>	mediump_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,mediump>
mediump_mat3x3	glm/fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,mediump>
mediump_mat3x4	glm/ext/matrix_float3x4_precision.hpp	/^	typedef mat<3, 4, float, mediump>	mediump_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,mediump>
mediump_mat3x4	glm/fwd.hpp	/^	typedef mat<3, 4, f32, mediump>		mediump_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,mediump>
mediump_mat4	glm/ext/matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, mediump>	mediump_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,mediump>
mediump_mat4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,mediump>
mediump_mat4x2	glm/ext/matrix_float4x2_precision.hpp	/^	typedef mat<4, 2, float, mediump>	mediump_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,mediump>
mediump_mat4x2	glm/fwd.hpp	/^	typedef mat<4, 2, f32, mediump>		mediump_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,mediump>
mediump_mat4x3	glm/ext/matrix_float4x3_precision.hpp	/^	typedef mat<4, 3, float, mediump>	mediump_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,mediump>
mediump_mat4x3	glm/fwd.hpp	/^	typedef mat<4, 3, f32, mediump>		mediump_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,mediump>
mediump_mat4x4	glm/ext/matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, mediump>	mediump_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,mediump>
mediump_mat4x4	glm/fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,mediump>
mediump_quat	glm/ext/quaternion_float_precision.hpp	/^	typedef qua<float, mediump>		mediump_quat;$/;"	t	namespace:glm	typeref:typename:qua<float,mediump>
mediump_quat	glm/fwd.hpp	/^	typedef qua<float, mediump>			mediump_quat;$/;"	t	namespace:glm	typeref:typename:qua<float,mediump>
mediump_u16	glm/fwd.hpp	/^	typedef uint16					mediump_u16;$/;"	t	namespace:glm	typeref:typename:uint16
mediump_u16	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 mediump_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_u16vec1	glm/fwd.hpp	/^	typedef vec<1, u16, mediump>	mediump_u16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u16,mediump>
mediump_u16vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, u16, mediump>		mediump_u16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u16,mediump>
mediump_u16vec2	glm/fwd.hpp	/^	typedef vec<2, u16, mediump>	mediump_u16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u16,mediump>
mediump_u16vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, u16, mediump>		mediump_u16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u16,mediump>
mediump_u16vec3	glm/fwd.hpp	/^	typedef vec<3, u16, mediump>	mediump_u16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u16,mediump>
mediump_u16vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, u16, mediump>		mediump_u16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u16,mediump>
mediump_u16vec4	glm/fwd.hpp	/^	typedef vec<4, u16, mediump>	mediump_u16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u16,mediump>
mediump_u16vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, u16, mediump>		mediump_u16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u16,mediump>
mediump_u32	glm/fwd.hpp	/^	typedef uint32					mediump_u32;$/;"	t	namespace:glm	typeref:typename:uint32
mediump_u32	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 mediump_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_u32vec1	glm/fwd.hpp	/^	typedef vec<1, u32, mediump>	mediump_u32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,mediump>
mediump_u32vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, u32, mediump>		mediump_u32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,mediump>
mediump_u32vec2	glm/fwd.hpp	/^	typedef vec<2, u32, mediump>	mediump_u32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,mediump>
mediump_u32vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, u32, mediump>		mediump_u32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,mediump>
mediump_u32vec3	glm/fwd.hpp	/^	typedef vec<3, u32, mediump>	mediump_u32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,mediump>
mediump_u32vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, u32, mediump>		mediump_u32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,mediump>
mediump_u32vec4	glm/fwd.hpp	/^	typedef vec<4, u32, mediump>	mediump_u32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,mediump>
mediump_u32vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, u32, mediump>		mediump_u32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,mediump>
mediump_u64	glm/fwd.hpp	/^	typedef uint64					mediump_u64;$/;"	t	namespace:glm	typeref:typename:uint64
mediump_u64	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 mediump_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_u64vec1	glm/fwd.hpp	/^	typedef vec<1, u64, mediump>	mediump_u64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u64,mediump>
mediump_u64vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, u64, mediump>		mediump_u64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u64,mediump>
mediump_u64vec2	glm/fwd.hpp	/^	typedef vec<2, u64, mediump>	mediump_u64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u64,mediump>
mediump_u64vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, u64, mediump>		mediump_u64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u64,mediump>
mediump_u64vec3	glm/fwd.hpp	/^	typedef vec<3, u64, mediump>	mediump_u64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u64,mediump>
mediump_u64vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, u64, mediump>		mediump_u64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u64,mediump>
mediump_u64vec4	glm/fwd.hpp	/^	typedef vec<4, u64, mediump>	mediump_u64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u64,mediump>
mediump_u64vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, u64, mediump>		mediump_u64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u64,mediump>
mediump_u8	glm/fwd.hpp	/^	typedef uint8					mediump_u8;$/;"	t	namespace:glm	typeref:typename:uint8
mediump_u8	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 mediump_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_u8vec1	glm/fwd.hpp	/^	typedef vec<1, u8, mediump>		mediump_u8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u8,mediump>
mediump_u8vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, u8, mediump> mediump_u8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u8,mediump>
mediump_u8vec2	glm/fwd.hpp	/^	typedef vec<2, u8, mediump>		mediump_u8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u8,mediump>
mediump_u8vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, u8, mediump> mediump_u8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u8,mediump>
mediump_u8vec3	glm/fwd.hpp	/^	typedef vec<3, u8, mediump>		mediump_u8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u8,mediump>
mediump_u8vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, u8, mediump> mediump_u8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u8,mediump>
mediump_u8vec4	glm/fwd.hpp	/^	typedef vec<4, u8, mediump>		mediump_u8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u8,mediump>
mediump_u8vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, u8, mediump> mediump_u8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u8,mediump>
mediump_uint16	glm/fwd.hpp	/^	typedef uint16					mediump_uint16;$/;"	t	namespace:glm	typeref:typename:uint16
mediump_uint16	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 mediump_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_uint16_t	glm/fwd.hpp	/^	typedef uint16					mediump_uint16_t;$/;"	t	namespace:glm	typeref:typename:uint16
mediump_uint16_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 mediump_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_uint32	glm/fwd.hpp	/^	typedef uint32					mediump_uint32;$/;"	t	namespace:glm	typeref:typename:uint32
mediump_uint32	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 mediump_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_uint32_t	glm/fwd.hpp	/^	typedef uint32					mediump_uint32_t;$/;"	t	namespace:glm	typeref:typename:uint32
mediump_uint32_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 mediump_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_uint64	glm/fwd.hpp	/^	typedef uint64					mediump_uint64;$/;"	t	namespace:glm	typeref:typename:uint64
mediump_uint64	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 mediump_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_uint64_t	glm/fwd.hpp	/^	typedef uint64					mediump_uint64_t;$/;"	t	namespace:glm	typeref:typename:uint64
mediump_uint64_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 mediump_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_uint8	glm/fwd.hpp	/^	typedef uint8					mediump_uint8;$/;"	t	namespace:glm	typeref:typename:uint8
mediump_uint8	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 mediump_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_uint8_t	glm/fwd.hpp	/^	typedef uint8					mediump_uint8_t;$/;"	t	namespace:glm	typeref:typename:uint8
mediump_uint8_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 mediump_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_umat2	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, uint, mediump>			mediump_umat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,mediump>
mediump_umat2x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, uint, mediump>			mediump_umat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,mediump>
mediump_umat2x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 3, uint, mediump>			mediump_umat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint,mediump>
mediump_umat2x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 4, uint, mediump>			mediump_umat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint,mediump>
mediump_umat3	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, uint, mediump>			mediump_umat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,mediump>
mediump_umat3x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 2, uint, mediump>			mediump_umat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint,mediump>
mediump_umat3x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, uint, mediump>			mediump_umat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,mediump>
mediump_umat3x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 4, uint, mediump>			mediump_umat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint,mediump>
mediump_umat4	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, uint, mediump>			mediump_umat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,mediump>
mediump_umat4x2	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 2, uint, mediump>			mediump_umat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint,mediump>
mediump_umat4x3	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 3, uint, mediump>			mediump_umat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint,mediump>
mediump_umat4x4	glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, uint, mediump>			mediump_umat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,mediump>
mediump_uvec1	glm/ext/vector_uint1_precision.hpp	/^	typedef vec<1, unsigned int, mediump>		mediump_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,unsigned int,mediump>
mediump_uvec1	glm/fwd.hpp	/^	typedef vec<1, u32, mediump>	mediump_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,mediump>
mediump_uvec2	glm/ext/vector_uint2_precision.hpp	/^	typedef vec<2, unsigned int, mediump>	mediump_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,unsigned int,mediump>
mediump_uvec2	glm/fwd.hpp	/^	typedef vec<2, u32, mediump>	mediump_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,mediump>
mediump_uvec3	glm/ext/vector_uint3_precision.hpp	/^	typedef vec<3, unsigned int, mediump>	mediump_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,unsigned int,mediump>
mediump_uvec3	glm/fwd.hpp	/^	typedef vec<3, u32, mediump>	mediump_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,mediump>
mediump_uvec4	glm/ext/vector_uint4_precision.hpp	/^	typedef vec<4, unsigned int, mediump>	mediump_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,unsigned int,mediump>
mediump_uvec4	glm/fwd.hpp	/^	typedef vec<4, u32, mediump>	mediump_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,mediump>
mediump_vec1	glm/ext/vector_float1_precision.hpp	/^	typedef vec<1, float, mediump>		mediump_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,mediump>
mediump_vec1	glm/fwd.hpp	/^	typedef vec<1, float, mediump>		mediump_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,mediump>
mediump_vec2	glm/ext/vector_float2_precision.hpp	/^	typedef vec<2, float, mediump>		mediump_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,mediump>
mediump_vec2	glm/fwd.hpp	/^	typedef vec<2, float, mediump>		mediump_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,mediump>
mediump_vec3	glm/ext/vector_float3_precision.hpp	/^	typedef vec<3, float, mediump>		mediump_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,mediump>
mediump_vec3	glm/fwd.hpp	/^	typedef vec<3, float, mediump>		mediump_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,mediump>
mediump_vec4	glm/ext/vector_float4_precision.hpp	/^	typedef vec<4, float, mediump>		mediump_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,mediump>
mediump_vec4	glm/fwd.hpp	/^	typedef vec<4, float, mediump>		mediump_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,mediump>
memory	lodepng.cpp	/^  BPMNode* memory;$/;"	m	struct:BPMLists	typeref:typename:BPMNode *	file:
memsize	lodepng.cpp	/^  unsigned memsize;$/;"	m	struct:BPMLists	typeref:typename:unsigned	file:
min	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType min(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
min	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> min(vec<L, T, Q> const& a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
min	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> min(vec<L, T, Q> const& a, vec<L, T, Q> const& b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
min	glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER T min(T a, T b, T c)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
min	glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER T min(T a, T b, T c, T d)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
min	glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> min(vec<L, T, Q> const& x, vec<L, T, Q> const& y,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
min	glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER C<T> min$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER C<T>
min	glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER T min$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
min	glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER T min($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
minmatch	lodepng.h	/^  unsigned minmatch; \/*mininum lz77 length. 3 is normally best, 6 can be better for some PNGs. /;"	m	struct:LodePNGCompressSettings	typeref:typename:unsigned
minute	lodepng.h	/^  unsigned minute;  \/*0-59*\/$/;"	m	struct:LodePNGTime	typeref:typename:unsigned
mirrorClamp	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER genType mirrorClamp(genType const& Texcoord)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
mirrorClamp	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> mirrorClamp(vec<L, T, Q> const& Texcoord)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
mirrorRepeat	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER genType mirrorRepeat(genType const& Texcoord)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
mirrorRepeat	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> mirrorRepeat(vec<L, T, Q> const& Texcoord)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
mix	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genTypeT mix(genTypeT x, genTypeT y, genTypeU a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genTypeT
mix	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> mix(vec<L, T, Q> const& x, vec<L, T, Q> const& y, U a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
mix	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> mix(vec<L, T, Q> const& x, vec<L, T, Q> const& y, vec<L, U, Q> /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
mix	glm/ext/quaternion_common.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> mix(qua<T, Q> const& x, qua<T, Q> const& y, T a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
mixedProduct	glm/gtx/mixed_product.inl	/^	GLM_FUNC_QUALIFIER T mixedProduct$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
mod	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType mod(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
mod	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> mod(vec<L, T, Q> const& x, T y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
mod	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> mod(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
mod	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER int mod(int x, int y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
mod	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER uint mod(uint x, uint y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
mod289	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER T mod289(T const& x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
modf	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType modf(genType x, genType & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
modf	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<1, T, Q> modf(vec<1, T, Q> const& x, vec<1, T, Q> & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<1,T,Q>
modf	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> modf(vec<2, T, Q> const& x, vec<2, T, Q> & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
modf	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> modf(vec<3, T, Q> const& x, vec<3, T, Q> & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
modf	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> modf(vec<4, T, Q> const& x, vec<4, T, Q> & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
month	lodepng.h	/^  unsigned month;   \/*1-12*\/$/;"	m	struct:LodePNGTime	typeref:typename:unsigned
mouseCallback	Camera.cpp	/^void Camera::mouseCallback(GLFWwindow* window) {$/;"	f	class:Camera	typeref:typename:void
msw	glm/ext/scalar_ulp.inl	/^		int msw;$/;"	m	struct:__anonb4cc412b020a::__anonb4cc412b0308	typeref:typename:int	file:
negative	glm/detail/type_float.hpp	/^		GLM_CONSTEXPR bool negative() const { return i < 0; }$/;"	f	union:glm::detail::float_t	typeref:typename:GLM_CONSTEXPR bool
newline	glm/gtx/io.hpp	/^			char_type  newline;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
next_float	glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER T next_float(T x, int ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
next_float	glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER double next_float(double x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER double
next_float	glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER float next_float(float x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
next_float	glm/ext/vector_ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> next_float(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
next_float	glm/ext/vector_ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> next_float(vec<L, T, Q> const& x, int ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
next_float	glm/ext/vector_ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> next_float(vec<L, T, Q> const& x, vec<L, int, Q> const& ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
nextafter	glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER double nextafter(double x, double y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER double
nextafterf	glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER float nextafterf(float x, float y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
nextfree	lodepng.cpp	/^  unsigned nextfree;$/;"	m	struct:BPMLists	typeref:typename:unsigned	file:
nicematch	lodepng.h	/^  unsigned nicematch; \/*stop searching if >= this length found. Set to 258 for best compression/;"	m	struct:LodePNGCompressSettings	typeref:typename:unsigned
nlz	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER unsigned int nlz(unsigned int x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER unsigned int
normalize	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> normalize(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
normalize	glm/ext/quaternion_geometric.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> normalize(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
normalize	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> normalize(tdualquat<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
normalizeDot	glm/gtx/normalize_dot.inl	/^	GLM_FUNC_QUALIFIER T normalizeDot(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
normals	cube.cpp	/^			float normals[]={$/;"	v	namespace:Models::CubeInternal	typeref:typename:float[]
normals	model.h	/^			float *normals;$/;"	m	class:Models::Model	typeref:typename:float *
normals	teapot.cpp	/^		float normals[]={$/;"	v	namespace:Models::TeapotInternal	typeref:typename:float[]
normals	walls.cpp	/^        float normals[] = {$/;"	v	namespace:Models::WallsInternal	typeref:typename:float[]
notEqual	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> notEqual(vec<L, T, Q> const& x, vec<L, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
notEqual	glm/ext/matrix_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<C, bool, Q> notEqual(mat<C, R, T, Q> const& a, mat<C, R, T/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<C,bool,Q>
notEqual	glm/ext/matrix_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<C, bool, Q> notEqual(mat<C, R, T, Q> const& x, mat<C, R, T/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<C,bool,Q>
notEqual	glm/ext/quaternion_relational.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> notEqual(qua<T, Q> const& x, qua<T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
notEqual	glm/ext/quaternion_relational.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> notEqual(qua<T, Q> const& x, qua<T, Q> const& y, T epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
notEqual	glm/ext/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool notEqual(genType const& x, genType const& y, genType cons/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
notEqual	glm/ext/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool notEqual(genType const& x, genType const& y, int ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
notEqual	glm/ext/vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> notEqual(vec<L, T, Q> const& x, vec<L, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
notEqual	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool notEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
not_	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> not_(vec<L, bool, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
not_	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool not_$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
numcodes	lodepng.cpp	/^  unsigned numcodes; \/*number of symbols in the alphabet = number of codes*\/$/;"	m	struct:HuffmanTree	typeref:typename:unsigned	file:
numcolors	lodepng.h	/^  unsigned numcolors; \/*amount of colors, up to 257. Not valid if bits == 16.*\/$/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned
numfree	lodepng.cpp	/^  unsigned numfree;$/;"	m	struct:BPMLists	typeref:typename:unsigned	file:
one	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType one()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
one_over_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType one_over_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
one_over_root_two	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType one_over_root_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
one_over_two_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType one_over_two_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
ones32	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER unsigned int ones32(unsigned int x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER unsigned int
op_div	glm/detail/_swizzle.hpp	/^		struct op_div$/;"	s	struct:glm::detail::_swizzle_base2
op_equal	glm/detail/_swizzle.hpp	/^		struct op_equal$/;"	s	struct:glm::detail::_swizzle_base2
op_minus	glm/detail/_swizzle.hpp	/^		struct op_minus$/;"	s	struct:glm::detail::_swizzle_base2
op_mul	glm/detail/_swizzle.hpp	/^		struct op_mul$/;"	s	struct:glm::detail::_swizzle_base2
op_plus	glm/detail/_swizzle.hpp	/^		struct op_plus$/;"	s	struct:glm::detail::_swizzle_base2
openBounded	glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> openBounded(vec<L, T, Q> const& Value, vec<L, T, Q> const& M/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
operator !=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(mat<2, 2, T, Q> const& m1, mat<2, 2, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(mat<2, 3, T, Q> const& m1, mat<2, 3, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(mat<2, 4, T, Q> const& m1, mat<2, 4, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(mat<3, 2, T, Q> const& m1, mat<3, 2, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(mat<3, 3, T, Q> const& m1, mat<3, 3, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(mat<3, 4, T, Q> const& m1, mat<3, 4, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(mat<4, 2, T, Q> const& m1, mat<4, 2, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(mat<4, 3, T, Q> const& m1, mat<4, 3, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(mat<4, 4, T, Q> const& m1, mat<4, 4, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(vec<1, T, Q> const& v1, vec<1, T, Q> const& v2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(vec<2, T, Q> const& v1, vec<2, T, Q> const& v2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(vec<3, T, Q> const& v1, vec<3, T, Q> const& v2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(vec<4, T, Q> const& v1, vec<4, T, Q> const& v2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tdualquat<T, Q> const& q1, tdualquat<T, Q> const& q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator %	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator%(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator %	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator%(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator %	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator%(vec<1, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator %	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator%(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator %	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator%(vec<1, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator %	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator%(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator %	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator%(vec<2, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator %	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator%(vec<2, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator %	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator%(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator %	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator%(vec<1, T, Q> const& scalar, vec<3, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator %	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator%(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator %	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator%(vec<3, T, Q> const& v, vec<1, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator %	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator%(vec<3, T, Q> const& v1, vec<3, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator %	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator%(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator %	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator%(vec<1, T, Q> const& scalar, vec<4, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator %	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator%(vec<4, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator %	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator%(vec<4, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator %	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator%(vec<4, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator %=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator%=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator %=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator%=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator %=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator%=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator %=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator%=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator %=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator%=(vec<2, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator %=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator%=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator %=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator%=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator %=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator%=(vec<3, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator %=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator%=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator %=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator%=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator %=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator%=(vec<4, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator &	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator&(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator &	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator&(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator &	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator&(vec<1, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator &	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator&(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator &	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator&(vec<1, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator &	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator&(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator &	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator&(vec<2, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator &	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator&(vec<2, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator &	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator&(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator &	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator&(vec<1, T, Q> const& scalar, vec<3, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator &	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator&(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator &	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator&(vec<3, T, Q> const& v, vec<1, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator &	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator&(vec<3, T, Q> const& v1, vec<3, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator &	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator&(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator &	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator&(vec<1, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator &	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator&(vec<4, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator &	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator&(vec<4, T, Q> const& v, vec<1, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator &	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator&(vec<4, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator &&	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, bool, Q> operator&&(vec<1, bool, Q> const& v1, vec<1, b/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,bool,Q>
operator &&	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, bool, Q> operator&&(vec<2, bool, Q> const& v1, vec<2, b/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,bool,Q>
operator &&	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, bool, Q> operator&&(vec<3, bool, Q> const& v1, vec<3, b/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,bool,Q>
operator &&	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, bool, Q> operator&&(vec<4, bool, Q> const& v1, vec<4, b/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,bool,Q>
operator &=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator&=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator &=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator&=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator &=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator&=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator &=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator&=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator &=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator&=(vec<2, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator &=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator&=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator &=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator&=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator &=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator&=(vec<3, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator &=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator&=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator &=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator&=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator &=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator&=(vec<4, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator ()	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER vec<2, T, Q> operator ()()  const { return vec<2, T, Q>(this->elem(E0), thi/;"	f	struct:glm::detail::_swizzle_base1	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
operator ()	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER vec<3, T, Q> operator ()()  const { return vec<3, T, Q>(this->elem(E0), thi/;"	f	struct:glm::detail::_swizzle_base1	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
operator ()	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER vec<4, T, Q> operator ()()  const { return vec<4, T, Q>(this->elem(E0), thi/;"	f	struct:glm::detail::_swizzle_base1	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
operator ()	glm/detail/type_vec4_simd.inl	/^		GLM_FUNC_QUALIFIER vec<4, float, Q> operator ()()  const$/;"	f	struct:glm::detail::_swizzle_base1	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
operator ()	glm/detail/type_vec4_simd.inl	/^		GLM_FUNC_QUALIFIER vec<4, int, Q> operator ()()  const$/;"	f	struct:glm::detail::_swizzle_base1	typeref:typename:GLM_FUNC_QUALIFIER vec<4,int,Q>	file:
operator ()	glm/detail/type_vec4_simd.inl	/^		GLM_FUNC_QUALIFIER vec<4, uint, Q> operator ()()  const$/;"	f	struct:glm::detail::_swizzle_base1	typeref:typename:GLM_FUNC_QUALIFIER vec<4,uint,Q>	file:
operator ()	glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<2, 2, T, Q>>::operator()(glm::mat<2, 2, T, Q> const& m)/;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<2, 3, T, Q>>::operator()(glm::mat<2, 3, T, Q> const& m)/;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<2, 4, T, Q>>::operator()(glm::mat<2, 4, T, Q> const& m)/;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<3, 2, T, Q>>::operator()(glm::mat<3, 2, T, Q> const& m)/;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<3, 3, T, Q>>::operator()(glm::mat<3, 3, T, Q> const& m)/;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<3, 4, T, Q>>::operator()(glm::mat<3, 4, T, Q> const& m)/;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<4, 2, T,Q>>::operator()(glm::mat<4, 2, T,Q> const& m) c/;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<4, 3, T,Q>>::operator()(glm::mat<4, 3, T,Q> const& m) c/;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<4, 4, T,Q>>::operator()(glm::mat<4, 4, T, Q> const& m) /;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::tdualquat<T, Q>>::operator()(glm::tdualquat<T, Q> const& q)/;"	f	class:std::hash::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::tquat<T, Q>>::operator()(glm::tquat<T,Q> const& q) const$/;"	f	class:std::hash::tquat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::vec<1, T, Q>>::operator()(glm::vec<1, T, Q> const& v) const$/;"	f	class:std::hash::vec	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::vec<2, T, Q>>::operator()(glm::vec<2, T, Q> const& v) const$/;"	f	class:std::hash::vec	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::vec<3, T, Q>>::operator()(glm::vec<3, T, Q> const& v) const$/;"	f	class:std::hash::vec	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::vec<4, T, Q>>::operator()(glm::vec<4, T, Q> const& v) const$/;"	f	class:std::hash::vec	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator () 	glm/detail/_swizzle.hpp	/^			GLM_FUNC_QUALIFIER void operator() (T& e, T& t) const{ e *= t; }$/;"	f	struct:glm::detail::_swizzle_base2::op_mul	typeref:typename:GLM_FUNC_QUALIFIER void
operator () 	glm/detail/_swizzle.hpp	/^			GLM_FUNC_QUALIFIER void operator() (T& e, T& t) const{ e += t; }$/;"	f	struct:glm::detail::_swizzle_base2::op_plus	typeref:typename:GLM_FUNC_QUALIFIER void
operator () 	glm/detail/_swizzle.hpp	/^			GLM_FUNC_QUALIFIER void operator() (T& e, T& t) const{ e -= t; }$/;"	f	struct:glm::detail::_swizzle_base2::op_minus	typeref:typename:GLM_FUNC_QUALIFIER void
operator () 	glm/detail/_swizzle.hpp	/^			GLM_FUNC_QUALIFIER void operator() (T& e, T& t) const{ e = t; }$/;"	f	struct:glm::detail::_swizzle_base2::op_equal	typeref:typename:GLM_FUNC_QUALIFIER void
operator () 	glm/detail/_swizzle.hpp	/^			GLM_FUNC_QUALIFIER void operator() (T& e, T& t) const{ e \/= t; }$/;"	f	struct:glm::detail::_swizzle_base2::op_div	typeref:typename:GLM_FUNC_QUALIFIER void
operator *	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator*(T scalar, mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator *	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator*(mat<2, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator *	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator*(mat<2, 2, T, Q> const& m1, mat<2, 2, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator *	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator*(mat<2, 2, T, Q> const& m1, mat<3, 2, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
operator *	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator*(mat<2, 2, T, Q> const& m1, mat<4, 2, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
operator *	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER typename mat<2, 2, T, Q>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<2,2,T,Q>::col_type
operator *	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER typename mat<2, 2, T, Q>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<2,2,T,Q>::row_type
operator *	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator*(T scalar, mat<2, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
operator *	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator*(mat<2, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
operator *	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator*(mat<2, 3, T, Q> const& m1, mat<2, 2, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
operator *	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator*(mat<2, 3, T, Q> const& m1, mat<3, 2, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator *	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator*(mat<2, 3, T, Q> const& m1, mat<4, 2, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
operator *	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER typename mat<2, 3, T, Q>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<2,3,T,Q>::col_type
operator *	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER typename mat<2, 3, T, Q>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<2,3,T,Q>::row_type
operator *	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator*(T scalar, mat<2, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
operator *	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator*(mat<2, 4, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
operator *	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator*(mat<2, 4, T, Q> const& m1, mat<2, 2, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
operator *	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator*(mat<2, 4, T, Q> const& m1, mat<3, 2, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
operator *	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator*(mat<2, 4, T, Q> const& m1, mat<4, 2, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator *	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER typename mat<2, 4, T, Q>::col_type operator*(mat<2, 4, T, Q> const& m, typen/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<2,4,T,Q>::col_type
operator *	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER typename mat<2, 4, T, Q>::row_type operator*(typename mat<2, 4, T, Q>::col_t/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<2,4,T,Q>::row_type
operator *	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator*(mat<3, 2, T, Q> const& m1, mat<2, 3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator *	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator*(T scalar, mat<3, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
operator *	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator*(mat<3, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
operator *	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator*(mat<3, 2, T, Q> const& m1, mat<3, 3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
operator *	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator*(mat<3, 2, T, Q> const& m1, mat<4, 3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
operator *	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER typename mat<3, 2, T, Q>::col_type operator*(mat<3, 2, T, Q> const& m, typen/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<3,2,T,Q>::col_type
operator *	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER typename mat<3, 2, T, Q>::row_type operator*(typename mat<3, 2, T, Q>::col_t/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<3,2,T,Q>::row_type
operator *	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator*(mat<3, 3, T, Q> const& m1, mat<2, 3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
operator *	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator*(T scalar, mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator *	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator*(mat<3, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator *	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator*(mat<3, 3, T, Q> const& m1, mat<3, 3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator *	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator*(mat<3, 3, T, Q> const& m1, mat<4, 3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
operator *	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER typename mat<3, 3, T, Q>::col_type operator*(mat<3, 3, T, Q> const& m, typen/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<3,3,T,Q>::col_type
operator *	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER typename mat<3, 3, T, Q>::row_type operator*(typename mat<3, 3, T, Q>::col_t/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<3,3,T,Q>::row_type
operator *	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator*(mat<3, 4, T, Q> const& m1, mat<2, 3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
operator *	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator*(T scalar, mat<3, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
operator *	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator*(mat<3, 4, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
operator *	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator*(mat<3, 4, T, Q> const& m1, mat<3, 3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
operator *	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator*(mat<3, 4, T, Q> const& m1, mat<4, 3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator *	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER typename mat<3, 4, T, Q>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<3,4,T,Q>::col_type
operator *	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER typename mat<3, 4, T, Q>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<3,4,T,Q>::row_type
operator *	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator*(mat<4, 2, T, Q> const& m1, mat<2, 4, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator *	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator*(mat<4, 2, T, Q> const& m1, mat<3, 4, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
operator *	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator*(T scalar, mat<4, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
operator *	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator*(mat<4, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
operator *	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator*(mat<4, 2, T, Q> const& m1, mat<4, 4, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
operator *	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER typename mat<4, 2, T, Q>::col_type operator*(mat<4, 2, T, Q> const& m, typen/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<4,2,T,Q>::col_type
operator *	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER typename mat<4, 2, T, Q>::row_type operator*(typename mat<4, 2, T, Q>::col_t/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<4,2,T,Q>::row_type
operator *	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator*(mat<4, 3, T, Q> const& m1, mat<2, 4, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
operator *	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator*(mat<4, 3, T, Q> const& m1, mat<3, 4, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator *	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator*(T const& s, mat<4, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
operator *	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator*(mat<4, 3, T, Q> const& m, T const& s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
operator *	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator*(mat<4, 3, T, Q> const& m1, mat<4, 4, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
operator *	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER typename mat<4, 3, T, Q>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<4,3,T,Q>::col_type
operator *	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER typename mat<4, 3, T, Q>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<4,3,T,Q>::row_type
operator *	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator*(mat<4, 4, T, Q> const& m1, mat<2, 4, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
operator *	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator*(mat<4, 4, T, Q> const& m1, mat<3, 4, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
operator *	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator*(T const& s, mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator *	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator*(mat<4, 4, T, Q> const& m, T const  & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator *	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator*(mat<4, 4, T, Q> const& m1, mat<4, 4, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator *	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER typename mat<4, 4, T, Q>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<4,4,T,Q>::col_type
operator *	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER typename mat<4, 4, T, Q>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<4,4,T,Q>::row_type
operator *	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator*(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator *	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator*(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator *	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator*(vec<1, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator *	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator*(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator *	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator*(vec<1, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator *	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator*(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator *	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator*(vec<2, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator *	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator*(vec<2, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator *	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator *	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(vec<1, T, Q> const& scalar, vec<3, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator *	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator *	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(vec<3, T, Q> const& v, vec<1, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator *	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(vec<3, T, Q> const& v1, vec<3, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator *	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator *	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(vec<1, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator *	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(vec<4, T, Q> const& v, T const & scalar/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator *	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(vec<4, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator *	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(vec<4, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator *	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> operator*(T const& s, tdualquat<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
operator *	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> operator*(tdualquat<T, Q> const& p, tdualquat<T, Q> const& o/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
operator *	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> operator*(tdualquat<T, Q> const& q, T const& s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
operator *	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> operator*(tdualquat<T, Q> const& q, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
operator *	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> operator*(vec<3, T, Q> const& v,	tdualquat<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
operator *	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> operator*(tdualquat<T, Q> const& q, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
operator *	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> operator*(vec<4, T, Q> const& v,	tdualquat<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
operator *=	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator *= (vec<N, T, Q> const& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
operator *=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator*=(U scalar)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q> &
operator *=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator*=(mat<2, 2, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q> &
operator *=	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q>& mat<2, 3, T, Q>::operator*=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q> &
operator *=	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q>& mat<2, 4, T, Q>::operator*=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q> &
operator *=	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q>& mat<3, 2, T, Q>::operator*=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q> &
operator *=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator*=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q> &
operator *=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator*=(mat<3, 3, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q> &
operator *=	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q>& mat<3, 4, T, Q>::operator*=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q> &
operator *=	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> & mat<4, 2, T, Q>::operator*=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q> &
operator *=	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> & mat<4, 3, T, Q>::operator*=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q> &
operator *=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> & mat<4, 4, T, Q>::operator*=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q> &
operator *=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> & mat<4, 4, T, Q>::operator*=(mat<4, 4, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q> &
operator *=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator*=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator *=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator*=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator *=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator*=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator *=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator*=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator *=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator*=(vec<2, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator *=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator*=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator *=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator*=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator *=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator*=(vec<3, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator *=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator*=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator *=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator*=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator *=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator*=(vec<4, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator *=	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> & tdualquat<T, Q>::operator*=(U s)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q> &
operator +	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator+(T scalar, mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator +	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator+(mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator +	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator+(mat<2, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator +	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator+(mat<2, 2, T, Q> const& m1, mat<2, 2, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator +	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator+(mat<2, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
operator +	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator+(mat<2, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
operator +	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator+(mat<2, 3, T, Q> const& m1, mat<2, 3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
operator +	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator+(mat<2, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
operator +	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator+(mat<2, 4, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
operator +	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator+(mat<2, 4, T, Q> const& m1, mat<2, 4, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
operator +	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator+(mat<3, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
operator +	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator+(mat<3, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
operator +	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator+(mat<3, 2, T, Q> const& m1, mat<3, 2, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
operator +	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator+(T scalar, mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator +	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator+(mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator +	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator+(mat<3, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator +	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator+(mat<3, 3, T, Q> const& m1, mat<3, 3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator +	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator+(mat<3, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
operator +	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator+(mat<3, 4, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
operator +	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator+(mat<3, 4, T, Q> const& m1, mat<3, 4, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
operator +	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator+(mat<4, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
operator +	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator+(mat<4, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
operator +	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator+(mat<4, 2, T, Q> const& m1, mat<4, 2, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
operator +	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator+(mat<4, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
operator +	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator+(mat<4, 3, T, Q> const& m, T const& s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
operator +	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator+(mat<4, 3, T, Q> const& m1, mat<4, 3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
operator +	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator+(T const& s, mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator +	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator+(mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator +	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator+(mat<4, 4, T, Q> const& m, T const& s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator +	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator+(mat<4, 4, T, Q> const& m1, mat<4, 4, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator +	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator+(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator +	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator+(vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator +	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator+(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator +	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator+(vec<1, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator +	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator+(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator +	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator+(vec<1, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator +	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator+(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator +	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator+(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator +	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator+(vec<2, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator +	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator+(vec<2, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator +	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator+(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator +	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator+(vec<1, T, Q> const& scalar, vec<3, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator +	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator+(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator +	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator+(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator +	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator+(vec<3, T, Q> const& v, vec<1, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator +	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator+(vec<3, T, Q> const& v1, vec<3, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator +	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator+(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator +	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator+(vec<1, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator +	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator+(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator +	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator+(vec<4, T, Q> const& v, T const & scalar/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator +	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator+(vec<4, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator +	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator+(vec<4, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator +	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> operator+(tdualquat<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
operator +	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> operator+(tdualquat<T, Q> const& q, tdualquat<T, Q> const& p/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
operator ++	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> mat<2, 2, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator ++	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q> &
operator ++	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> & mat<2, 3, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q> &
operator ++	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> mat<2, 3, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
operator ++	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> mat<2, 4, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
operator ++	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q>& mat<2, 4, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q> &
operator ++	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> mat<3, 2, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
operator ++	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q>& mat<3, 2, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q> &
operator ++	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q> &
operator ++	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> mat<3, 3, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator ++	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> mat<3, 4, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
operator ++	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q>& mat<3, 4, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q> &
operator ++	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> & mat<4, 2, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q> &
operator ++	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> mat<4, 2, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
operator ++	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> & mat<4, 3, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q> &
operator ++	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> mat<4, 3, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
operator ++	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> & mat<4, 4, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q> &
operator ++	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> mat<4, 4, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator ++	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator++()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator ++	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> vec<1, T, Q>::operator++(int)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator ++	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator++()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator ++	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> vec<2, T, Q>::operator++(int)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator ++	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator++()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator ++	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> vec<3, T, Q>::operator++(int)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator ++	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator++()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator ++	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> vec<4, T, Q>::operator++(int)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator +=	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator += (vec<N, T, Q> const& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
operator +=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator+=(U scalar)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q> &
operator +=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator+=(mat<2, 2, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q> &
operator +=	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> & mat<2, 3, T, Q>::operator+=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q> &
operator +=	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q>& mat<2, 3, T, Q>::operator+=(mat<2, 3, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q> &
operator +=	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q>& mat<2, 4, T, Q>::operator+=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q> &
operator +=	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q>& mat<2, 4, T, Q>::operator+=(mat<2, 4, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q> &
operator +=	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q>& mat<3, 2, T, Q>::operator+=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q> &
operator +=	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q>& mat<3, 2, T, Q>::operator+=(mat<3, 2, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q> &
operator +=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator+=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q> &
operator +=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator+=(mat<3, 3, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q> &
operator +=	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q>& mat<3, 4, T, Q>::operator+=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q> &
operator +=	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q>& mat<3, 4, T, Q>::operator+=(mat<3, 4, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q> &
operator +=	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> & mat<4, 2, T, Q>::operator+=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q> &
operator +=	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> & mat<4, 2, T, Q>::operator+=(mat<4, 2, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q> &
operator +=	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> & mat<4, 3, T, Q>::operator+=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q> &
operator +=	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> & mat<4, 3, T, Q>::operator+=(mat<4, 3, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q> &
operator +=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q>& mat<4, 4, T, Q>::operator+=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q> &
operator +=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q>& mat<4, 4, T, Q>::operator+=(mat<4, 4, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q> &
operator +=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator+=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator +=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator+=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator +=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator+=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator +=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator+=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator +=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator+=(vec<2, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator +=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator+=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator +=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator+=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator +=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator+=(vec<3, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator +=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator+=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator +=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator+=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator +=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator+=(vec<4, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator -	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator-(T scalar, mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator -	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator-(mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator -	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator-(mat<2, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator -	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator-(mat<2, 2, T, Q> const& m1, mat<2, 2, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator -	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator-(mat<2, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
operator -	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator-(mat<2, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
operator -	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator-(mat<2, 3, T, Q> const& m1, mat<2, 3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
operator -	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator-(mat<2, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
operator -	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator-(mat<2, 4, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
operator -	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator-(mat<2, 4, T, Q> const& m1, mat<2, 4, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
operator -	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator-(mat<3, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
operator -	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator-(mat<3, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
operator -	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator-(mat<3, 2, T, Q> const& m1, mat<3, 2, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
operator -	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator-(T scalar, mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator -	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator-(mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator -	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator-(mat<3, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator -	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator-(mat<3, 3, T, Q> const& m1, mat<3, 3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator -	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator-(mat<3, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
operator -	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator-(mat<3, 4, T, Q> const& m,	T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
operator -	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator-(mat<3, 4, T, Q> const& m1, mat<3, 4, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
operator -	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator-(mat<4, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
operator -	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator-(mat<4, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
operator -	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator-(mat<4, 2, T, Q> const& m1, mat<4, 2, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
operator -	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator-(mat<4, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
operator -	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator-(mat<4, 3, T, Q> const& m, T const& s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
operator -	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator-(mat<4, 3, T, Q> const& m1, mat<4, 3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
operator -	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator-(T const& s, mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator -	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator-(mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator -	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator-(mat<4, 4, T, Q> const& m, T const& s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator -	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator-(mat<4, 4, T, Q> const& m1, mat<4, 4, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator -	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator-(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator -	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator-(vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator -	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator-(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator -	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator-(vec<1, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator -	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator-(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator -	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator-(vec<1, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator -	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator-(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator -	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator-(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator -	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator-(vec<2, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator -	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator-(vec<2, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator -	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator-(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator -	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator-(vec<1, T, Q> const& scalar, vec<3, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator -	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator-(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator -	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator-(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator -	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator-(vec<3, T, Q> const& v, vec<1, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator -	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator-(vec<3, T, Q> const& v1, vec<3, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator -	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator-(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator -	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator-(vec<1, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator -	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator-(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator -	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator-(vec<4, T, Q> const& v, T const & scalar/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator -	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator-(vec<4, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator -	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator-(vec<4, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator -	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> operator-(tdualquat<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
operator --	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> mat<2, 2, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator --	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q> &
operator --	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> & mat<2, 3, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q> &
operator --	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> mat<2, 3, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
operator --	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> mat<2, 4, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
operator --	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q>& mat<2, 4, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q> &
operator --	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> mat<3, 2, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
operator --	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q>& mat<3, 2, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q> &
operator --	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q> &
operator --	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> mat<3, 3, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator --	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> mat<3, 4, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
operator --	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q>& mat<3, 4, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q> &
operator --	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> & mat<4, 2, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q> &
operator --	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> mat<4, 2, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
operator --	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> & mat<4, 3, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q> &
operator --	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> mat<4, 3, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
operator --	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> & mat<4, 4, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q> &
operator --	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> mat<4, 4, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator --	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator--()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator --	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> vec<1, T, Q>::operator--(int)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator --	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator--()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator --	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> vec<2, T, Q>::operator--(int)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator --	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator--()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator --	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> vec<3, T, Q>::operator--(int)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator --	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator--()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator --	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> vec<4, T, Q>::operator--(int)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator -=	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator -= (vec<N, T, Q> const& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
operator -=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator-=(U scalar)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q> &
operator -=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator-=(mat<2, 2, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q> &
operator -=	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q>& mat<2, 3, T, Q>::operator-=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q> &
operator -=	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q>& mat<2, 3, T, Q>::operator-=(mat<2, 3, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q> &
operator -=	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q>& mat<2, 4, T, Q>::operator-=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q> &
operator -=	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q>& mat<2, 4, T, Q>::operator-=(mat<2, 4, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q> &
operator -=	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q>& mat<3, 2, T, Q>::operator-=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q> &
operator -=	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q>& mat<3, 2, T, Q>::operator-=(mat<3, 2, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q> &
operator -=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator-=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q> &
operator -=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator-=(mat<3, 3, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q> &
operator -=	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q>& mat<3, 4, T, Q>::operator-=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q> &
operator -=	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q>& mat<3, 4, T, Q>::operator-=(mat<3, 4, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q> &
operator -=	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> & mat<4, 2, T, Q>::operator-=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q> &
operator -=	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> & mat<4, 2, T, Q>::operator-=(mat<4, 2, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q> &
operator -=	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> & mat<4, 3, T, Q>::operator-=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q> &
operator -=	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> & mat<4, 3, T, Q>::operator-=(mat<4, 3, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q> &
operator -=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> & mat<4, 4, T, Q>::operator-=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q> &
operator -=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> & mat<4, 4, T, Q>::operator-=(mat<4, 4, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q> &
operator -=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator-=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator -=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator-=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator -=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator-=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator -=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator-=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator -=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator-=(vec<2, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator -=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator-=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator -=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator-=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator -=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator-=(vec<3, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator -=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator-=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator -=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator-=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator -=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator-=(vec<4, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator /	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator\/(T scalar, mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator /	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator\/(mat<2, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator /	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator\/(mat<2, 2, T, Q> const& m1, mat<2, 2, T, Q> const&/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
operator /	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER typename mat<2, 2, T, Q>::col_type operator\/(mat<2, 2, T, Q> const& m, type/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<2,2,T,Q>::col_type
operator /	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER typename mat<2, 2, T, Q>::row_type operator\/(typename mat<2, 2, T, Q>::col_/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<2,2,T,Q>::row_type
operator /	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator\/(T scalar, mat<2, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
operator /	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator\/(mat<2, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
operator /	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator\/(T scalar, mat<2, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
operator /	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator\/(mat<2, 4, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
operator /	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator\/(T scalar, mat<3, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
operator /	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator\/(mat<3, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
operator /	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator\/(T scalar, mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator /	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator\/(mat<3, 3, T, Q> const& m,	T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator /	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator\/(mat<3, 3, T, Q> const& m1, mat<3, 3, T, Q> const&/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
operator /	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER typename mat<3, 3, T, Q>::col_type operator\/(mat<3, 3, T, Q> const& m, type/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<3,3,T,Q>::col_type
operator /	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER typename mat<3, 3, T, Q>::row_type operator\/(typename mat<3, 3, T, Q>::col_/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<3,3,T,Q>::row_type
operator /	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator\/(T scalar, mat<3, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
operator /	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator\/(mat<3, 4, T, Q> const& m,	T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
operator /	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator\/(T scalar, mat<4, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
operator /	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator\/(mat<4, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
operator /	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator\/(T const& s, mat<4, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
operator /	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator\/(mat<4, 3, T, Q> const& m, T const& s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
operator /	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator\/(T const& s,	mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator /	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator\/(mat<4, 4, T, Q> const& m, T const& s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator /	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator\/(mat<4, 4, T, Q> const& m1, mat<4, 4, T, Q> const&/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
operator /	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER typename mat<4, 4, T, Q>::col_type operator\/(mat<4, 4, T, Q> const& m, type/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<4,4,T,Q>::col_type
operator /	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER typename mat<4, 4, T, Q>::row_type operator\/(typename mat<4, 4, T, Q>::col_/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<4,4,T,Q>::row_type
operator /	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator\/(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator /	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator\/(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator /	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator\/(vec<1, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator /	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator\/(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator /	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator\/(vec<1, T, Q> const& v1, vec<2, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator /	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator\/(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator /	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator\/(vec<2, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator /	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator\/(vec<2, T, Q> const& v1, vec<2, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator /	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator\/(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator /	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator\/(vec<1, T, Q> const& scalar, vec<3, T, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator /	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator\/(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator /	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator\/(vec<3, T, Q> const& v, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator /	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator\/(vec<3, T, Q> const& v1, vec<3, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator /	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator\/(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator /	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator\/(vec<1, T, Q> const& v1, vec<4, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator /	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator\/(vec<4, T, Q> const& v, T const & scala/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator /	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator\/(vec<4, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator /	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator\/(vec<4, T, Q> const& v1, vec<4, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator /	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> operator\/(tdualquat<T, Q> const& q,	T const& s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
operator /=	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator \/= (vec<N, T, Q> const& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
operator /=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator\/=(U scalar)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q> &
operator /=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator\/=(mat<2, 2, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q> &
operator /=	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> & mat<2, 3, T, Q>::operator\/=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q> &
operator /=	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> & mat<2, 4, T, Q>::operator\/=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q> &
operator /=	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> & mat<3, 2, T, Q>::operator\/=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q> &
operator /=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator\/=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q> &
operator /=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator\/=(mat<3, 3, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q> &
operator /=	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> & mat<3, 4, T, Q>::operator\/=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q> &
operator /=	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> & mat<4, 2, T, Q>::operator\/=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q> &
operator /=	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> & mat<4, 3, T, Q>::operator\/=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q> &
operator /=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> & mat<4, 4, T, Q>::operator\/=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q> &
operator /=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> & mat<4, 4, T, Q>::operator\/=(mat<4, 4, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q> &
operator /=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator\/=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator /=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator\/=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator /=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator\/=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator /=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator\/=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator /=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator\/=(vec<2, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator /=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator\/=(U v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator /=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator\/=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator /=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator\/=(vec<3, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator /=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator\/=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator /=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator\/=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator /=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator\/=(vec<4, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator /=	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> & tdualquat<T, Q>::operator\/=(U s)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q> &
operator <<	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator<<(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator <<	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator<<(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator <<	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator<<(vec<1, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator <<	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator<<(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator <<	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator<<(vec<1, T, Q> const& v1, vec<2, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator <<	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator<<(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator <<	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator<<(vec<2, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator <<	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator<<(vec<2, T, Q> const& v1, vec<2, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator <<	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator<<(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator <<	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator<<(vec<1, T, Q> const& scalar, vec<3, T, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator <<	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator<<(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator <<	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator<<(vec<3, T, Q> const& v, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator <<	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator<<(vec<3, T, Q> const& v1, vec<3, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator <<	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator<<(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator <<	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator<<(vec<1, T, Q> const& v1, vec<4, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator <<	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator<<(vec<4, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator <<	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator<<(vec<4, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator <<	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator<<(vec<4, T, Q> const& v1, vec<4, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER  std::basic_ostream<CTy, CTr>& operator<<(std::basic_ostream<CTy, CTr>& os, /;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& operator<<($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& operator<<(std::basic_ostream<CTy, CTr>& os, o/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& operator<<(std::basic_ostream<CTy, CTr>& os, p/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& operator<<(std::basic_ostream<CTy, CTr>& os, w/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> & operator<<(std::basic_ostream<CTy,CTr>& os, ma/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr>& operator<<(std::basic_ostream<CTy,CTr>& os, mat/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr>& operator<<(std::basic_ostream<CTy,CTr>& os, qua/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr>& operator<<(std::basic_ostream<CTy,CTr>& os, vec/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator<<=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator <<=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator<<=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator <<=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator<<=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator <<=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator<<=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator <<=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator<<=(vec<2, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator <<=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator<<=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator <<=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator<<=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator <<=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator<<=(vec<3, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator <<=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator<<=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator <<=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator<<=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator <<=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator<<=(vec<4, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator =	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (Stub const&) { return *this; }$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER _swizzle_base2 &
operator =	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (const T& t)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER _swizzle_base2 &
operator =	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (vec<N, T, Q> const& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER _swizzle_base2 &
operator =	glm/detail/type_float.hpp	/^		GLM_CONSTEXPR float_t& operator=(float_t const& x)$/;"	f	union:glm::detail::float_t	typeref:typename:GLM_CONSTEXPR float_t &
operator =	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator=(mat<2, 2, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q> &
operator =	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q>& mat<2, 3, T, Q>::operator=(mat<2, 3, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q> &
operator =	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q>& mat<2, 4, T, Q>::operator=(mat<2, 4, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q> &
operator =	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q>& mat<3, 2, T, Q>::operator=(mat<3, 2, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q> &
operator =	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator=(mat<3, 3, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q> &
operator =	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q>& mat<3, 4, T, Q>::operator=(mat<3, 4, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q> &
operator =	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q>& mat<4, 2, T, Q>::operator=(mat<4, 2, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q> &
operator =	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q>& mat<4, 3, T, Q>::operator=(mat<4, 3, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q> &
operator =	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q>& mat<4, 4, T, Q>::operator=(mat<4, 4, U, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q> &
operator =	glm/detail/type_vec1.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator=(vec<1, T, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator =	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator =	glm/detail/type_vec2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator=(vec<2, T, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator =	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator=(vec<2, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator =	glm/detail/type_vec3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>& vec<3, T, Q>::operator=(vec<3, T, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator =	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>& vec<3, T, Q>::operator=(vec<3, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator =	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>& vec<4, T, Q>::operator=(vec<4, T, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator =	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>& vec<4, T, Q>::operator=(vec<4, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator =	glm/gtx/dual_quaternion.inl	/^		GLM_FUNC_QUALIFIER tdualquat<T, Q> & tdualquat<T, Q>::operator=(tdualquat<T, Q> const& q)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q> &
operator =	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> & tdualquat<T, Q>::operator=(tdualquat<U, Q> const& q)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q> &
operator =	lodepng.cpp	/^State& State::operator=(const State& other)$/;"	f	class:lodepng::State	typeref:typename:State &
operator ==	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER bool operator==(mat<2, 2, T, Q> const& m1, mat<2, 2, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER bool operator==(mat<2, 3, T, Q> const& m1, mat<2, 3, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER bool operator==(mat<2, 4, T, Q> const& m1, mat<2, 4, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER bool operator==(mat<3, 2, T, Q> const& m1, mat<3, 2, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(mat<3, 3, T, Q> const& m1, mat<3, 3, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER bool operator==(mat<3, 4, T, Q> const& m1, mat<3, 4, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER bool operator==(mat<4, 2, T, Q> const& m1, mat<4, 2, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER bool operator==(mat<4, 3, T, Q> const& m1, mat<4, 3, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER bool operator==(mat<4, 4, T, Q> const& m1, mat<4, 4, T, Q> const& m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(vec<1, T, Q> const& v1, vec<1, T, Q> const& v2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(vec<2, T, Q> const& v1, vec<2, T, Q> const& v2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(vec<3, T, Q> const& v1, vec<3, T, Q> const& v2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(vec<4, T, Q> const& v1, vec<4, T, Q> const& v2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tdualquat<T, Q> const& q1, tdualquat<T, Q> const& q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator >>	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator>>(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator >>	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator>>(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator >>	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator>>(vec<1, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator >>	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator>>(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator >>	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator>>(vec<1, T, Q> const& v1, vec<2, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator >>	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator>>(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator >>	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator>>(vec<2, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator >>	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator>>(vec<2, T, Q> const& v1, vec<2, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator >>	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator>>(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator >>	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator>>(vec<1, T, Q> const& scalar, vec<3, T, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator >>	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator>>(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator >>	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator>>(vec<3, T, Q> const& v, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator >>	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator>>(vec<3, T, Q> const& v1, vec<3, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator >>	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator>>(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator >>	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator>>(vec<1, T, Q> const& v1, vec<4, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator >>	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator>>(vec<4, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator >>	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator>>(vec<4, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator >>	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator>>(vec<4, T, Q> const& v1, vec<4, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator >>=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator>>=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator >>=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator>>=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator >>=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator>>=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator >>=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator>>=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator >>=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator>>=(vec<2, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator >>=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator>>=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator >>=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator>>=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator >>=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator>>=(vec<3, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator >>=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator>>=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator >>=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator>>=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator >>=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator>>=(vec<4, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator []	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T operator[](size_t i) const$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER T
operator []	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T& operator[](size_t i)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 2, T, Q>::col_type const& mat<2, 2, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,2,T,Q>::col_type const &
operator []	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER typename mat<2, 2, T, Q>::col_type& mat<2, 2, T, Q>::operator[](typename mat/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER typename mat<2,2,T,Q>::col_type &
operator []	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 3, T, Q>::col_type const& mat<2, 3, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,3,T,Q>::col_type const &
operator []	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER typename mat<2, 3, T, Q>::col_type & mat<2, 3, T, Q>::operator[](typename ma/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER typename mat<2,3,T,Q>::col_type &
operator []	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 4, T, Q>::col_type const& mat<2, 4, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,4,T,Q>::col_type const &
operator []	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER typename mat<2, 4, T, Q>::col_type & mat<2, 4, T, Q>::operator[](typename ma/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER typename mat<2,4,T,Q>::col_type &
operator []	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 2, T, Q>::col_type const& mat<3, 2, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,2,T,Q>::col_type const &
operator []	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER typename mat<3, 2, T, Q>::col_type & mat<3, 2, T, Q>::operator[](typename ma/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER typename mat<3,2,T,Q>::col_type &
operator []	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 3, T, Q>::col_type const& mat<3, 3, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,3,T,Q>::col_type const &
operator []	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER typename mat<3, 3, T, Q>::col_type & mat<3, 3, T, Q>::operator[](typename ma/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER typename mat<3,3,T,Q>::col_type &
operator []	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 4, T, Q>::col_type const& mat<3, 4, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,4,T,Q>::col_type const &
operator []	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER typename mat<3, 4, T, Q>::col_type & mat<3, 4, T, Q>::operator[](typename ma/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER typename mat<3,4,T,Q>::col_type &
operator []	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 2, T, Q>::col_type const& mat<4, 2, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,2,T,Q>::col_type const &
operator []	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER typename mat<4, 2, T, Q>::col_type & mat<4, 2, T, Q>::operator[](typename ma/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER typename mat<4,2,T,Q>::col_type &
operator []	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 3, T, Q>::col_type const& mat<4, 3, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,3,T,Q>::col_type const &
operator []	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER typename mat<4, 3, T, Q>::col_type & mat<4, 3, T, Q>::operator[](typename ma/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER typename mat<4,3,T,Q>::col_type &
operator []	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 4, T, Q>::col_type const& mat<4, 4, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,4,T,Q>::col_type const &
operator []	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER typename mat<4, 4, T, Q>::col_type & mat<4, 4, T, Q>::operator[](typename ma/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER typename mat<4,4,T,Q>::col_type &
operator []	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T & vec<1, T, Q>::operator[](typename vec<1, T, Q>::length_typ/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T &
operator []	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const& vec<1, T, Q>::operator[](typename vec<1, T, Q>::lengt/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const &
operator []	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T & vec<2, T, Q>::operator[](typename vec<2, T, Q>::length_typ/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T &
operator []	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const& vec<2, T, Q>::operator[](typename vec<2, T, Q>::lengt/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const &
operator []	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T & vec<3, T, Q>::operator[](typename vec<3, T, Q>::length_typ/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T &
operator []	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const& vec<3, T, Q>::operator[](typename vec<3, T, Q>::lengt/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const &
operator []	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const& vec<4, T, Q>::operator[](typename vec<4, T, Q>::lengt/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const &
operator []	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T& vec<4, T, Q>::operator[](typename vec<4, T, Q>::length_type/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T &
operator []	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER typename tdualquat<T, Q>::part_type & tdualquat<T, Q>::operator[](typename t/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER typename tdualquat<T,Q>::part_type &
operator []	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER typename tdualquat<T, Q>::part_type const& tdualquat<T, Q>::operator[](typen/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER typename tdualquat<T,Q>::part_type const &
operator [] 	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T operator[]  (size_t i) const$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER T
operator ^	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator^(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator ^	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator^(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator ^	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator^(vec<1, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator ^	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator^(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator ^	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator^(vec<1, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator ^	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator^(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator ^	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator^(vec<2, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator ^	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator^(vec<2, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator ^	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator^(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator ^	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator^(vec<1, T, Q> const& scalar, vec<3, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator ^	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator^(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator ^	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator^(vec<3, T, Q> const& v, vec<1, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator ^	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator^(vec<3, T, Q> const& v1, vec<3, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator ^	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator^(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator ^	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator^(vec<1, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator ^	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator^(vec<4, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator ^	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator^(vec<4, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator ^	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator^(vec<4, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator ^=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator^=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator ^=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator^=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator ^=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator^=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator ^=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator^=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator ^=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator^=(vec<2, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator ^=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator^=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator ^=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator^=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator ^=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator^=(vec<3, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator ^=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator^=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator ^=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator^=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator ^=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator^=(vec<4, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator vec<N,T,Q>	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER operator vec<N, T, Q> () const { return (*this)(); }$/;"	f	struct:glm::detail::_swizzle	typeref:typename:GLM_FUNC_QUALIFIER
operator |	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator|(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator |	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator|(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator |	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator|(vec<1, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator |	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator|(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator |	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator|(vec<1, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator |	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator|(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator |	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator|(vec<2, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator |	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator|(vec<2, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator |	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator|(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator |	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator|(vec<1, T, Q> const& scalar, vec<3, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator |	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator|(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator |	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator|(vec<3, T, Q> const& v, vec<1, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator |	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator|(vec<3, T, Q> const& v1, vec<3, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator |	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator|(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator |	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator|(vec<1, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator |	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator|(vec<4, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator |	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator|(vec<4, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator |	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator|(vec<4, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator |=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator|=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator |=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator|=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator |=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator|=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator |=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator|=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator |=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator|=(vec<2, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator |=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator|=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator |=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator|=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator |=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator|=(vec<3, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator |=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator|=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator |=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator|=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator |=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator|=(vec<4, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator ||	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, bool, Q> operator||(vec<1, bool, Q> const& v1, vec<1, b/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,bool,Q>
operator ||	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, bool, Q> operator||(vec<2, bool, Q> const& v1, vec<2, b/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,bool,Q>
operator ||	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, bool, Q> operator||(vec<3, bool, Q> const& v1, vec<3, b/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,bool,Q>
operator ||	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, bool, Q> operator||(vec<4, bool, Q> const& v1, vec<4, b/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,bool,Q>
operator ~	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator~(vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator ~	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator~(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator ~	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator~(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator ~	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator~(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
order	glm/gtx/io.hpp	/^			order_type order;$/;"	m	class:glm::io::format_punct	typeref:typename:order_type
order	glm/gtx/io.hpp	/^		struct order$/;"	s	namespace:glm::io
order	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER order::order(order_type a)$/;"	f	class:glm::io::order	typeref:typename:GLM_FUNC_QUALIFIER
order_type	glm/gtx/io.hpp	/^		enum order_type { column_major, row_major};$/;"	g	namespace:glm::io
orientate2	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, defaultp> orientate2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,defaultp>
orientate3	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> orientate3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
orientate3	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, defaultp> orientate3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,defaultp>
orientate4	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> orientate4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
orientation	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> orientation$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
orientedAngle	glm/gtx/vector_angle.inl	/^	GLM_FUNC_QUALIFIER T orientedAngle(vec<2, T, Q> const& x, vec<2, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
orientedAngle	glm/gtx/vector_angle.inl	/^	GLM_FUNC_QUALIFIER T orientedAngle(vec<3, T, Q> const& x, vec<3, T, Q> const& y, vec<3, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
ortho	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> ortho(T left, T right, T bottom, T top)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
ortho	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> ortho(T left, T right, T bottom, T top, T zNear, T zF/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthoLH	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> orthoLH(T left, T right, T bottom, T top, T zNear, T /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthoLH_NO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> orthoLH_NO(T left, T right, T bottom, T top, T zNear,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthoLH_ZO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> orthoLH_ZO(T left, T right, T bottom, T top, T zNear,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthoNO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> orthoNO(T left, T right, T bottom, T top, T zNear, T /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthoRH	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> orthoRH(T left, T right, T bottom, T top, T zNear, T /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthoRH_NO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> orthoRH_NO(T left, T right, T bottom, T top, T zNear,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthoRH_ZO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> orthoRH_ZO(T left, T right, T bottom, T top, T zNear,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthoZO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> orthoZO(T left, T right, T bottom, T top, T zNear, T /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthonormalize	glm/gtx/orthonormalize.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> orthonormalize(mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
orthonormalize	glm/gtx/orthonormalize.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> orthonormalize(vec<3, T, Q> const& x, vec<3, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
out	glm/detail/func_common.inl	/^			float out;$/;"	m	union:glm::intBitsToFloat::__anon0405017b030a	typeref:typename:float	file:
out	glm/detail/func_common.inl	/^			float out;$/;"	m	union:glm::uintBitsToFloat::__anon0405017b040a	typeref:typename:float	file:
out	glm/detail/func_common.inl	/^			int out;$/;"	m	union:glm::floatBitsToInt::__anon0405017b010a	typeref:typename:int	file:
out	glm/detail/func_common.inl	/^			uint out;$/;"	m	union:glm::floatBitsToUint::__anon0405017b020a	typeref:typename:uint	file:
out	glm/detail/func_packing.inl	/^			double out;$/;"	m	union:glm::packDouble2x32::__anone26ffacf090a	typeref:typename:double	file:
out	glm/detail/func_packing.inl	/^			signed char out[4];$/;"	m	union:glm::unpackSnorm4x8::__anone26ffacf080a	typeref:typename:signed char[4]	file:
out	glm/detail/func_packing.inl	/^			signed short out[2];$/;"	m	union:glm::unpackHalf2x16::__anone26ffacf0c0a	typeref:typename:signed short[2]	file:
out	glm/detail/func_packing.inl	/^			signed short out[2];$/;"	m	union:glm::unpackSnorm2x16::__anone26ffacf040a	typeref:typename:signed short[2]	file:
out	glm/detail/func_packing.inl	/^			uint   out[2];$/;"	m	union:glm::unpackDouble2x32::__anone26ffacf0a0a	typeref:typename:uint[2]	file:
out	glm/detail/func_packing.inl	/^			uint out;$/;"	m	union:glm::packHalf2x16::__anone26ffacf0b0a	typeref:typename:uint	file:
out	glm/detail/func_packing.inl	/^			uint out;$/;"	m	union:glm::packSnorm2x16::__anone26ffacf030a	typeref:typename:uint	file:
out	glm/detail/func_packing.inl	/^			uint out;$/;"	m	union:glm::packSnorm4x8::__anone26ffacf070a	typeref:typename:uint	file:
out	glm/detail/func_packing.inl	/^			uint out;$/;"	m	union:glm::packUnorm2x16::__anone26ffacf010a	typeref:typename:uint	file:
out	glm/detail/func_packing.inl	/^			uint out;$/;"	m	union:glm::packUnorm4x8::__anone26ffacf050a	typeref:typename:uint	file:
out	glm/detail/func_packing.inl	/^			unsigned char out[4];$/;"	m	union:glm::unpackUnorm4x8::__anone26ffacf060a	typeref:typename:unsigned char[4]	file:
out	glm/detail/func_packing.inl	/^			unsigned short out[2];$/;"	m	union:glm::unpackUnorm2x16::__anone26ffacf020a	typeref:typename:unsigned short[2]	file:
outerProduct	glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER typename detail::outerProduct_trait<DA, DB, T, Q>::type outerProduct(vec<DA,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename detail::outerProduct_trait<DA,DB,T,Q>::type
outerProduct	glm/detail/func_matrix_simd.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, float, aligned_highp> outerProduct<4, 4, float, aligned_highp>(vec/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,float,aligned_highp>
outerProduct	glm/detail/func_matrix_simd.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, float, aligned_lowp> outerProduct<4, 4, float, aligned_lowp>(vec<4/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,float,aligned_lowp>
outerProduct	glm/detail/func_matrix_simd.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, float, aligned_mediump> outerProduct<4, 4, float, aligned_mediump>/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,float,aligned_mediump>
outerProduct_trait	glm/matrix.hpp	/^	struct outerProduct_trait<2, 2, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/matrix.hpp	/^	struct outerProduct_trait<2, 3, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/matrix.hpp	/^	struct outerProduct_trait<2, 4, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/matrix.hpp	/^	struct outerProduct_trait<3, 2, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/matrix.hpp	/^	struct outerProduct_trait<3, 3, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/matrix.hpp	/^	struct outerProduct_trait<3, 4, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/matrix.hpp	/^	struct outerProduct_trait<4, 2, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/matrix.hpp	/^	struct outerProduct_trait<4, 3, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/matrix.hpp	/^	struct outerProduct_trait<4, 4, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/matrix.hpp	/^	struct outerProduct_trait{};$/;"	s	namespace:glm::detail
overflow	glm/detail/type_half.inl	/^	GLM_FUNC_QUALIFIER float overflow()$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
p	glm/detail/type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::vec::__anon0c12e1fe010a::__anon0c12e1fe0408	typeref:typename:T
p	glm/detail/type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::vec::__anon0c12e1fe070a	typeref:typename:T
p	glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::vec::__anon0c24fa7f010a::__anon0c24fa7f0408	typeref:typename:T
p	glm/detail/type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::vec::__anon0c24fa7f070a	typeref:typename:T
pack	glm/gtc/packing.inl	/^		GLM_FUNC_QUALIFIER static vec<1, uint16, Q> pack(vec<1, float, Q> const& v)$/;"	f	struct:glm::detail::compute_half	typeref:typename:GLM_FUNC_QUALIFIER vec<1,uint16,Q>	file:
pack	glm/gtc/packing.inl	/^		GLM_FUNC_QUALIFIER static vec<2, uint16, Q> pack(vec<2, float, Q> const& v)$/;"	f	struct:glm::detail::compute_half	typeref:typename:GLM_FUNC_QUALIFIER vec<2,uint16,Q>	file:
pack	glm/gtc/packing.inl	/^		GLM_FUNC_QUALIFIER static vec<3, uint16, Q> pack(vec<3, float, Q> const& v)$/;"	f	struct:glm::detail::compute_half	typeref:typename:GLM_FUNC_QUALIFIER vec<3,uint16,Q>	file:
pack	glm/gtc/packing.inl	/^		GLM_FUNC_QUALIFIER static vec<4, uint16, Q> pack(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_half	typeref:typename:GLM_FUNC_QUALIFIER vec<4,uint16,Q>	file:
pack	glm/gtc/packing.inl	/^		uint16 pack;$/;"	m	union:glm::detail::u4u4u4u4	typeref:typename:uint16	file:
pack	glm/gtc/packing.inl	/^		uint16 pack;$/;"	m	union:glm::detail::u5u5u5u1	typeref:typename:uint16	file:
pack	glm/gtc/packing.inl	/^		uint16 pack;$/;"	m	union:glm::detail::u5u6u5	typeref:typename:uint16	file:
pack	glm/gtc/packing.inl	/^		uint32 pack;$/;"	m	union:glm::detail::i10i10i10i2	typeref:typename:uint32	file:
pack	glm/gtc/packing.inl	/^		uint32 pack;$/;"	m	union:glm::detail::u10u10u10u2	typeref:typename:uint32	file:
pack	glm/gtc/packing.inl	/^		uint32 pack;$/;"	m	union:glm::detail::u9u9u9e5	typeref:typename:uint32	file:
pack	glm/gtc/packing.inl	/^		uint8 pack;$/;"	m	union:glm::detail::u3u3u2	typeref:typename:uint8	file:
pack	glm/gtc/packing.inl	/^		uint8 pack;$/;"	m	union:glm::detail::u4u4	typeref:typename:uint8	file:
packDouble2x32	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER double packDouble2x32(uvec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER double
packF2x11_1x10	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packF2x11_1x10(vec3 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packF3x9_E1x5	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packF3x9_E1x5(vec3 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packHalf	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec<L, uint16, Q> packHalf(vec<L, float, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint16,Q>
packHalf1x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packHalf1x16(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packHalf2x16	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packHalf2x16(vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packHalf4x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint64 packHalf4x16(glm::vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
packI3x10_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packI3x10_1x2(ivec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packInt2x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER int packInt2x16(i16vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
packInt2x32	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER int64 packInt2x32(i32vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
packInt2x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER int16 packInt2x8(i8vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int16
packInt4x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER int64 packInt4x16(i16vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
packInt4x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER int32 packInt4x8(i8vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int32
packRGBM	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> packRGBM(vec<3, T, Q> const& rgb)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
packSnorm	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec<L, intType, Q> packSnorm(vec<L, floatType, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,intType,Q>
packSnorm1x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packSnorm1x16(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packSnorm1x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint8 packSnorm1x8(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint8
packSnorm2x16	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packSnorm2x16(vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packSnorm2x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packSnorm2x8(vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packSnorm3x10_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packSnorm3x10_1x2(vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packSnorm4x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint64 packSnorm4x16(vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
packSnorm4x8	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packSnorm4x8(vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packU3x10_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packU3x10_1x2(uvec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packUint2x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint packUint2x16(u16vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packUint2x32	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint64 packUint2x32(u32vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
packUint2x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packUint2x8(u8vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packUint4x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint64 packUint4x16(u16vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
packUint4x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packUint4x8(u8vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packUnorm	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec<L, uintType, Q> packUnorm(vec<L, floatType, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uintType,Q>
packUnorm1x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packUnorm1x16(float s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packUnorm1x5_1x6_1x5	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packUnorm1x5_1x6_1x5(vec3 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packUnorm1x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint8 packUnorm1x8(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint8
packUnorm2x16	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packUnorm2x16(vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packUnorm2x3_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint8 packUnorm2x3_1x2(vec3 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint8
packUnorm2x4	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint8 packUnorm2x4(vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint8
packUnorm2x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packUnorm2x8(vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packUnorm3x10_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packUnorm3x10_1x2(vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packUnorm3x5_1x1	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packUnorm3x5_1x1(vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packUnorm4x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint64 packUnorm4x16(vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
packUnorm4x4	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packUnorm4x4(vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packUnorm4x8	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packUnorm4x8(vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packed	glm/detail/qualifier.hpp	/^		packed = packed_highp, \/\/\/< By default packed qualifier is also high precision$/;"	e	enum:glm::qualifier
packed10ToFloat	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 packed10ToFloat(glm::uint32 p)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
packed10bitToFloat	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float packed10bitToFloat(glm::uint x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
packed11ToFloat	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 packed11ToFloat(glm::uint32 p)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
packed11bitToFloat	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float packed11bitToFloat(glm::uint x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
packed_bvec1	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_bvec1			packed_bvec1;$/;"	t	namespace:glm	typeref:typename:packed_highp_bvec1
packed_bvec2	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_bvec2			packed_bvec2;$/;"	t	namespace:glm	typeref:typename:packed_highp_bvec2
packed_bvec3	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_bvec3			packed_bvec3;$/;"	t	namespace:glm	typeref:typename:packed_highp_bvec3
packed_bvec4	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_bvec4			packed_bvec4;$/;"	t	namespace:glm	typeref:typename:packed_highp_bvec4
packed_dmat2	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat2			packed_dmat2;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat2
packed_dmat2	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat2			packed_dmat2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat2
packed_dmat2	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat2		packed_dmat2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat2
packed_dmat2x2	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat2x2		packed_dmat2x2;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat2x2
packed_dmat2x2	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat2x2			packed_dmat2x2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat2x2
packed_dmat2x2	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat2x2		packed_dmat2x2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat2x2
packed_dmat2x3	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat2x3		packed_dmat2x3;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat2x3
packed_dmat2x3	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat2x3			packed_dmat2x3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat2x3
packed_dmat2x3	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat2x3		packed_dmat2x3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat2x3
packed_dmat2x4	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat2x4		packed_dmat2x4;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat2x4
packed_dmat2x4	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat2x4			packed_dmat2x4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat2x4
packed_dmat2x4	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat2x4		packed_dmat2x4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat2x4
packed_dmat3	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat3			packed_dmat3;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat3
packed_dmat3	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat3			packed_dmat3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat3
packed_dmat3	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat3		packed_dmat3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat3
packed_dmat3x2	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat3x2		packed_dmat3x2;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat3x2
packed_dmat3x2	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat3x2			packed_dmat3x2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat3x2
packed_dmat3x2	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat3x2		packed_dmat3x2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat3x2
packed_dmat3x3	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat3x3		packed_dmat3x3;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat3x3
packed_dmat3x3	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat3x3			packed_dmat3x3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat3x3
packed_dmat3x3	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat3x3		packed_dmat3x3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat3x3
packed_dmat3x4	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat3x4		packed_dmat3x4;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat3x4
packed_dmat3x4	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat3x4			packed_dmat3x4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat3x4
packed_dmat3x4	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat3x4		packed_dmat3x4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat3x4
packed_dmat4	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat4			packed_dmat4;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat4
packed_dmat4	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat4			packed_dmat4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat4
packed_dmat4	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat4		packed_dmat4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat4
packed_dmat4x2	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat4x2		packed_dmat4x2;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat4x2
packed_dmat4x2	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat4x2			packed_dmat4x2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat4x2
packed_dmat4x2	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat4x2		packed_dmat4x2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat4x2
packed_dmat4x3	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat4x3		packed_dmat4x3;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat4x3
packed_dmat4x3	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat4x3			packed_dmat4x3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat4x3
packed_dmat4x3	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat4x3		packed_dmat4x3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat4x3
packed_dmat4x4	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat4x4		packed_dmat4x4;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat4x4
packed_dmat4x4	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat4x4			packed_dmat4x4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat4x4
packed_dmat4x4	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat4x4		packed_dmat4x4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat4x4
packed_dvec1	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dvec1			packed_dvec1;$/;"	t	namespace:glm	typeref:typename:packed_highp_dvec1
packed_dvec1	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dvec1			packed_dvec1;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dvec1
packed_dvec1	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dvec1		packed_dvec1;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dvec1
packed_dvec2	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dvec2			packed_dvec2;$/;"	t	namespace:glm	typeref:typename:packed_highp_dvec2
packed_dvec2	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dvec2			packed_dvec2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dvec2
packed_dvec2	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dvec2		packed_dvec2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dvec2
packed_dvec3	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dvec3			packed_dvec3;$/;"	t	namespace:glm	typeref:typename:packed_highp_dvec3
packed_dvec3	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dvec3			packed_dvec3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dvec3
packed_dvec3	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dvec3		packed_dvec3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dvec3
packed_dvec4	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dvec4			packed_dvec4;$/;"	t	namespace:glm	typeref:typename:packed_highp_dvec4
packed_dvec4	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dvec4			packed_dvec4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dvec4
packed_dvec4	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dvec4		packed_dvec4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dvec4
packed_highp	glm/detail/qualifier.hpp	/^		packed_highp, \/\/\/< Typed data is tightly packed in memory and operations are executed with /;"	e	enum:glm::qualifier
packed_highp_bvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, bool, packed_highp>		packed_highp_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,packed_highp>
packed_highp_bvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, bool, packed_highp>		packed_highp_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,packed_highp>
packed_highp_bvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, bool, packed_highp>		packed_highp_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,packed_highp>
packed_highp_bvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, bool, packed_highp>		packed_highp_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,packed_highp>
packed_highp_dmat2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, packed_highp>		packed_highp_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,packed_highp>
packed_highp_dmat2x2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, packed_highp>		packed_highp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,packed_highp>
packed_highp_dmat2x3	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, double, packed_highp>		packed_highp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,packed_highp>
packed_highp_dmat2x4	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, double, packed_highp>		packed_highp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,packed_highp>
packed_highp_dmat3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, packed_highp>		packed_highp_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,packed_highp>
packed_highp_dmat3x2	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, double, packed_highp>		packed_highp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,packed_highp>
packed_highp_dmat3x3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, packed_highp>		packed_highp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,packed_highp>
packed_highp_dmat3x4	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, double, packed_highp>		packed_highp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,packed_highp>
packed_highp_dmat4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, packed_highp>		packed_highp_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,packed_highp>
packed_highp_dmat4x2	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, double, packed_highp>		packed_highp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,packed_highp>
packed_highp_dmat4x3	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, double, packed_highp>		packed_highp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,packed_highp>
packed_highp_dmat4x4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, packed_highp>		packed_highp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,packed_highp>
packed_highp_dvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, double, packed_highp>	packed_highp_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,packed_highp>
packed_highp_dvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, double, packed_highp>	packed_highp_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,packed_highp>
packed_highp_dvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, double, packed_highp>	packed_highp_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,packed_highp>
packed_highp_dvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, double, packed_highp>	packed_highp_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,packed_highp>
packed_highp_ivec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, int, packed_highp>		packed_highp_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,packed_highp>
packed_highp_ivec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, int, packed_highp>		packed_highp_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,packed_highp>
packed_highp_ivec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, int, packed_highp>		packed_highp_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,packed_highp>
packed_highp_ivec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, int, packed_highp>		packed_highp_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,packed_highp>
packed_highp_mat2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, packed_highp>		packed_highp_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,packed_highp>
packed_highp_mat2x2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, packed_highp>		packed_highp_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,packed_highp>
packed_highp_mat2x3	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, float, packed_highp>		packed_highp_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,packed_highp>
packed_highp_mat2x4	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, float, packed_highp>		packed_highp_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,packed_highp>
packed_highp_mat3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, packed_highp>		packed_highp_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,packed_highp>
packed_highp_mat3x2	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, float, packed_highp>		packed_highp_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,packed_highp>
packed_highp_mat3x3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, packed_highp>		packed_highp_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,packed_highp>
packed_highp_mat3x4	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, float, packed_highp>		packed_highp_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,packed_highp>
packed_highp_mat4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, packed_highp>		packed_highp_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,packed_highp>
packed_highp_mat4x2	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, float, packed_highp>		packed_highp_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,packed_highp>
packed_highp_mat4x3	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, float, packed_highp>		packed_highp_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,packed_highp>
packed_highp_mat4x4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, packed_highp>		packed_highp_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,packed_highp>
packed_highp_uvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, uint, packed_highp>		packed_highp_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,packed_highp>
packed_highp_uvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, uint, packed_highp>		packed_highp_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,packed_highp>
packed_highp_uvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, uint, packed_highp>		packed_highp_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,packed_highp>
packed_highp_uvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, uint, packed_highp>		packed_highp_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,packed_highp>
packed_highp_vec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, float, packed_highp>		packed_highp_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,packed_highp>
packed_highp_vec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, float, packed_highp>		packed_highp_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,packed_highp>
packed_highp_vec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, float, packed_highp>		packed_highp_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,packed_highp>
packed_highp_vec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, float, packed_highp>		packed_highp_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,packed_highp>
packed_ivec1	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_ivec1			packed_ivec1;$/;"	t	namespace:glm	typeref:typename:packed_highp_ivec1
packed_ivec2	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_ivec2			packed_ivec2;$/;"	t	namespace:glm	typeref:typename:packed_highp_ivec2
packed_ivec3	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_ivec3			packed_ivec3;$/;"	t	namespace:glm	typeref:typename:packed_highp_ivec3
packed_ivec4	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_ivec4			packed_ivec4;$/;"	t	namespace:glm	typeref:typename:packed_highp_ivec4
packed_lowp	glm/detail/qualifier.hpp	/^		packed_lowp, \/\/\/< Typed data is tightly packed in memory  and operations are executed with /;"	e	enum:glm::qualifier
packed_lowp_bvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, bool, packed_lowp>		packed_lowp_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,packed_lowp>
packed_lowp_bvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, bool, packed_lowp>		packed_lowp_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,packed_lowp>
packed_lowp_bvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, bool, packed_lowp>		packed_lowp_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,packed_lowp>
packed_lowp_bvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, bool, packed_lowp>		packed_lowp_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,packed_lowp>
packed_lowp_dmat2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, packed_lowp>		packed_lowp_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,packed_lowp>
packed_lowp_dmat2x2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, packed_lowp>		packed_lowp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,packed_lowp>
packed_lowp_dmat2x3	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, double, packed_lowp>		packed_lowp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,packed_lowp>
packed_lowp_dmat2x4	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, double, packed_lowp>		packed_lowp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,packed_lowp>
packed_lowp_dmat3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, packed_lowp>		packed_lowp_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,packed_lowp>
packed_lowp_dmat3x2	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, double, packed_lowp>		packed_lowp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,packed_lowp>
packed_lowp_dmat3x3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, packed_lowp>		packed_lowp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,packed_lowp>
packed_lowp_dmat3x4	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, double, packed_lowp>		packed_lowp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,packed_lowp>
packed_lowp_dmat4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, packed_lowp>		packed_lowp_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,packed_lowp>
packed_lowp_dmat4x2	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, double, packed_lowp>		packed_lowp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,packed_lowp>
packed_lowp_dmat4x3	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, double, packed_lowp>		packed_lowp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,packed_lowp>
packed_lowp_dmat4x4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, packed_lowp>		packed_lowp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,packed_lowp>
packed_lowp_dvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, double, packed_lowp>		packed_lowp_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,packed_lowp>
packed_lowp_dvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, double, packed_lowp>		packed_lowp_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,packed_lowp>
packed_lowp_dvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, double, packed_lowp>		packed_lowp_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,packed_lowp>
packed_lowp_dvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, double, packed_lowp>		packed_lowp_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,packed_lowp>
packed_lowp_ivec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, int, packed_lowp>		packed_lowp_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,packed_lowp>
packed_lowp_ivec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, int, packed_lowp>		packed_lowp_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,packed_lowp>
packed_lowp_ivec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, int, packed_lowp>		packed_lowp_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,packed_lowp>
packed_lowp_ivec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, int, packed_lowp>		packed_lowp_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,packed_lowp>
packed_lowp_mat2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, packed_lowp>		packed_lowp_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,packed_lowp>
packed_lowp_mat2x2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, packed_lowp>		packed_lowp_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,packed_lowp>
packed_lowp_mat2x3	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, float, packed_lowp>		packed_lowp_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,packed_lowp>
packed_lowp_mat2x4	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, float, packed_lowp>		packed_lowp_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,packed_lowp>
packed_lowp_mat3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, packed_lowp>		packed_lowp_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,packed_lowp>
packed_lowp_mat3x2	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, float, packed_lowp>		packed_lowp_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,packed_lowp>
packed_lowp_mat3x3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, packed_lowp>		packed_lowp_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,packed_lowp>
packed_lowp_mat3x4	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, float, packed_lowp>		packed_lowp_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,packed_lowp>
packed_lowp_mat4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, packed_lowp>		packed_lowp_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,packed_lowp>
packed_lowp_mat4x2	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, float, packed_lowp>		packed_lowp_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,packed_lowp>
packed_lowp_mat4x3	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, float, packed_lowp>		packed_lowp_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,packed_lowp>
packed_lowp_mat4x4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, packed_lowp>		packed_lowp_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,packed_lowp>
packed_lowp_uvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, uint, packed_lowp>		packed_lowp_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,packed_lowp>
packed_lowp_uvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, uint, packed_lowp>		packed_lowp_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,packed_lowp>
packed_lowp_uvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, uint, packed_lowp>		packed_lowp_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,packed_lowp>
packed_lowp_uvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, uint, packed_lowp>		packed_lowp_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,packed_lowp>
packed_lowp_vec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, float, packed_lowp>		packed_lowp_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,packed_lowp>
packed_lowp_vec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, float, packed_lowp>		packed_lowp_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,packed_lowp>
packed_lowp_vec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, float, packed_lowp>		packed_lowp_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,packed_lowp>
packed_lowp_vec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, float, packed_lowp>		packed_lowp_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,packed_lowp>
packed_mat2	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat2			packed_mat2;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat2
packed_mat2	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat2			packed_mat2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat2
packed_mat2	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat2			packed_mat2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat2
packed_mat2x2	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat2x2			packed_mat2x2;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat2x2
packed_mat2x2	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat2x2			packed_mat2x2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat2x2
packed_mat2x2	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat2x2		packed_mat2x2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat2x2
packed_mat2x3	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat2x3			packed_mat2x3;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat2x3
packed_mat2x3	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat2x3			packed_mat2x3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat2x3
packed_mat2x3	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat2x3		packed_mat2x3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat2x3
packed_mat2x4	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat2x4			packed_mat2x4;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat2x4
packed_mat2x4	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat2x4			packed_mat2x4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat2x4
packed_mat2x4	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat2x4		packed_mat2x4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat2x4
packed_mat3	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat3			packed_mat3;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat3
packed_mat3	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat3			packed_mat3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat3
packed_mat3	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat3			packed_mat3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat3
packed_mat3x2	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat3x2			packed_mat3x2;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat3x2
packed_mat3x2	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat3x2			packed_mat3x2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat3x2
packed_mat3x2	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat3x2		packed_mat3x2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat3x2
packed_mat3x3	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat3x3			packed_mat3x3;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat3x3
packed_mat3x3	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat3x3			packed_mat3x3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat3x3
packed_mat3x3	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat3x3		packed_mat3x3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat3x3
packed_mat3x4	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat3x4			packed_mat3x4;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat3x4
packed_mat3x4	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat3x4			packed_mat3x4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat3x4
packed_mat3x4	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat3x4		packed_mat3x4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat3x4
packed_mat4	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat4			packed_mat4;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat4
packed_mat4	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat4			packed_mat4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat4
packed_mat4	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat4			packed_mat4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat4
packed_mat4x2	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat4x2			packed_mat4x2;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat4x2
packed_mat4x2	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat4x2			packed_mat4x2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat4x2
packed_mat4x2	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat4x2		packed_mat4x2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat4x2
packed_mat4x3	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat4x3			packed_mat4x3;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat4x3
packed_mat4x3	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat4x3			packed_mat4x3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat4x3
packed_mat4x3	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat4x3		packed_mat4x3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat4x3
packed_mat4x4	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat4x4			packed_mat4x4;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat4x4
packed_mat4x4	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat4x4			packed_mat4x4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat4x4
packed_mat4x4	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat4x4		packed_mat4x4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat4x4
packed_mediump	glm/detail/qualifier.hpp	/^		packed_mediump, \/\/\/< Typed data is tightly packed in memory  and operations are executed wi/;"	e	enum:glm::qualifier
packed_mediump_bvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, bool, packed_mediump>	packed_mediump_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,packed_mediump>
packed_mediump_bvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, bool, packed_mediump>	packed_mediump_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,packed_mediump>
packed_mediump_bvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, bool, packed_mediump>	packed_mediump_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,packed_mediump>
packed_mediump_bvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, bool, packed_mediump>	packed_mediump_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,packed_mediump>
packed_mediump_dmat2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, packed_mediump>	packed_mediump_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,packed_mediump>
packed_mediump_dmat2x2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, packed_mediump>	packed_mediump_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,packed_mediump>
packed_mediump_dmat2x3	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, double, packed_mediump>	packed_mediump_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,packed_mediump>
packed_mediump_dmat2x4	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, double, packed_mediump>	packed_mediump_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,packed_mediump>
packed_mediump_dmat3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, packed_mediump>	packed_mediump_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,packed_mediump>
packed_mediump_dmat3x2	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, double, packed_mediump>	packed_mediump_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,packed_mediump>
packed_mediump_dmat3x3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, packed_mediump>	packed_mediump_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,packed_mediump>
packed_mediump_dmat3x4	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, double, packed_mediump>	packed_mediump_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,packed_mediump>
packed_mediump_dmat4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, packed_mediump>	packed_mediump_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,packed_mediump>
packed_mediump_dmat4x2	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, double, packed_mediump>	packed_mediump_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,packed_mediump>
packed_mediump_dmat4x3	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, double, packed_mediump>	packed_mediump_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,packed_mediump>
packed_mediump_dmat4x4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, packed_mediump>	packed_mediump_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,packed_mediump>
packed_mediump_dvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, double, packed_mediump>	packed_mediump_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,packed_mediump>
packed_mediump_dvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, double, packed_mediump>	packed_mediump_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,packed_mediump>
packed_mediump_dvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, double, packed_mediump>	packed_mediump_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,packed_mediump>
packed_mediump_dvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, double, packed_mediump>	packed_mediump_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,packed_mediump>
packed_mediump_ivec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, int, packed_mediump>		packed_mediump_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,packed_mediump>
packed_mediump_ivec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, int, packed_mediump>		packed_mediump_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,packed_mediump>
packed_mediump_ivec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, int, packed_mediump>		packed_mediump_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,packed_mediump>
packed_mediump_ivec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, int, packed_mediump>		packed_mediump_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,packed_mediump>
packed_mediump_mat2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, packed_mediump>	packed_mediump_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,packed_mediump>
packed_mediump_mat2x2	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, packed_mediump>	packed_mediump_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,packed_mediump>
packed_mediump_mat2x3	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, float, packed_mediump>	packed_mediump_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,packed_mediump>
packed_mediump_mat2x4	glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, float, packed_mediump>	packed_mediump_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,packed_mediump>
packed_mediump_mat3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, packed_mediump>	packed_mediump_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,packed_mediump>
packed_mediump_mat3x2	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, float, packed_mediump>	packed_mediump_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,packed_mediump>
packed_mediump_mat3x3	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, packed_mediump>	packed_mediump_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,packed_mediump>
packed_mediump_mat3x4	glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, float, packed_mediump>	packed_mediump_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,packed_mediump>
packed_mediump_mat4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, packed_mediump>	packed_mediump_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,packed_mediump>
packed_mediump_mat4x2	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, float, packed_mediump>	packed_mediump_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,packed_mediump>
packed_mediump_mat4x3	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, float, packed_mediump>	packed_mediump_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,packed_mediump>
packed_mediump_mat4x4	glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, packed_mediump>	packed_mediump_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,packed_mediump>
packed_mediump_uvec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, uint, packed_mediump>	packed_mediump_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,packed_mediump>
packed_mediump_uvec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, uint, packed_mediump>	packed_mediump_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,packed_mediump>
packed_mediump_uvec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, uint, packed_mediump>	packed_mediump_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,packed_mediump>
packed_mediump_uvec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, uint, packed_mediump>	packed_mediump_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,packed_mediump>
packed_mediump_vec1	glm/gtc/type_aligned.hpp	/^	typedef vec<1, float, packed_mediump>	packed_mediump_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,packed_mediump>
packed_mediump_vec2	glm/gtc/type_aligned.hpp	/^	typedef vec<2, float, packed_mediump>	packed_mediump_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,packed_mediump>
packed_mediump_vec3	glm/gtc/type_aligned.hpp	/^	typedef vec<3, float, packed_mediump>	packed_mediump_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,packed_mediump>
packed_mediump_vec4	glm/gtc/type_aligned.hpp	/^	typedef vec<4, float, packed_mediump>	packed_mediump_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,packed_mediump>
packed_uvec1	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_uvec1			packed_uvec1;$/;"	t	namespace:glm	typeref:typename:packed_highp_uvec1
packed_uvec2	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_uvec2			packed_uvec2;$/;"	t	namespace:glm	typeref:typename:packed_highp_uvec2
packed_uvec3	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_uvec3			packed_uvec3;$/;"	t	namespace:glm	typeref:typename:packed_highp_uvec3
packed_uvec4	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_uvec4			packed_uvec4;$/;"	t	namespace:glm	typeref:typename:packed_highp_uvec4
packed_vec1	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_vec1			packed_vec1;$/;"	t	namespace:glm	typeref:typename:packed_highp_vec1
packed_vec1	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_vec1			packed_vec1;$/;"	t	namespace:glm	typeref:typename:packed_lowp_vec1
packed_vec1	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_vec1			packed_vec1;$/;"	t	namespace:glm	typeref:typename:packed_mediump_vec1
packed_vec2	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_vec2			packed_vec2;$/;"	t	namespace:glm	typeref:typename:packed_highp_vec2
packed_vec2	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_vec2			packed_vec2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_vec2
packed_vec2	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_vec2			packed_vec2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_vec2
packed_vec3	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_vec3			packed_vec3;$/;"	t	namespace:glm	typeref:typename:packed_highp_vec3
packed_vec3	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_vec3			packed_vec3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_vec3
packed_vec3	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_vec3			packed_vec3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_vec3
packed_vec4	glm/gtc/type_aligned.hpp	/^	typedef packed_highp_vec4			packed_vec4;$/;"	t	namespace:glm	typeref:typename:packed_highp_vec4
packed_vec4	glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_vec4			packed_vec4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_vec4
packed_vec4	glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_vec4			packed_vec4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_vec4
paethPredictor	lodepng.cpp	/^static unsigned char paethPredictor(short a, short b, short c)$/;"	f	typeref:typename:unsigned char	file:
palette	lodepng.h	/^  unsigned char palette[1024]; \/*Remembers up to the first 256 RGBA colors, in no particular or/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned char[1024]
palette	lodepng.h	/^  unsigned char* palette; \/*palette in RGBARGBA... order. When allocated, must be either 0, or /;"	m	struct:LodePNGColorMode	typeref:typename:unsigned char *
palettesize	lodepng.h	/^  size_t palettesize; \/*palette size in number of colors (amount of bytes is 4 * palettesize)*\/$/;"	m	struct:LodePNGColorMode	typeref:typename:size_t
part_type	glm/gtx/dual_quaternion.hpp	/^		typedef qua<T, Q> part_type;$/;"	t	struct:glm::tdualquat	typeref:typename:qua<T,Q>
parts	glm/ext/scalar_ulp.inl	/^	} parts;$/;"	m	union:__anonb4cc412b020a	typeref:struct:__anonb4cc412b020a::__anonb4cc412b0308	file:
perlin	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(vec<2, T, Q> const& Position)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(vec<2, T, Q> const& Position, vec<2, T, Q> const& rep)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(vec<3, T, Q> const& Position)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(vec<3, T, Q> const& Position, vec<3, T, Q> const& rep)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(vec<4, T, Q> const& Position)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(vec<4, T, Q> const& Position, vec<4, T, Q> const& rep)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
permute	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER T permute(T const& x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
permute	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> permute(vec<2, T, Q> const& x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
permute	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> permute(vec<3, T, Q> const& x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
permute	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> permute(vec<4, T, Q> const& x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
perp	glm/gtx/perpendicular.inl	/^	GLM_FUNC_QUALIFIER genType perp(genType const& x, genType const& Normal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
perspective	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspective(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFov	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFov(T fov, T width, T height, T zNear, T z/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFovLH	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFovLH(T fov, T width, T height, T zNear, T/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFovLH_NO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFovLH_NO(T fov, T width, T height, T zNear/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFovLH_ZO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFovLH_ZO(T fov, T width, T height, T zNear/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFovNO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFovNO(T fov, T width, T height, T zNear, T/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFovRH	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFovRH(T fov, T width, T height, T zNear, T/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFovRH_NO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFovRH_NO(T fov, T width, T height, T zNear/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFovRH_ZO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFovRH_ZO(T fov, T width, T height, T zNear/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFovZO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFovZO(T fov, T width, T height, T zNear, T/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveLH	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveLH(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveLH_NO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveLH_NO(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveLH_ZO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveLH_ZO(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveNO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveNO(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveRH	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveRH(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveRH_NO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveRH_NO(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveRH_ZO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveRH_ZO(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveZO	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveZO(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
phys_defined	lodepng.h	/^  unsigned phys_defined; \/*if 0, there is no pHYs chunk and the values below are undefined, if /;"	m	struct:LodePNGInfo	typeref:typename:unsigned
phys_unit	lodepng.h	/^  unsigned phys_unit; \/*may be 0 (unknown unit) or 1 (metre)*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
phys_x	lodepng.h	/^  unsigned phys_x; \/*pixels per unit in x direction*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
phys_y	lodepng.h	/^  unsigned phys_y; \/*pixels per unit in y direction*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
pi	glm/ext/scalar_constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
pickMatrix	glm/ext/matrix_projection.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> pickMatrix(vec<2, T, Q> const& center, vec<2, T, Q> const& d/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
pitch	Camera.h	/^    float pitch;$/;"	m	class:Camera	typeref:typename:float
pitch	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER T pitch(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
polar	glm/gtx/polar_coordinates.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> polar$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
postProcessScanlines	lodepng.cpp	/^static unsigned postProcessScanlines(unsigned char* out, unsigned char* in,$/;"	f	typeref:typename:unsigned	file:
pow	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> pow(vec<L, T, Q> const& base, vec<L, T, Q> const& exponent)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
pow	glm/ext/quaternion_exponential.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> pow(qua<T, Q> const& x, T y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
pow	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER int pow(int x, uint y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
pow	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER uint pow(uint x, uint y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
pow2	glm/gtx/optimum_pow.inl	/^	GLM_FUNC_QUALIFIER genType pow2(genType const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
pow3	glm/gtx/optimum_pow.inl	/^	GLM_FUNC_QUALIFIER genType pow3(genType const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
pow4	glm/gtx/optimum_pow.inl	/^	GLM_FUNC_QUALIFIER genType pow4(genType const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
powerOfTwoAbove	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genType powerOfTwoAbove(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
powerOfTwoAbove	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> powerOfTwoAbove(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
powerOfTwoBelow	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genType powerOfTwoBelow(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
powerOfTwoBelow	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> powerOfTwoBelow(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
powerOfTwoNearest	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genType powerOfTwoNearest(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
powerOfTwoNearest	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> powerOfTwoNearest(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
preProcessScanlines	lodepng.cpp	/^static unsigned preProcessScanlines(unsigned char** out, size_t* outsize, const unsigned char* i/;"	f	typeref:typename:unsigned	file:
precision	glm/detail/qualifier.hpp	/^	typedef qualifier precision;$/;"	t	namespace:glm	typeref:typename:qualifier
precision	glm/gtx/io.hpp	/^			unsigned   precision;$/;"	m	class:glm::io::format_punct	typeref:typename:unsigned
precision	glm/gtx/io.hpp	/^		struct precision$/;"	s	namespace:glm::io
precision	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER precision::precision(unsigned a)$/;"	f	class:glm::io::precision	typeref:typename:GLM_FUNC_QUALIFIER
precision_	glm/gtx/io.hpp	/^			streamsize_type precision_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:streamsize_type
predefined_filters	lodepng.h	/^  const unsigned char* predefined_filters;$/;"	m	struct:LodePNGEncoderSettings	typeref:typename:const unsigned char *
prefix	glm/gtx/string_cast.inl	/^	struct prefix<bool>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<double>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<float>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<int16_t>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<int32_t>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<int64_t>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<int8_t>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<uint16_t>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<uint32_t>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<uint64_t>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<uint8_t>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix{};$/;"	s	namespace:glm::detail	file:
prev_float	glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER T prev_float(T x, int ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
prev_float	glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER double prev_float(double x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER double
prev_float	glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER float prev_float(float x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
prev_float	glm/ext/vector_ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> prev_float(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
prev_float	glm/ext/vector_ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> prev_float(vec<L, T, Q> const& x, int ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
prev_float	glm/ext/vector_ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> prev_float(vec<L, T, Q> const& x, vec<L, int, Q> const& ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
print_matrix_on	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& print_matrix_on(std::basic_ostream<CTy, CTr>& /;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
print_matrix_pair_on	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& print_matrix_pair_on(std::basic_ostream<CTy, C/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
print_vector_on	glm/gtx/io.inl	/^	print_vector_on(std::basic_ostream<CTy, CTr>& os, V const& a)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
processInput	Camera.cpp	/^void Camera::processInput(GLFWwindow *window) {$/;"	f	class:Camera	typeref:typename:void
proj	glm/gtx/projection.inl	/^	GLM_FUNC_QUALIFIER genType proj(genType const& x, genType const& Normal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
proj2D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> proj2D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
proj3D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> proj3D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
project	glm/ext/matrix_projection.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> project(vec<3, T, Q> const& obj, mat<4, 4, T, Q> const& model, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
projectNO	glm/ext/matrix_projection.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> projectNO(vec<3, T, Q> const& obj, mat<4, 4, T, Q> const& model/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
projectZO	glm/ext/matrix_projection.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> projectZO(vec<3, T, Q> const& obj, mat<4, 4, T, Q> const& model/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
q	glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::vec::__anon0c24fa7f010a::__anon0c24fa7f0408	typeref:typename:T
q	glm/detail/type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::vec::__anon0c24fa7f080a	typeref:typename:T
qr_decompose	glm/gtx/matrix_factorisation.inl	/^	GLM_FUNC_QUALIFIER void qr_decompose(mat<C, R, T, Q> const& in, mat<(C < R ? C : R), R, T, Q>& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
qua	glm/detail/glm.cpp	/^template struct qua<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
qua	glm/detail/glm.cpp	/^template struct qua<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
qua	glm/detail/glm.cpp	/^template struct qua<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
qua	glm/detail/glm.cpp	/^template struct qua<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
qua	glm/detail/glm.cpp	/^template struct qua<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
qua	glm/detail/glm.cpp	/^template struct qua<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
qua	glm/detail/type_quat.hpp	/^	struct qua$/;"	s	namespace:glm
quadraticEaseIn	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quadraticEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
quadraticEaseInOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quadraticEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
quadraticEaseOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quadraticEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
qualifier	glm/detail/qualifier.hpp	/^	enum qualifier$/;"	g	namespace:glm
quarter_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType quarter_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
quarticEaseIn	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quarticEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
quarticEaseInOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quarticEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
quarticEaseOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quarticEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
quat	glm/ext/quaternion_float.hpp	/^	typedef qua<float, defaultp>		quat;$/;"	t	namespace:glm	typeref:typename:qua<float,defaultp>
quat	glm/fwd.hpp	/^	typedef qua<float, defaultp>		quat;$/;"	t	namespace:glm	typeref:typename:qua<float,defaultp>
quatLookAt	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> quatLookAt(vec<3, T, Q> const& direction, vec<3, T, Q> const& up)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
quatLookAtLH	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> quatLookAtLH(vec<3, T, Q> const& direction, vec<3, T, Q> const& up/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
quatLookAtRH	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> quatLookAtRH(vec<3, T, Q> const& direction, vec<3, T, Q> const& up/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
quat_cast	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> quat_cast(mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
quat_cast	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> quat_cast(mat<4, 4, T, Q> const& m4)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
quat_identity	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> quat_identity()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
quinticEaseIn	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quinticEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
quinticEaseInOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quinticEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
quinticEaseOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quinticEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
qword	glm/gtx/raw_data.hpp	/^	typedef detail::uint64		qword;$/;"	t	namespace:glm	typeref:typename:detail::uint64
r	glm/detail/type_vec1.hpp	/^				T r;$/;"	m	union:glm::vec::__anon0beeb0fc010a	typeref:typename:T
r	glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::vec::__anon0beeb0fc020a	typeref:typename:T
r	glm/detail/type_vec2.hpp	/^				struct{ T r, g; };$/;"	m	struct:glm::vec::__anon0c00c97d010a::__anon0c00c97d0308	typeref:typename:T
r	glm/detail/type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::vec::__anon0c00c97d050a	typeref:typename:T
r	glm/detail/type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::vec::__anon0c12e1fe010a::__anon0c12e1fe0308	typeref:typename:T
r	glm/detail/type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::vec::__anon0c12e1fe050a	typeref:typename:T
r	glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::vec::__anon0c24fa7f010a::__anon0c24fa7f0308	typeref:typename:T
r	glm/detail/type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::vec::__anon0c24fa7f050a	typeref:typename:T
radialGradient	glm/gtx/gradient_paint.inl	/^	GLM_FUNC_QUALIFIER T radialGradient$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
radians	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType radians(genType degrees)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
radians	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> radians(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
readBitFromReversedStream	lodepng.cpp	/^static unsigned char readBitFromReversedStream(size_t* bitpointer, const unsigned char* bitstrea/;"	f	typeref:typename:unsigned char	file:
readBitFromStream	lodepng.cpp	/^static unsigned char readBitFromStream(size_t* bitpointer, const unsigned char* bitstream)$/;"	f	typeref:typename:unsigned char	file:
readBitsFromReversedStream	lodepng.cpp	/^static unsigned readBitsFromReversedStream(size_t* bitpointer, const unsigned char* bitstream, s/;"	f	typeref:typename:unsigned	file:
readBitsFromStream	lodepng.cpp	/^static unsigned readBitsFromStream(size_t* bitpointer, const unsigned char* bitstream, size_t nb/;"	f	typeref:typename:unsigned	file:
readChunk_PLTE	lodepng.cpp	/^static unsigned readChunk_PLTE(LodePNGColorMode* color, const unsigned char* data, size_t chunkL/;"	f	typeref:typename:unsigned	file:
readChunk_bKGD	lodepng.cpp	/^static unsigned readChunk_bKGD(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)$/;"	f	typeref:typename:unsigned	file:
readChunk_iTXt	lodepng.cpp	/^static unsigned readChunk_iTXt(LodePNGInfo* info, const LodePNGDecompressSettings* zlibsettings,$/;"	f	typeref:typename:unsigned	file:
readChunk_pHYs	lodepng.cpp	/^static unsigned readChunk_pHYs(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)$/;"	f	typeref:typename:unsigned	file:
readChunk_tEXt	lodepng.cpp	/^static unsigned readChunk_tEXt(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)$/;"	f	typeref:typename:unsigned	file:
readChunk_tIME	lodepng.cpp	/^static unsigned readChunk_tIME(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)$/;"	f	typeref:typename:unsigned	file:
readChunk_tRNS	lodepng.cpp	/^static unsigned readChunk_tRNS(LodePNGColorMode* color, const unsigned char* data, size_t chunkL/;"	f	typeref:typename:unsigned	file:
readChunk_zTXt	lodepng.cpp	/^static unsigned readChunk_zTXt(LodePNGInfo* info, const LodePNGDecompressSettings* zlibsettings,$/;"	f	typeref:typename:unsigned	file:
readFile	shaderprogram.cpp	/^char* ShaderProgram::readFile(const char* fileName) {$/;"	f	class:ShaderProgram	typeref:typename:char *
read_text_chunks	lodepng.h	/^  unsigned read_text_chunks; \/*if false but remember_unknown_chunks is true, they're stored in /;"	m	struct:LodePNGDecoderSettings	typeref:typename:unsigned
real	glm/gtx/dual_quaternion.hpp	/^		qua<T, Q> real, dual;$/;"	m	struct:glm::tdualquat	typeref:typename:qua<T,Q>
reflect	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType reflect(genType const& I, genType const& N)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
reflect	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> reflect(vec<L, T, Q> const& I, vec<L, T, Q> const& N)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
reflect2D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> reflect2D(mat<3, 3, T, Q> const& m, vec<3, T, Q> const& norm/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
reflect3D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> reflect3D(mat<4, 4, T, Q> const& m, vec<3, T, Q> const& norm/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
refract	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType refract(genType const& I, genType const& N, genType eta)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
refract	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> refract(vec<L, T, Q> const& I, vec<L, T, Q> const& N, T eta)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
remember_unknown_chunks	lodepng.h	/^  unsigned remember_unknown_chunks;$/;"	m	struct:LodePNGDecoderSettings	typeref:typename:unsigned
removePaddingBits	lodepng.cpp	/^static void removePaddingBits(unsigned char* out, const unsigned char* in,$/;"	f	typeref:typename:void	file:
repeat	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER genType repeat(genType const& Texcoord)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
repeat	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> repeat(vec<L, T, Q> const& Texcoord)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
return_type_scalar_multiplication	glm/gtx/scalar_multiplication.hpp	/^	using return_type_scalar_multiplication = typename std::enable_if<$/;"	t	namespace:glm	typeref:typename:std::enable_if<!std::is_same<T,float>::value && std::is_arithmetic<T>::value,Vec>::type
rgb2YCoCg	glm/gtx/color_space_YCoCg.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> rgb2YCoCg$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
rgb2YCoCgR	glm/gtx/color_space_YCoCg.inl	/^		static GLM_FUNC_QUALIFIER vec<3, T, Q> rgb2YCoCgR$/;"	f	class:glm::compute_YCoCgR	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>	file:
rgb2YCoCgR	glm/gtx/color_space_YCoCg.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> rgb2YCoCgR$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
rgbColor	glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> rgbColor(const vec<3, T, Q>& hsvColor)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
rgba16ToPixel	lodepng.cpp	/^static void rgba16ToPixel(unsigned char* out, size_t i,$/;"	f	typeref:typename:void	file:
rgba8ToPixel	lodepng.cpp	/^static unsigned rgba8ToPixel(unsigned char* out, size_t i,$/;"	f	typeref:typename:unsigned	file:
rightHanded	glm/gtx/handed_coordinate_space.inl	/^	GLM_FUNC_QUALIFIER bool rightHanded$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
roll	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER T roll(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
root_five	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType root_five()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
root_half_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType root_half_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
root_ln_four	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType root_ln_four()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
root_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType root_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
root_three	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType root_three()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
root_two	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType root_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
root_two_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType root_two_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
rotate	glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> rotate(mat<4, 4, T, Q> const& m, T angle, vec<3, T, Q> const/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
rotate	glm/ext/quaternion_transform.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> rotate(qua<T, Q> const& q, T const& angle, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
rotate	glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> rotate($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
rotate	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> rotate(qua<T, Q> const& q, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
rotate	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> rotate(qua<T, Q> const& q, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
rotate	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
rotate	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
rotate	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
rotate	glm/gtx/transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> rotate(T angle, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
rotateNormalizedAxis	glm/gtx/rotate_normalized_axis.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> rotateNormalizedAxis$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
rotateNormalizedAxis	glm/gtx/rotate_normalized_axis.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> rotateNormalizedAxis$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
rotateX	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> rotateX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
rotateX	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> rotateX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
rotateY	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> rotateY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
rotateY	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> rotateY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
rotateZ	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> rotateZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
rotateZ	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> rotateZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
rotate_slow	glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> rotate_slow(mat<4, 4, T, Q> const& m, T angle, vec<3, T, Q> /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
rotation	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> rotation(vec<3, T, Q> const& orig, vec<3, T, Q> const& dest)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
round	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER genType round(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
round	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> round(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
roundEven	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType roundEven(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
roundEven	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> roundEven(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
roundMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType roundMultiple(genType Source, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
roundMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> roundMultiple(vec<L, T, Q> const& Source, vec<L, T, Q> const& M/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
roundPowerOfTwo	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genIUType roundPowerOfTwo(genIUType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
roundPowerOfTwo	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> roundPowerOfTwo(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
row	glm/gtc/matrix_access.inl	/^	GLM_FUNC_QUALIFIER genType row$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
row	glm/gtc/matrix_access.inl	/^	GLM_FUNC_QUALIFIER typename genType::row_type row$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename genType::row_type
rowMajor2	glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> rowMajor2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
rowMajor2	glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> rowMajor2($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
rowMajor3	glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> rowMajor3($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
rowMajor4	glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> rowMajor4($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
row_major	glm/gtx/io.hpp	/^		enum order_type { column_major, row_major};$/;"	e	enum:glm::io::order_type
row_type	glm/detail/type_mat2x2.hpp	/^		typedef vec<2, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<2,T,Q>
row_type	glm/detail/type_mat2x3.hpp	/^		typedef vec<2, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<2,T,Q>
row_type	glm/detail/type_mat2x4.hpp	/^		typedef vec<2, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<2,T,Q>
row_type	glm/detail/type_mat3x2.hpp	/^		typedef vec<3, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<3,T,Q>
row_type	glm/detail/type_mat3x3.hpp	/^		typedef vec<3, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<3,T,Q>
row_type	glm/detail/type_mat3x4.hpp	/^		typedef vec<3, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<3,T,Q>
row_type	glm/detail/type_mat4x2.hpp	/^		typedef vec<4, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<4,T,Q>
row_type	glm/detail/type_mat4x3.hpp	/^		typedef vec<4, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<4,T,Q>
row_type	glm/detail/type_mat4x4.hpp	/^		typedef vec<4, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<4,T,Q>
rows	glm/gtx/type_trait.hpp	/^		static length_t const rows = 0;$/;"	m	struct:glm::type	typeref:typename:length_t const
rows	glm/gtx/type_trait.hpp	/^		static length_t const rows = R;$/;"	v	typeref:typename:length_t const
rows	glm/gtx/type_trait.inl	/^	length_t const type<T>::rows;$/;"	m	class:glm::type<T>	typeref:typename:length_t const
rows	glm/gtx/type_trait.inl	/^	length_t const type<mat<C, R, T, Q> >::rows;$/;"	m	class:glm::type<mat<C, R, T, Q> >	typeref:typename:length_t const
rq_decompose	glm/gtx/matrix_factorisation.inl	/^	GLM_FUNC_QUALIFIER void rq_decompose(mat<C, R, T, Q> const& in, mat<(C < R ? C : R), R, T, Q>& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
s	glm/detail/type_vec1.hpp	/^				T s;$/;"	m	union:glm::vec::__anon0beeb0fc010a	typeref:typename:T
s	glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::vec::__anon0beeb0fc020a	typeref:typename:T
s	glm/detail/type_vec2.hpp	/^				struct{ T s, t; };$/;"	m	struct:glm::vec::__anon0c00c97d010a::__anon0c00c97d0408	typeref:typename:T
s	glm/detail/type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::vec::__anon0c00c97d050a	typeref:typename:T
s	glm/detail/type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::vec::__anon0c12e1fe010a::__anon0c12e1fe0408	typeref:typename:T
s	glm/detail/type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::vec::__anon0c12e1fe050a	typeref:typename:T
s	glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::vec::__anon0c24fa7f010a::__anon0c24fa7f0408	typeref:typename:T
s	glm/detail/type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::vec::__anon0c24fa7f050a	typeref:typename:T
saturate	glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER T saturate(T x){return clamp(x, T(0), T(1)/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
saturate	glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<2, T, Q> saturate(const vec<2, T, Q>& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
saturate	glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<3, T, Q> saturate(const vec<3, T, Q>& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
saturate	glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<4, T, Q> saturate(const vec<4, T, Q>& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
saturation	glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> saturation(T const s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
saturation	glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> saturation(const T s, const vec<3, T, Q>& color)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
saturation	glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> saturation(const T s, const vec<4, T, Q>& color)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
save_file	lodepng.cpp	/^unsigned save_file(const std::vector<unsigned char>& buffer, const std::string& filename)$/;"	f	namespace:lodepng	typeref:typename:unsigned
scale	glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> scale(mat<4, 4, T, Q> const& m, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
scale	glm/gtx/matrix_decompose.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> scale(vec<3, T, Q> const& v, T desiredLength)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
scale	glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> scale($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
scale	glm/gtx/transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> scale(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
scaleBias	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> scaleBias(T scale, T bias)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
scaleBias	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> scaleBias(mat<4, 4, T, Q> const& m, T scale, T bias)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
scale_slow	glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> scale_slow(mat<4, 4, T, Q> const& m, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
searchCodeIndex	lodepng.cpp	/^static size_t searchCodeIndex(const unsigned* array, size_t array_size, size_t value)$/;"	f	typeref:typename:size_t	file:
sec	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType sec(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
sec	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> sec(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
sech	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType sech(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
sech	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> sech(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
second	lodepng.h	/^  unsigned second;  \/*0-60 (to allow for leap seconds)*\/$/;"	m	struct:LodePNGTime	typeref:typename:unsigned
separator	glm/gtx/io.hpp	/^			char_type  separator;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
setBitOfReversedStream	lodepng.cpp	/^static void setBitOfReversedStream(size_t* bitpointer, unsigned char* bitstream, unsigned char b/;"	f	typeref:typename:void	file:
setBitOfReversedStream0	lodepng.cpp	/^static void setBitOfReversedStream0(size_t* bitpointer, unsigned char* bitstream, unsigned char /;"	f	typeref:typename:void	file:
shaderProgram	shaderprogram.h	/^	GLuint shaderProgram; \/\/Shader program handle$/;"	m	class:ShaderProgram	typeref:typename:GLuint
shearX	glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> shearX($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
shearX2D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> shearX2D(mat<3, 3, T, Q> const& m, T s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
shearX3D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> shearX3D(mat<4, 4, T, Q> const& m, T s, T t)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
shearY	glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> shearY($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
shearY2D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> shearY2D(mat<3, 3, T, Q> const& m, T s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
shearY3D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> shearY3D(mat<4, 4, T, Q> const& m, T s, T t)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
shearZ3D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> shearZ3D(mat<4, 4, T, Q> const& m, T s, T t)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
shortMix	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> shortMix(qua<T, Q> const& x, qua<T, Q> const& y, T const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
sign	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genFIType sign(genFIType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genFIType
sign	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> sign(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
sign16	glm/gtc/bitfield.inl	/^		union sign16$/;"	u	function:glm::bitfieldInterleave	file:
sign32	glm/gtc/bitfield.inl	/^		union sign32$/;"	u	function:glm::bitfieldInterleave	file:
sign64	glm/gtc/bitfield.inl	/^		union sign64$/;"	u	function:glm::bitfieldInterleave	file:
sign8	glm/gtc/bitfield.inl	/^		union sign8$/;"	u	function:glm::bitfieldInterleave	file:
simplex	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T simplex(glm::vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
simplex	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T simplex(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
simplex	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T simplex(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
sin	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> sin(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
sineEaseIn	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType sineEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
sineEaseInOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType sineEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
sineEaseOut	glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType sineEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
sinh	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> sinh(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
sint	glm/gtx/integer.hpp	/^	typedef signed int					sint;$/;"	t	namespace:glm	typeref:typename:signed int
size	lodepng.cpp	/^  size_t size; \/*size in number of unsigned longs*\/$/;"	m	struct:uivector	typeref:typename:size_t	file:
size	lodepng.cpp	/^  size_t size; \/*used size*\/$/;"	m	struct:ucvector	typeref:typename:size_t	file:
size1	glm/gtx/std_based_type.hpp	/^	typedef vec<1, std::size_t, defaultp>		size1;$/;"	t	namespace:glm	typeref:typename:vec<1,std::size_t,defaultp>
size1_t	glm/gtx/std_based_type.hpp	/^	typedef vec<1, std::size_t, defaultp>		size1_t;$/;"	t	namespace:glm	typeref:typename:vec<1,std::size_t,defaultp>
size2	glm/gtx/std_based_type.hpp	/^	typedef vec<2, std::size_t, defaultp>		size2;$/;"	t	namespace:glm	typeref:typename:vec<2,std::size_t,defaultp>
size2_t	glm/gtx/std_based_type.hpp	/^	typedef vec<2, std::size_t, defaultp>		size2_t;$/;"	t	namespace:glm	typeref:typename:vec<2,std::size_t,defaultp>
size3	glm/gtx/std_based_type.hpp	/^	typedef vec<3, std::size_t, defaultp>		size3;$/;"	t	namespace:glm	typeref:typename:vec<3,std::size_t,defaultp>
size3_t	glm/gtx/std_based_type.hpp	/^	typedef vec<3, std::size_t, defaultp>		size3_t;$/;"	t	namespace:glm	typeref:typename:vec<3,std::size_t,defaultp>
size4	glm/gtx/std_based_type.hpp	/^	typedef vec<4, std::size_t, defaultp>		size4;$/;"	t	namespace:glm	typeref:typename:vec<4,std::size_t,defaultp>
size4_t	glm/gtx/std_based_type.hpp	/^	typedef vec<4, std::size_t, defaultp>		size4_t;$/;"	t	namespace:glm	typeref:typename:vec<4,std::size_t,defaultp>
slerp	glm/ext/quaternion_common.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> slerp(qua<T, Q> const& x, qua<T, Q> const& y, T a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
slerp	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> slerp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
smoothstep	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType smoothstep(genType edge0, genType edge1, genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
smoothstep	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> smoothstep(T edge0, T edge1, vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
smoothstep	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> smoothstep(vec<L, T, Q> const& edge0, vec<L, T, Q> const& edge1/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
spConstant	shaderprogram.cpp	/^ShaderProgram *spConstant;$/;"	v	typeref:typename:ShaderProgram *
spLambert	shaderprogram.cpp	/^ShaderProgram *spLambert;$/;"	v	typeref:typename:ShaderProgram *
space	glm/gtx/io.hpp	/^			char_type  space;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
sphere	sphere.cpp	/^	Sphere sphere;$/;"	v	namespace:Models	typeref:typename:Sphere
sphericalRand	glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, defaultp> sphericalRand(T Radius)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,defaultp>
sqrt	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> sqrt(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
sqrt	glm/ext/quaternion_exponential.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> sqrt(qua<T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
sqrt	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER int sqrt(int x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
sqrt	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER uint sqrt(uint x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
squad	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> squad$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
state_	glm/gtx/io.hpp	/^			state_type&     state_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:state_type &
state_saver	glm/gtx/io.hpp	/^		typedef basic_state_saver<char>     state_saver;$/;"	t	namespace:glm::io	typeref:typename:basic_state_saver<char>
state_type	glm/gtx/io.hpp	/^			typedef ::std::basic_ios<CTy,CTr>      state_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:::std::basic_ios<CTy,CTr>
std	glm/gtx/hash.hpp	/^namespace std$/;"	n
std	glm/gtx/hash.inl	/^namespace std$/;"	n	file:
step	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType step(genType edge, genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
step	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> step(T edge, vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
step	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> step(vec<L, T, Q> const& edge, vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
storage	glm/detail/qualifier.hpp	/^		struct storage<3, T, true>$/;"	s	namespace:glm::detail
storage	glm/detail/qualifier.hpp	/^		struct storage<L, T, true>$/;"	s	namespace:glm::detail
storage	glm/detail/qualifier.hpp	/^	struct storage$/;"	s	namespace:glm::detail
storage	glm/detail/qualifier.hpp	/^	struct storage<2, detail::int64, true>$/;"	s	namespace:glm::detail
storage	glm/detail/qualifier.hpp	/^	struct storage<2, detail::uint64, true>$/;"	s	namespace:glm::detail
storage	glm/detail/qualifier.hpp	/^	struct storage<2, double, true>$/;"	s	namespace:glm::detail
storage	glm/detail/qualifier.hpp	/^	struct storage<4, detail::int64, true>$/;"	s	namespace:glm::detail
storage	glm/detail/qualifier.hpp	/^	struct storage<4, detail::uint64, true>$/;"	s	namespace:glm::detail
storage	glm/detail/qualifier.hpp	/^	struct storage<4, double, true>$/;"	s	namespace:glm::detail
storage	glm/detail/qualifier.hpp	/^	struct storage<4, float, true>$/;"	s	namespace:glm::detail
storage	glm/detail/qualifier.hpp	/^	struct storage<4, int, true>$/;"	s	namespace:glm::detail
storage	glm/detail/qualifier.hpp	/^	struct storage<4, unsigned int, true>$/;"	s	namespace:glm::detail
streamsize_type	glm/gtx/io.hpp	/^			typedef ::std::streamsize              streamsize_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:::std::streamsize
string_cleanup	lodepng.cpp	/^static void string_cleanup(char** out)$/;"	f	typeref:typename:void	file:
string_init	lodepng.cpp	/^static void string_init(char** out)$/;"	f	typeref:typename:void	file:
string_resize	lodepng.cpp	/^static unsigned string_resize(char** out, size_t size)$/;"	f	typeref:typename:unsigned	file:
string_set	lodepng.cpp	/^static void string_set(char** out, const char* in)$/;"	f	typeref:typename:void	file:
t	glm/detail/type_vec2.hpp	/^				struct{ T s, t; };$/;"	m	struct:glm::vec::__anon0c00c97d010a::__anon0c00c97d0408	typeref:typename:T
t	glm/detail/type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::vec::__anon0c00c97d060a	typeref:typename:T
t	glm/detail/type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::vec::__anon0c12e1fe010a::__anon0c12e1fe0408	typeref:typename:T
t	glm/detail/type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::vec::__anon0c12e1fe060a	typeref:typename:T
t	glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::vec::__anon0c24fa7f010a::__anon0c24fa7f0408	typeref:typename:T
t	glm/detail/type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::vec::__anon0c24fa7f060a	typeref:typename:T
tail	lodepng.cpp	/^  struct BPMNode* tail; \/*the next nodes in this chain (null if last)*\/$/;"	m	struct:BPMNode	typeref:struct:BPMNode *	file:
tan	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> tan(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
tanh	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> tanh(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
taylorCos	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> taylorCos(vec<L, T, Q> const& x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
taylorInvSqrt	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER T taylorInvSqrt(T const& r)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
taylorInvSqrt	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> taylorInvSqrt(vec<2, T, Q> const& r)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
taylorInvSqrt	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> taylorInvSqrt(vec<3, T, Q> const& r)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
taylorInvSqrt	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> taylorInvSqrt(vec<4, T, Q> const& r)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
tdualquat	glm/detail/glm.cpp	/^template struct tdualquat<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tdualquat	glm/detail/glm.cpp	/^template struct tdualquat<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tdualquat	glm/detail/glm.cpp	/^template struct tdualquat<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tdualquat	glm/detail/glm.cpp	/^template struct tdualquat<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tdualquat	glm/detail/glm.cpp	/^template struct tdualquat<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tdualquat	glm/detail/glm.cpp	/^template struct tdualquat<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tdualquat	glm/gtx/dual_quaternion.hpp	/^	struct tdualquat$/;"	s	namespace:glm
tdualquat	glm/gtx/dual_quaternion.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat()$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
tdualquat	glm/gtx/dual_quaternion.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat(tdualquat<T, Q> const& d)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat(qua<T, Q> const& q, vec<3, T, Q> co/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat(qua<T, Q> const& r)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat(qua<T, Q> const& r, qua<T, Q> const/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat(tdualquat<T, P> const& d)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat(tdualquat<U, P> const& q)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
teapot	teapot.cpp	/^	Teapot teapot;$/;"	v	namespace:Models	typeref:typename:Teapot
test	glm/detail/setup.hpp	/^		enum test {value = 0};$/;"	g	struct:glm::detail::is_int
test	glm/detail/setup.hpp	/^		enum test {value = ~0};$/;"	g	struct:glm::detail::is_int
test	glm/ext/scalar_int_sized.hpp	/^		enum test {value = ~0};$/;"	g	struct:glm::detail::is_int
test	glm/ext/scalar_uint_sized.hpp	/^		enum test {value = ~0};$/;"	g	struct:glm::detail::is_int
texCoords	cube.cpp	/^			float texCoords[]={$/;"	v	namespace:Models::CubeInternal	typeref:typename:float[]
texCoords	model.h	/^			float *texCoords;$/;"	m	class:Models::Model	typeref:typename:float *
texCoords	teapot.cpp	/^		float texCoords[]={$/;"	v	namespace:Models::TeapotInternal	typeref:typename:float[]
texCoords	walls.cpp	/^        float texCoords[] = {$/;"	v	namespace:Models::WallsInternal	typeref:typename:float[]
text_compression	lodepng.h	/^  unsigned text_compression;$/;"	m	struct:LodePNGEncoderSettings	typeref:typename:unsigned
text_keys	lodepng.h	/^  char** text_keys; \/*the keyword of a text chunk (e.g. "Comment")*\/$/;"	m	struct:LodePNGInfo	typeref:typename:char **
text_num	lodepng.h	/^  size_t text_num; \/*the amount of texts in these char** buffers (there may be more texts in it/;"	m	struct:LodePNGInfo	typeref:typename:size_t
text_strings	lodepng.h	/^  char** text_strings; \/*the actual text*\/$/;"	m	struct:LodePNGInfo	typeref:typename:char **
third	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType third()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
three_over_two_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType three_over_two_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
time	lodepng.h	/^  LodePNGTime time;$/;"	m	struct:LodePNGInfo	typeref:typename:LodePNGTime
time_defined	lodepng.h	/^  unsigned time_defined; \/*set to 1 to make the encoder generate a tIME chunk*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
tmat2x2	glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat2x2 = mat<2, 2, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<2,2,T,Q>
tmat2x3	glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat2x3 = mat<2, 3, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<2,3,T,Q>
tmat2x4	glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat2x4 = mat<2, 4, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<2,4,T,Q>
tmat3x2	glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat3x2 = mat<3, 2, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<3,2,T,Q>
tmat3x3	glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat3x3 = mat<3, 3, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<3,3,T,Q>
tmat3x4	glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat3x4 = mat<3, 4, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<3,4,T,Q>
tmat4x2	glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat4x2 = mat<4, 2, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<4,2,T,Q>
tmat4x3	glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat4x3 = mat<4, 3, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<4,3,T,Q>
tmat4x4	glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat4x4 = mat<4, 4, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<4,4,T,Q>
toFloat16	glm/detail/type_half.inl	/^	GLM_FUNC_QUALIFIER hdata toFloat16(float const& f)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER hdata
toFloat32	glm/detail/type_half.inl	/^	GLM_FUNC_QUALIFIER float toFloat32(hdata value)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
toMat3	glm/gtx/quaternion.hpp	/^	GLM_FUNC_DECL mat<3, 3, T, Q> toMat3($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL mat<3,3,T,Q>
toMat4	glm/gtx/quaternion.hpp	/^	GLM_FUNC_DECL mat<4, 4, T, Q> toMat4($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL mat<4,4,T,Q>
toQuat	glm/gtx/quaternion.hpp	/^	GLM_FUNC_DECL qua<T, Q> toQuat($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL qua<T,Q>
torus	torus.cpp	/^	Torus torus;$/;"	v	namespace:Models	typeref:typename:Torus
tquat	glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tquat = qua<T, Q>;$/;"	t	namespace:glm	typeref:typename:qua<T,Q>
translate	glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> translate(mat<4, 4, T, Q> const& m, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
translate	glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> translate($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
translate	glm/gtx/transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> translate(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
transpose	glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER typename mat<C, R, T, Q>::transpose_type transpose(mat<C, R, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<C,R,T,Q>::transpose_type
transpose_type	glm/detail/type_mat2x2.hpp	/^		typedef mat<2, 2, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<2,2,T,Q>
transpose_type	glm/detail/type_mat2x3.hpp	/^		typedef mat<3, 2, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<3,2,T,Q>
transpose_type	glm/detail/type_mat2x4.hpp	/^		typedef mat<4, 2, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<4,2,T,Q>
transpose_type	glm/detail/type_mat3x2.hpp	/^		typedef mat<2, 3, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<2,3,T,Q>
transpose_type	glm/detail/type_mat3x3.hpp	/^		typedef mat<3, 3, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<3,3,T,Q>
transpose_type	glm/detail/type_mat3x4.hpp	/^		typedef mat<4, 3, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<4,3,T,Q>
transpose_type	glm/detail/type_mat4x2.hpp	/^		typedef mat<2, 4, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<2,4,T,Q>
transpose_type	glm/detail/type_mat4x3.hpp	/^		typedef mat<3, 4, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<3,4,T,Q>
transpose_type	glm/detail/type_mat4x4.hpp	/^		typedef mat<4, 4, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<4,4,T,Q>
tree1d	lodepng.cpp	/^  unsigned* tree1d;$/;"	m	struct:HuffmanTree	typeref:typename:unsigned *	file:
tree2d	lodepng.cpp	/^  unsigned* tree2d;$/;"	m	struct:HuffmanTree	typeref:typename:unsigned *	file:
triangleNormal	glm/gtx/normal.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> triangleNormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
trunc	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER genType trunc(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
trunc	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> trunc(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
tvec1	glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tvec1 = vec<1, T, Q>;$/;"	t	namespace:glm	typeref:typename:vec<1,T,Q>
tvec2	glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tvec2 = vec<2, T, Q>;$/;"	t	namespace:glm	typeref:typename:vec<2,T,Q>
tvec3	glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tvec3 = vec<3, T, Q>;$/;"	t	namespace:glm	typeref:typename:vec<3,T,Q>
tvec4	glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tvec4 = vec<4, T, Q>;$/;"	t	namespace:glm	typeref:typename:vec<4,T,Q>
tweakedInfinitePerspective	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> tweakedInfinitePerspective(T fovy, T aspect, T zNear)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
tweakedInfinitePerspective	glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> tweakedInfinitePerspective(T fovy, T aspect, T zNear,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
two_over_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType two_over_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
two_over_root_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType two_over_root_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
two_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType two_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
two_thirds	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType two_thirds()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
type	glm/detail/qualifier.hpp	/^			typedef struct alignas(4 * sizeof(T)) type {$/;"	s	struct:glm::detail::storage
type	glm/detail/qualifier.hpp	/^			typedef struct alignas(L * sizeof(T)) type {$/;"	s	struct:glm::detail::storage
type	glm/detail/qualifier.hpp	/^			} type;$/;"	t	struct:glm::detail::storage	typeref:struct:glm::detail::storage::type
type	glm/detail/qualifier.hpp	/^		typedef glm_f32vec4 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_f32vec4
type	glm/detail/qualifier.hpp	/^		typedef glm_f64vec2 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_f64vec2
type	glm/detail/qualifier.hpp	/^		typedef glm_f64vec4 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_f64vec4
type	glm/detail/qualifier.hpp	/^		typedef glm_i32vec4 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_i32vec4
type	glm/detail/qualifier.hpp	/^		typedef glm_i64vec2 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_i64vec2
type	glm/detail/qualifier.hpp	/^		typedef glm_i64vec4 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_i64vec4
type	glm/detail/qualifier.hpp	/^		typedef glm_u32vec4 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_u32vec4
type	glm/detail/qualifier.hpp	/^		typedef glm_u64vec2 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_u64vec2
type	glm/detail/qualifier.hpp	/^		typedef glm_u64vec4 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_u64vec4
type	glm/detail/qualifier.hpp	/^		typedef struct type {$/;"	s	struct:glm::detail::storage
type	glm/detail/qualifier.hpp	/^		} type;$/;"	t	struct:glm::detail::storage	typeref:struct:glm::detail::storage::type
type	glm/detail/setup.hpp	/^		typedef uint64 type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:uint64
type	glm/detail/setup.hpp	/^		typedef unsigned char type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned char
type	glm/detail/setup.hpp	/^		typedef unsigned int type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned int
type	glm/detail/setup.hpp	/^		typedef unsigned long type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned long
type	glm/detail/setup.hpp	/^		typedef unsigned short type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned short
type	glm/detail/type_mat2x2.hpp	/^		typedef mat<2, 2, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<2,2,T,Q>
type	glm/detail/type_mat2x3.hpp	/^		typedef mat<2, 3, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<2,3,T,Q>
type	glm/detail/type_mat2x4.hpp	/^		typedef mat<2, 4, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<2,4,T,Q>
type	glm/detail/type_mat3x2.hpp	/^		typedef mat<3, 2, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<3,2,T,Q>
type	glm/detail/type_mat3x3.hpp	/^		typedef mat<3, 3, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<3,3,T,Q>
type	glm/detail/type_mat3x4.hpp	/^		typedef mat<3, 4, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<3,4,T,Q>
type	glm/detail/type_mat4x2.hpp	/^		typedef mat<4, 2, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<4,2,T,Q>
type	glm/detail/type_mat4x3.hpp	/^		typedef mat<4, 3, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<4,3,T,Q>
type	glm/detail/type_mat4x4.hpp	/^		typedef mat<4, 4, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<4,4,T,Q>
type	glm/detail/type_quat.hpp	/^		typedef qua<T, Q> type;$/;"	t	struct:glm::qua	typeref:typename:qua<T,Q>
type	glm/detail/type_vec1.hpp	/^		typedef vec<1, T, Q> type;$/;"	t	struct:glm::vec	typeref:typename:vec<1,T,Q>
type	glm/detail/type_vec2.hpp	/^		typedef vec<2, T, Q> type;$/;"	t	struct:glm::vec	typeref:typename:vec<2,T,Q>
type	glm/detail/type_vec3.hpp	/^		typedef vec<3, T, Q> type;$/;"	t	struct:glm::vec	typeref:typename:vec<3,T,Q>
type	glm/detail/type_vec4.hpp	/^		typedef vec<4, T, Q> type;$/;"	t	struct:glm::vec	typeref:typename:vec<4,T,Q>
type	glm/gtx/type_trait.hpp	/^	struct type$/;"	s	namespace:glm
type	glm/matrix.hpp	/^		typedef mat<2, 2, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<2,2,T,Q>
type	glm/matrix.hpp	/^		typedef mat<2, 3, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<2,3,T,Q>
type	glm/matrix.hpp	/^		typedef mat<2, 4, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<2,4,T,Q>
type	glm/matrix.hpp	/^		typedef mat<3, 2, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<3,2,T,Q>
type	glm/matrix.hpp	/^		typedef mat<3, 3, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<3,3,T,Q>
type	glm/matrix.hpp	/^		typedef mat<3, 4, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<3,4,T,Q>
type	glm/matrix.hpp	/^		typedef mat<4, 2, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<4,2,T,Q>
type	glm/matrix.hpp	/^		typedef mat<4, 3, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<4,3,T,Q>
type	glm/matrix.hpp	/^		typedef mat<4, 4, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<4,4,T,Q>
u	glm/gtc/bitfield.inl	/^			uint16 u;$/;"	m	union:glm::bitfieldInterleave::sign16	typeref:typename:uint16	file:
u	glm/gtc/bitfield.inl	/^			uint32 u;$/;"	m	union:glm::bitfieldInterleave::sign16	typeref:typename:uint32	file:
u	glm/gtc/bitfield.inl	/^			uint32 u;$/;"	m	union:glm::bitfieldInterleave::sign32	typeref:typename:uint32	file:
u	glm/gtc/bitfield.inl	/^			uint64 u;$/;"	m	union:glm::bitfieldInterleave::sign64	typeref:typename:uint64	file:
u	glm/gtc/bitfield.inl	/^			uint8 u;$/;"	m	union:glm::bitfieldInterleave::sign8	typeref:typename:uint8	file:
u	shaderprogram.cpp	/^GLuint ShaderProgram::u(const char* variableName) {$/;"	f	class:ShaderProgram	typeref:typename:GLuint
u10u10u10u2	glm/gtc/packing.inl	/^	union u10u10u10u2$/;"	u	namespace:glm::detail	file:
u16	glm/fwd.hpp	/^	typedef uint16					u16;$/;"	t	namespace:glm	typeref:typename:uint16
u16	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
u16vec1	glm/fwd.hpp	/^	typedef vec<1, u16, defaultp>	u16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u16,defaultp>
u16vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, u16, defaultp> u16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u16,defaultp>
u16vec1	glm/gtx/number_precision.hpp	/^	typedef u16			u16vec1;    \/\/!< \\brief 16bit unsigned integer scalar. (from GLM_GTX_number_pr/;"	t	namespace:glm::gtx	typeref:typename:u16
u16vec2	glm/fwd.hpp	/^	typedef vec<2, u16, defaultp>	u16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u16,defaultp>
u16vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, u16, defaultp> u16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u16,defaultp>
u16vec3	glm/fwd.hpp	/^	typedef vec<3, u16, defaultp>	u16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u16,defaultp>
u16vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, u16, defaultp> u16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u16,defaultp>
u16vec4	glm/fwd.hpp	/^	typedef vec<4, u16, defaultp>	u16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u16,defaultp>
u16vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, u16, defaultp> u16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u16,defaultp>
u32	glm/fwd.hpp	/^	typedef uint32					u32;$/;"	t	namespace:glm	typeref:typename:uint32
u32	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
u32vec1	glm/fwd.hpp	/^	typedef vec<1, u32, defaultp>	u32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,defaultp>
u32vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, u32, defaultp> u32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,defaultp>
u32vec1	glm/gtx/number_precision.hpp	/^	typedef u32			u32vec1;    \/\/!< \\brief 32bit unsigned integer scalar. (from GLM_GTX_number_pr/;"	t	namespace:glm::gtx	typeref:typename:u32
u32vec2	glm/fwd.hpp	/^	typedef vec<2, u32, defaultp>	u32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,defaultp>
u32vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, u32, defaultp> u32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,defaultp>
u32vec3	glm/fwd.hpp	/^	typedef vec<3, u32, defaultp>	u32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,defaultp>
u32vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, u32, defaultp> u32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,defaultp>
u32vec4	glm/fwd.hpp	/^	typedef vec<4, u32, defaultp>	u32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,defaultp>
u32vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, u32, defaultp> u32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,defaultp>
u3u3u2	glm/gtc/packing.inl	/^	union u3u3u2$/;"	u	namespace:glm::detail	file:
u4u4	glm/gtc/packing.inl	/^	union u4u4$/;"	u	namespace:glm::detail	file:
u4u4u4u4	glm/gtc/packing.inl	/^	union u4u4u4u4$/;"	u	namespace:glm::detail	file:
u5u5u5u1	glm/gtc/packing.inl	/^	union u5u5u5u1$/;"	u	namespace:glm::detail	file:
u5u6u5	glm/gtc/packing.inl	/^	union u5u6u5$/;"	u	namespace:glm::detail	file:
u64	glm/fwd.hpp	/^	typedef uint64					u64;$/;"	t	namespace:glm	typeref:typename:uint64
u64	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
u64vec1	glm/fwd.hpp	/^	typedef vec<1, u64, defaultp>	u64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u64,defaultp>
u64vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, u64, defaultp> u64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u64,defaultp>
u64vec1	glm/gtx/number_precision.hpp	/^	typedef u64			u64vec1;    \/\/!< \\brief 64bit unsigned integer scalar. (from GLM_GTX_number_pr/;"	t	namespace:glm::gtx	typeref:typename:u64
u64vec2	glm/fwd.hpp	/^	typedef vec<2, u64, defaultp>	u64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u64,defaultp>
u64vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, u64, defaultp> u64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u64,defaultp>
u64vec3	glm/fwd.hpp	/^	typedef vec<3, u64, defaultp>	u64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u64,defaultp>
u64vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, u64, defaultp> u64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u64,defaultp>
u64vec4	glm/fwd.hpp	/^	typedef vec<4, u64, defaultp>	u64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u64,defaultp>
u64vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, u64, defaultp> u64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u64,defaultp>
u8	glm/fwd.hpp	/^	typedef uint8					u8;$/;"	t	namespace:glm	typeref:typename:uint8
u8	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
u8vec1	glm/fwd.hpp	/^	typedef vec<1, u8, defaultp>	u8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u8,defaultp>
u8vec1	glm/gtc/type_precision.hpp	/^	typedef vec<1, u8, defaultp> u8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u8,defaultp>
u8vec1	glm/gtx/number_precision.hpp	/^	typedef u8			u8vec1;		\/\/!< \\brief 8bit unsigned integer scalar. (from GLM_GTX_number_precisi/;"	t	namespace:glm::gtx	typeref:typename:u8
u8vec2	glm/fwd.hpp	/^	typedef vec<2, u8, defaultp>	u8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u8,defaultp>
u8vec2	glm/gtc/type_precision.hpp	/^	typedef vec<2, u8, defaultp> u8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u8,defaultp>
u8vec3	glm/fwd.hpp	/^	typedef vec<3, u8, defaultp>	u8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u8,defaultp>
u8vec3	glm/gtc/type_precision.hpp	/^	typedef vec<3, u8, defaultp> u8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u8,defaultp>
u8vec4	glm/fwd.hpp	/^	typedef vec<4, u8, defaultp>	u8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u8,defaultp>
u8vec4	glm/gtc/type_precision.hpp	/^	typedef vec<4, u8, defaultp> u8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u8,defaultp>
u9u9u9e5	glm/gtc/packing.inl	/^	union u9u9u9e5$/;"	u	namespace:glm::detail	file:
uaddCarry	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER uint uaddCarry(uint const& x, uint const& y, uint & Carry)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
uaddCarry	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, uint, Q> uaddCarry(vec<L, uint, Q> const& x, vec<L, uint, Q> const& y/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint,Q>
ucvector	lodepng.cpp	/^typedef struct ucvector$/;"	s	file:
ucvector	lodepng.cpp	/^} ucvector;$/;"	t	typeref:struct:ucvector	file:
ucvector_cleanup	lodepng.cpp	/^static void ucvector_cleanup(void* p)$/;"	f	typeref:typename:void	file:
ucvector_init	lodepng.cpp	/^static void ucvector_init(ucvector* p)$/;"	f	typeref:typename:void	file:
ucvector_init_buffer	lodepng.cpp	/^static void ucvector_init_buffer(ucvector* p, unsigned char* buffer, size_t size)$/;"	f	typeref:typename:void	file:
ucvector_push_back	lodepng.cpp	/^static unsigned ucvector_push_back(ucvector* p, unsigned char c)$/;"	f	typeref:typename:unsigned	file:
ucvector_reserve	lodepng.cpp	/^static unsigned ucvector_reserve(ucvector* p, size_t allocsize)$/;"	f	typeref:typename:unsigned	file:
ucvector_resize	lodepng.cpp	/^static unsigned ucvector_resize(ucvector* p, size_t size)$/;"	f	typeref:typename:unsigned	file:
uif32	glm/detail/type_half.inl	/^		GLM_FUNC_QUALIFIER uif32() :$/;"	f	union:glm::detail::uif32	typeref:typename:GLM_FUNC_QUALIFIER	file:
uif32	glm/detail/type_half.inl	/^		GLM_FUNC_QUALIFIER uif32(float f_) :$/;"	f	union:glm::detail::uif32	typeref:typename:GLM_FUNC_QUALIFIER	file:
uif32	glm/detail/type_half.inl	/^		GLM_FUNC_QUALIFIER uif32(unsigned int i_) :$/;"	f	union:glm::detail::uif32	typeref:typename:GLM_FUNC_QUALIFIER	file:
uif32	glm/detail/type_half.inl	/^	union uif32$/;"	u	namespace:glm::detail	file:
uint	glm/detail/setup.hpp	/^	typedef unsigned int	uint;$/;"	t	namespace:glm	typeref:typename:unsigned int
uint16	glm/ext/scalar_uint_sized.hpp	/^		typedef std::uint16_t		uint16;$/;"	t	namespace:glm::detail	typeref:typename:std::uint16_t
uint16	glm/ext/scalar_uint_sized.hpp	/^	typedef detail::uint16		uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
uint16	glm/fwd.hpp	/^	typedef std::uint16_t			uint16;$/;"	t	namespace:glm	typeref:typename:std::uint16_t
uint16_t	glm/fwd.hpp	/^	typedef uint16					uint16_t;$/;"	t	namespace:glm	typeref:typename:uint16
uint16_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
uint32	glm/ext/scalar_uint_sized.hpp	/^		typedef std::uint32_t		uint32;$/;"	t	namespace:glm::detail	typeref:typename:std::uint32_t
uint32	glm/ext/scalar_uint_sized.hpp	/^	typedef detail::uint32		uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
uint32	glm/fwd.hpp	/^	typedef std::uint32_t			uint32;$/;"	t	namespace:glm	typeref:typename:std::uint32_t
uint32_t	glm/fwd.hpp	/^	typedef uint32					uint32_t;$/;"	t	namespace:glm	typeref:typename:uint32
uint32_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
uint64	glm/detail/setup.hpp	/^		typedef std::uint64_t						uint64;$/;"	t	namespace:glm::detail	typeref:typename:std::uint64_t
uint64	glm/ext/scalar_uint_sized.hpp	/^	typedef detail::uint64		uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
uint64	glm/fwd.hpp	/^	typedef std::uint64_t			uint64;$/;"	t	namespace:glm	typeref:typename:std::uint64_t
uint64_t	glm/fwd.hpp	/^	typedef uint64					uint64_t;$/;"	t	namespace:glm	typeref:typename:uint64
uint64_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
uint8	glm/ext/scalar_uint_sized.hpp	/^		typedef std::uint8_t		uint8;$/;"	t	namespace:glm::detail	typeref:typename:std::uint8_t
uint8	glm/ext/scalar_uint_sized.hpp	/^	typedef detail::uint8		uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
uint8	glm/fwd.hpp	/^	typedef std::uint8_t			uint8;$/;"	t	namespace:glm	typeref:typename:std::uint8_t
uint8_t	glm/fwd.hpp	/^	typedef uint8					uint8_t;$/;"	t	namespace:glm	typeref:typename:uint8
uint8_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
uintBitsToFloat	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER float uintBitsToFloat(uint const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
uintBitsToFloat	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, float, Q> uintBitsToFloat(vec<L, uint, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,float,Q>
uivector	lodepng.cpp	/^typedef struct uivector$/;"	s	file:
uivector	lodepng.cpp	/^} uivector;$/;"	t	typeref:struct:uivector	file:
uivector_cleanup	lodepng.cpp	/^static void uivector_cleanup(void* p)$/;"	f	typeref:typename:void	file:
uivector_init	lodepng.cpp	/^static void uivector_init(uivector* p)$/;"	f	typeref:typename:void	file:
uivector_push_back	lodepng.cpp	/^static unsigned uivector_push_back(uivector* p, unsigned c)$/;"	f	typeref:typename:unsigned	file:
uivector_reserve	lodepng.cpp	/^static unsigned uivector_reserve(uivector* p, size_t allocsize)$/;"	f	typeref:typename:unsigned	file:
uivector_resize	lodepng.cpp	/^static unsigned uivector_resize(uivector* p, size_t size)$/;"	f	typeref:typename:unsigned	file:
uivector_resizev	lodepng.cpp	/^static unsigned uivector_resizev(uivector* p, size_t size, unsigned value)$/;"	f	typeref:typename:unsigned	file:
umat2	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat2								umat2;$/;"	t	namespace:glm	typeref:typename:highp_umat2
umat2	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat2								umat2;$/;"	t	namespace:glm	typeref:typename:lowp_umat2
umat2	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat2							umat2;$/;"	t	namespace:glm	typeref:typename:mediump_umat2
umat2x2	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat2x2							umat2x2;$/;"	t	namespace:glm	typeref:typename:highp_umat2x2
umat2x2	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat2x2							umat2x2;$/;"	t	namespace:glm	typeref:typename:lowp_umat2x2
umat2x2	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat2x2							umat2x2;$/;"	t	namespace:glm	typeref:typename:mediump_umat2x2
umat2x3	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat2x3							umat2x3;$/;"	t	namespace:glm	typeref:typename:highp_umat2x3
umat2x3	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat2x3							umat2x3;$/;"	t	namespace:glm	typeref:typename:lowp_umat2x3
umat2x3	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat2x3							umat2x3;$/;"	t	namespace:glm	typeref:typename:mediump_umat2x3
umat2x4	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat2x4							umat2x4;$/;"	t	namespace:glm	typeref:typename:highp_umat2x4
umat2x4	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat2x4							umat2x4;$/;"	t	namespace:glm	typeref:typename:lowp_umat2x4
umat2x4	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat2x4							umat2x4;$/;"	t	namespace:glm	typeref:typename:mediump_umat2x4
umat3	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat3								umat3;$/;"	t	namespace:glm	typeref:typename:highp_umat3
umat3	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat3								umat3;$/;"	t	namespace:glm	typeref:typename:lowp_umat3
umat3	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat3							umat3;$/;"	t	namespace:glm	typeref:typename:mediump_umat3
umat3x2	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat3x2							umat3x2;$/;"	t	namespace:glm	typeref:typename:highp_umat3x2
umat3x2	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat3x2							umat3x2;$/;"	t	namespace:glm	typeref:typename:lowp_umat3x2
umat3x2	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat3x2							umat3x2;$/;"	t	namespace:glm	typeref:typename:mediump_umat3x2
umat3x3	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat3x3							umat3x3;$/;"	t	namespace:glm	typeref:typename:highp_umat3x3
umat3x3	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat3x3							umat3x3;$/;"	t	namespace:glm	typeref:typename:lowp_umat3x3
umat3x3	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat3x3							umat3x3;$/;"	t	namespace:glm	typeref:typename:mediump_umat3x3
umat3x4	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat3x4							umat3x4;$/;"	t	namespace:glm	typeref:typename:highp_umat3x4
umat3x4	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat3x4							umat3x4;$/;"	t	namespace:glm	typeref:typename:lowp_umat3x4
umat3x4	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat3x4							umat3x4;$/;"	t	namespace:glm	typeref:typename:mediump_umat3x4
umat4	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat4								umat4;$/;"	t	namespace:glm	typeref:typename:highp_umat4
umat4	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat4								umat4;$/;"	t	namespace:glm	typeref:typename:lowp_umat4
umat4	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat4							umat4;$/;"	t	namespace:glm	typeref:typename:mediump_umat4
umat4x2	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat4x2							umat4x2;$/;"	t	namespace:glm	typeref:typename:highp_umat4x2
umat4x2	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat4x2							umat4x2;$/;"	t	namespace:glm	typeref:typename:lowp_umat4x2
umat4x2	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat4x2							umat4x2;$/;"	t	namespace:glm	typeref:typename:mediump_umat4x2
umat4x3	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat4x3							umat4x3;$/;"	t	namespace:glm	typeref:typename:highp_umat4x3
umat4x3	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat4x3							umat4x3;$/;"	t	namespace:glm	typeref:typename:lowp_umat4x3
umat4x3	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat4x3							umat4x3;$/;"	t	namespace:glm	typeref:typename:mediump_umat4x3
umat4x4	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat4x4							umat4x4;$/;"	t	namespace:glm	typeref:typename:highp_umat4x4
umat4x4	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat4x4							umat4x4;$/;"	t	namespace:glm	typeref:typename:lowp_umat4x4
umat4x4	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat4x4							umat4x4;$/;"	t	namespace:glm	typeref:typename:mediump_umat4x4
umulExtended	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER void umulExtended(uint const& x, uint const& y, uint & msb, uint & lsb)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
umulExtended	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER void umulExtended(vec<L, uint, Q> const& x, vec<L, uint, Q> const& y, vec<L,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
unProject	glm/ext/matrix_projection.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> unProject(vec<3, T, Q> const& win, mat<4, 4, T, Q> const& model/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
unProjectNO	glm/ext/matrix_projection.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> unProjectNO(vec<3, T, Q> const& win, mat<4, 4, T, Q> const& mod/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
unProjectZO	glm/ext/matrix_projection.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> unProjectZO(vec<3, T, Q> const& win, mat<4, 4, T, Q> const& mod/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
unfilter	lodepng.cpp	/^static unsigned unfilter(unsigned char* out, const unsigned char* in, unsigned w, unsigned h, un/;"	f	typeref:typename:unsigned	file:
unfilterScanline	lodepng.cpp	/^static unsigned unfilterScanline(unsigned char* recon, const unsigned char* scanline, const unsi/;"	f	typeref:typename:unsigned	file:
unformatted	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ios<CTy, CTr>& unformatted(std::basic_ios<CTy, CTr>& ios)$/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ios<CTy,CTr> &
unknown_chunks_data	lodepng.h	/^  unsigned char* unknown_chunks_data[3];$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned char * [3]
unknown_chunks_size	lodepng.h	/^  size_t unknown_chunks_size[3]; \/*size in bytes of the unknown chunks, given for protection*\/$/;"	m	struct:LodePNGInfo	typeref:typename:size_t[3]
unpack	glm/gtc/packing.inl	/^		GLM_FUNC_QUALIFIER static vec<1, float, Q> unpack(vec<1, uint16, Q> const& v)$/;"	f	struct:glm::detail::compute_half	typeref:typename:GLM_FUNC_QUALIFIER vec<1,float,Q>	file:
unpack	glm/gtc/packing.inl	/^		GLM_FUNC_QUALIFIER static vec<2, float, Q> unpack(vec<2, uint16, Q> const& v)$/;"	f	struct:glm::detail::compute_half	typeref:typename:GLM_FUNC_QUALIFIER vec<2,float,Q>	file:
unpack	glm/gtc/packing.inl	/^		GLM_FUNC_QUALIFIER static vec<3, float, Q> unpack(vec<3, uint16, Q> const& v)$/;"	f	struct:glm::detail::compute_half	typeref:typename:GLM_FUNC_QUALIFIER vec<3,float,Q>	file:
unpack	glm/gtc/packing.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> unpack(vec<4, uint16, Q> const& v)$/;"	f	struct:glm::detail::compute_half	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
unpackDouble2x32	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uvec2 unpackDouble2x32(double v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uvec2
unpackF2x11_1x10	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec3 unpackF2x11_1x10(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec3
unpackF3x9_E1x5	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec3 unpackF3x9_E1x5(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec3
unpackHalf	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec<L, float, Q> unpackHalf(vec<L, uint16, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,float,Q>
unpackHalf1x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackHalf1x16(uint16 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackHalf2x16	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackHalf2x16(uint v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackHalf4x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::vec4 unpackHalf4x16(uint64 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec4
unpackI3x10_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER ivec4 unpackI3x10_1x2(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER ivec4
unpackInt2x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER i16vec2 unpackInt2x16(int p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER i16vec2
unpackInt2x32	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER i32vec2 unpackInt2x32(int64 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER i32vec2
unpackInt2x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER i8vec2 unpackInt2x8(int16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER i8vec2
unpackInt4x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER i16vec4 unpackInt4x16(int64 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER i16vec4
unpackInt4x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER i8vec4 unpackInt4x8(int32 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER i8vec4
unpackRGBM	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> unpackRGBM(vec<4, T, Q> const& rgbm)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
unpackSnorm	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec<L, floatType, Q> unpackSnorm(vec<L, intType, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,floatType,Q>
unpackSnorm1x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackSnorm1x16(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackSnorm1x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackSnorm1x8(uint8 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackSnorm2x16	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackSnorm2x16(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackSnorm2x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackSnorm2x8(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackSnorm3x10_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackSnorm3x10_1x2(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackSnorm4x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackSnorm4x16(uint64 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackSnorm4x8	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER glm::vec4 unpackSnorm4x8(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec4
unpackU3x10_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uvec4 unpackU3x10_1x2(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uvec4
unpackUint2x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER u16vec2 unpackUint2x16(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER u16vec2
unpackUint2x32	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER u32vec2 unpackUint2x32(uint64 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER u32vec2
unpackUint2x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER u8vec2 unpackUint2x8(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER u8vec2
unpackUint4x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER u16vec4 unpackUint4x16(uint64 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER u16vec4
unpackUint4x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER u8vec4 unpackUint4x8(uint32 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER u8vec4
unpackUnorm	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec<L, floatType, Q> unpackUnorm(vec<L, uintType, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,floatType,Q>
unpackUnorm1x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackUnorm1x16(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackUnorm1x5_1x6_1x5	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec3 unpackUnorm1x5_1x6_1x5(uint16 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec3
unpackUnorm1x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackUnorm1x8(uint8 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackUnorm2x16	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackUnorm2x16(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackUnorm2x3_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec3 unpackUnorm2x3_1x2(uint8 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec3
unpackUnorm2x4	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackUnorm2x4(uint8 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackUnorm2x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackUnorm2x8(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackUnorm3x10_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackUnorm3x10_1x2(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackUnorm3x5_1x1	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackUnorm3x5_1x1(uint16 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackUnorm4x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackUnorm4x16(uint64 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackUnorm4x4	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackUnorm4x4(uint16 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackUnorm4x8	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackUnorm4x8(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
updateHashChain	lodepng.cpp	/^static void updateHashChain(Hash* hash, size_t wpos, unsigned hashval, unsigned short numzeros)$/;"	f	typeref:typename:void	file:
update_adler32	lodepng.cpp	/^static unsigned update_adler32(unsigned adler, const unsigned char* data, unsigned len)$/;"	f	typeref:typename:unsigned	file:
uround	glm/gtc/integer.inl	/^	GLM_FUNC_QUALIFIER uint uround(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
uround	glm/gtc/integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, uint, Q> uround(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint,Q>
use	shaderprogram.cpp	/^void ShaderProgram::use() {$/;"	f	class:ShaderProgram	typeref:typename:void
use_lz77	lodepng.h	/^  unsigned use_lz77; \/*whether or not to use LZ77. Should be 1 for proper compression.*\/$/;"	m	struct:LodePNGCompressSettings	typeref:typename:unsigned
usubBorrow	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER uint usubBorrow(uint const& x, uint const& y, uint & Borrow)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
usubBorrow	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, uint, Q> usubBorrow(vec<L, uint, Q> const& x, vec<L, uint, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint,Q>
uvec1	glm/ext/vector_uint1.hpp	/^	typedef vec<1, unsigned int, defaultp>			uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,unsigned int,defaultp>
uvec1	glm/fwd.hpp	/^	typedef vec<1, u32, defaultp>	uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,defaultp>
uvec2	glm/ext/vector_uint2.hpp	/^	typedef vec<2, unsigned int, defaultp>		uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,unsigned int,defaultp>
uvec2	glm/fwd.hpp	/^	typedef vec<2, u32, defaultp>	uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,defaultp>
uvec3	glm/ext/vector_uint3.hpp	/^	typedef vec<3, unsigned int, defaultp>		uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,unsigned int,defaultp>
uvec3	glm/fwd.hpp	/^	typedef vec<3, u32, defaultp>	uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,defaultp>
uvec4	glm/ext/vector_uint4.hpp	/^	typedef vec<4, unsigned int, defaultp>		uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,unsigned int,defaultp>
uvec4	glm/fwd.hpp	/^	typedef vec<4, u32, defaultp>	uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,defaultp>
val	lodepng.cpp	/^  int* val; \/*circular pos to hash value*\/$/;"	m	struct:Hash	typeref:typename:int *	file:
value	glm/detail/qualifier.hpp	/^			static const bool value = true;$/;"	m	struct:glm::detail::is_aligned	typeref:typename:const bool
value	glm/detail/qualifier.hpp	/^		static const bool value = false;$/;"	m	struct:glm::detail::is_aligned	typeref:typename:const bool
value	glm/detail/setup.hpp	/^		enum test {value = 0};$/;"	e	enum:glm::detail::is_int::test
value	glm/detail/setup.hpp	/^		enum test {value = ~0};$/;"	e	enum:glm::detail::is_int::test
value	glm/detail/type_mat2x2.hpp	/^		col_type value[2];$/;"	m	struct:glm::mat	typeref:typename:col_type[2]
value	glm/detail/type_mat2x3.hpp	/^		col_type value[2];$/;"	m	struct:glm::mat	typeref:typename:col_type[2]
value	glm/detail/type_mat2x4.hpp	/^		col_type value[2];$/;"	m	struct:glm::mat	typeref:typename:col_type[2]
value	glm/detail/type_mat3x2.hpp	/^		col_type value[3];$/;"	m	struct:glm::mat	typeref:typename:col_type[3]
value	glm/detail/type_mat3x3.hpp	/^		col_type value[3];$/;"	m	struct:glm::mat	typeref:typename:col_type[3]
value	glm/detail/type_mat3x4.hpp	/^		col_type value[3];$/;"	m	struct:glm::mat	typeref:typename:col_type[3]
value	glm/detail/type_mat4x2.hpp	/^		col_type value[4];$/;"	m	struct:glm::mat	typeref:typename:col_type[4]
value	glm/detail/type_mat4x3.hpp	/^		col_type value[4];$/;"	m	struct:glm::mat	typeref:typename:col_type[4]
value	glm/detail/type_mat4x4.hpp	/^		col_type value[4];$/;"	m	struct:glm::mat	typeref:typename:col_type[4]
value	glm/ext/scalar_int_sized.hpp	/^		enum test {value = ~0};$/;"	e	enum:glm::detail::is_int::test
value	glm/ext/scalar_uint_sized.hpp	/^		enum test {value = ~0};$/;"	e	enum:glm::detail::is_int::test
value	glm/ext/scalar_ulp.inl	/^	double value;$/;"	m	union:__anonb4cc412b020a	typeref:typename:double	file:
value	glm/ext/scalar_ulp.inl	/^	float value;$/;"	m	union:__anonb4cc412b010a	typeref:typename:float	file:
value	glm/gtx/io.hpp	/^			CTy value[3];$/;"	m	struct:glm::io::delimeter	typeref:typename:CTy[3]
value	glm/gtx/io.hpp	/^			order_type value;$/;"	m	struct:glm::io::order	typeref:typename:order_type
value	glm/gtx/io.hpp	/^			unsigned value;$/;"	m	struct:glm::io::precision	typeref:typename:unsigned
value	glm/gtx/io.hpp	/^			unsigned value;$/;"	m	struct:glm::io::width	typeref:typename:unsigned
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "%d";}$/;"	f	struct:glm::detail::literal	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "%f";}$/;"	f	struct:glm::detail::literal	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "%lld";}$/;"	f	struct:glm::detail::literal	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "b";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "d";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "i";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "i16";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "i64";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "i8";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "u";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "u16";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "u64";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "u8";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T * value_ptr(mat<4, 3, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const * value_ptr(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const * value_ptr(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<2, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<2, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<3, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<3, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<4, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<4, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(mat<2, 2, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(mat<2, 3, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(mat<2, 4, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(mat<3, 2, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(mat<3, 3, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(mat<3, 4, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(mat<4, 2, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(mat<4, 4, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(qua<T, Q>& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(vec<2, T, Q>& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(vec<3, T, Q>& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(vec<4, T, Q>& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_type	glm/detail/type_mat2x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	glm/detail/type_mat2x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	glm/detail/type_mat2x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	glm/detail/type_mat3x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	glm/detail/type_mat3x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	glm/detail/type_mat3x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	glm/detail/type_mat4x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	glm/detail/type_mat4x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	glm/detail/type_mat4x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	glm/detail/type_quat.hpp	/^		typedef T value_type;$/;"	t	struct:glm::qua	typeref:typename:T
value_type	glm/detail/type_vec1.hpp	/^		typedef T value_type;$/;"	t	struct:glm::vec	typeref:typename:T
value_type	glm/detail/type_vec2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::vec	typeref:typename:T
value_type	glm/detail/type_vec3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::vec	typeref:typename:T
value_type	glm/detail/type_vec4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::vec	typeref:typename:T
value_type	glm/gtx/dual_quaternion.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tdualquat	typeref:typename:T
value_type	glm/gtx/string_cast.inl	/^		typedef T value_type;$/;"	t	struct:glm::detail::cast	typeref:typename:T	file:
value_type	glm/gtx/string_cast.inl	/^		typedef double value_type;$/;"	t	struct:glm::detail::cast	typeref:typename:double	file:
vec	glm/detail/glm.cpp	/^template struct vec<1, float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, int16, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, int16, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, int16, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, int32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, int32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, int32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, int64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, int64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, int64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, int8, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, int8, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, int8, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, uint16, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, uint16, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, uint16, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, uint32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, uint32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, uint32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, uint64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, uint64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, uint64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, uint8, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, uint8, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<1, uint8, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, int16, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, int16, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, int16, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, int32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, int32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, int32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, int64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, int64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, int64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, int8, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, int8, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, int8, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, uint16, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, uint16, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, uint16, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, uint32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, uint32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, uint32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, uint64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, uint64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, uint64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, uint8, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, uint8, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<2, uint8, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, int16, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, int16, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, int16, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, int32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, int32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, int32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, int64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, int64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, int64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, int8, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, int8, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, int8, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, uint16, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, uint16, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, uint16, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, uint32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, uint32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, uint32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, uint64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, uint64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, uint64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, uint8, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, uint8, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<3, uint8, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, int16, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, int16, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, int16, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, int32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, int32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, int32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, int64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, int64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, int64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, int8, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, int8, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, int8, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, uint16, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, uint16, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, uint16, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, uint32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, uint32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, uint32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, uint64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, uint64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, uint64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, uint8, highp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, uint8, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/glm.cpp	/^template struct vec<4, uint8, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
vec	glm/detail/type_vec1.hpp	/^	struct vec<1, T, Q>$/;"	s	namespace:glm
vec	glm/detail/type_vec1.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q>::vec()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec1.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q>::vec(vec<1, T, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q>::vec(T scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q>::vec(vec<1, T, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q>::vec(vec<1, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q>::vec(vec<2, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q>::vec(vec<3, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q>::vec(vec<4, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec2.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(detail::_swizzle<2, T, Q, E0, E1,-1,-2> const& that)$/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR
vec	glm/detail/type_vec2.hpp	/^	struct vec<2, T, Q>$/;"	s	namespace:glm
vec	glm/detail/type_vec2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(vec<2, T, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(A _x, B _y)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(A _x, vec<1, B, Q> const& _y)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(T _x, T _y)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(T scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(vec<1, A, Q> const& _x, B _y)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(vec<1, A, Q> const& _x, vec<1, B, Q> const& /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(vec<1, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(vec<2, T, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(vec<2, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(vec<3, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(vec<4, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(T const& scalar, detail::_swizzle<2, T, Q, E0, E1, -1, -2> co/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR
vec	glm/detail/type_vec3.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(detail::_swizzle<2, T, Q, E0, E1, -1, -2> const& v, T const& /;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR
vec	glm/detail/type_vec3.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(detail::_swizzle<3, T, Q, E0, E1, E2, -1> const& that)$/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR
vec	glm/detail/type_vec3.hpp	/^	struct vec<3, T, Q>$/;"	s	namespace:glm
vec	glm/detail/type_vec3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<3, T, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(A _x, vec<2, B, P> const& _yz)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(T _x, T _y, T _z)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(T scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(X _x, Y _y, Z _z)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(X _x, Y _y, vec<1, Z, Q> const& _z)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(X _x, vec<1, Y, Q> const& _y, Z _z)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(X _x, vec<1, Y, Q> const& _y, vec<1, Z, Q> c/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<1, A, P> const& _x, vec<2, B, P> const& /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<1, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<1, X, Q> const& _x, Y _y, Z _z)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<1, X, Q> const& _x, Y _y, vec<1, Z, Q> c/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<1, X, Q> const& _x, vec<1, Y, Q> const& /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<2, A, P> const& _xy, B _z)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<2, A, P> const& _xy, vec<1, B, P> const&/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<3, T, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<3, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<4, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(T const& x, T const& y, detail::_swizzle<2, T, Q, E0, E1, -1,/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR
vec	glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(T const& x, detail::_swizzle<2, T, Q, E0, E1, -1, -2> const& /;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR
vec	glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(T const& x, detail::_swizzle<3, T, Q, E0, E1, E2, -1> const& /;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR
vec	glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(detail::_swizzle<2, T, Q, E0, E1, -1, -2> const& v, T const& /;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR
vec	glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(detail::_swizzle<2, T, Q, E0, E1, -1, -2> const& v, detail::_/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR
vec	glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(detail::_swizzle<3, T, Q, E0, E1, E2, -1> const& v, T const& /;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR
vec	glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(detail::_swizzle<4, T, Q, E0, E1, E2, E3> const& that)$/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR
vec	glm/detail/type_vec4.hpp	/^	struct vec<4, T, Q>$/;"	s	namespace:glm
vec	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<4, T, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(A _x, B _y, vec<2, C, P> const& _zw)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(A _x, vec<1, B, P> const& _y, vec<2, C, P> c/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(A _x, vec<2, B, P> const& _yz, C _w)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(A _x, vec<2, B, P> const& _yz, vec<1, C, P> /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(A _x, vec<3, B, P> const& _yzw)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(T _x, T _y, T _z, T _w)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(T scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(X _x, Y _y, Z _z, W _w)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(X _x, Y _y, vec<1, Z, Q> const& _z, W _w)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(X _x, Y _y, vec<1, Z, Q> const& _z, vec<1, W/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(X _x, vec<1, Y, Q> const& _y, Z _z, W _w)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(X _x, vec<1, Y, Q> const& _y, Z _z, vec<1, W/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(X _x, vec<1, Y, Q> const& _y, vec<1, Z, Q> c/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, A, P> const& _x, B _y, vec<2, C, P> c/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, A, P> const& _x, vec<1, B, P> const& /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, A, P> const& _x, vec<2, B, P> const& /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, A, P> const& _x, vec<3, B, P> const& /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, X, Q> const& _x, Y _y, Z _z, W _w)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, X, Q> const& _x, Y _y, Z _z, vec<1, W/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, X, Q> const& _x, Y _y, vec<1, Z, Q> c/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, X, Q> const& _x, vec<1, Y, Q> const& /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<2, A, P> const& _xy, B _z, C _w)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<2, A, P> const& _xy, B _z, vec<1, C, P> /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<2, A, P> const& _xy, vec<1, B, P> const&/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<2, A, P> const& _xy, vec<2, B, P> const&/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<3, A, P> const& _xyz, B _w)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<3, A, P> const& _xyz, vec<1, B, P> const/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<4, T, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<4, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, detail::int64, aligned_highp>::vec(detail::int64 _s) :$/;"	f	class:glm::vec::int64	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, detail::int64, aligned_lowp>::vec(detail::int64 _s) :$/;"	f	class:glm::vec::int64	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, detail::int64, aligned_mediump>::vec(detail::int64 _s) /;"	f	class:glm::vec::int64	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, double, aligned_highp>::vec(double _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, double, aligned_lowp>::vec(double _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, double, aligned_mediump>::vec(double _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_highp>::vec(float _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_highp>::vec(float _x, float _y, float _z/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_highp>::vec(int _x, int _y, int _z, int /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_lowp>::vec(float _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_lowp>::vec(float _x, float _y, float _z,/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_lowp>::vec(int _x, int _y, int _z, int _/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_mediump>::vec(float _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_mediump>::vec(float _x, float _y, float /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_mediump>::vec(int _x, int _y, int _z, in/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, int, aligned_highp>::vec(int _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, int, aligned_highp>::vec(int _x, int _y, int _z, int _w/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, int, aligned_lowp>::vec(int _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, int, aligned_lowp>::vec(int _x, int _y, int _z, int _w)/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, int, aligned_mediump>::vec(int _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, int, aligned_mediump>::vec(int _x, int _y, int _z, int /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec1	glm/ext/vector_float1.hpp	/^	typedef vec<1, float, defaultp>		vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,defaultp>
vec1	glm/fwd.hpp	/^	typedef vec<1, float, defaultp>		vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,defaultp>
vec2	glm/ext/vector_float2.hpp	/^	typedef vec<2, float, defaultp>	vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,defaultp>
vec2	glm/fwd.hpp	/^	typedef vec<2, float, defaultp>		vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,defaultp>
vec3	glm/ext/vector_float3.hpp	/^	typedef vec<3, float, defaultp>		vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,defaultp>
vec3	glm/fwd.hpp	/^	typedef vec<3, float, defaultp>		vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,defaultp>
vec4	glm/ext/vector_float4.hpp	/^	typedef vec<4, float, defaultp>		vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,defaultp>
vec4	glm/fwd.hpp	/^	typedef vec<4, float, defaultp>		vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,defaultp>
vertexCount	cube.cpp	/^			unsigned int vertexCount=36;$/;"	v	namespace:Models::CubeInternal	typeref:typename:unsigned int
vertexCount	model.h	/^			int vertexCount;$/;"	m	class:Models::Model	typeref:typename:int
vertexCount	teapot.cpp	/^		unsigned int vertexCount=2976;$/;"	v	namespace:Models::TeapotInternal	typeref:typename:unsigned int
vertexCount	walls.cpp	/^        unsigned int vertexCount = 84;$/;"	v	namespace:Models::WallsInternal	typeref:typename:unsigned int
vertexNormals	cube.cpp	/^			float vertexNormals[]={$/;"	v	namespace:Models::CubeInternal	typeref:typename:float[]
vertexNormals	model.h	/^			float *vertexNormals;$/;"	m	class:Models::Model	typeref:typename:float *
vertexNormals	teapot.cpp	/^		float vertexNormals[]={$/;"	v	namespace:Models::TeapotInternal	typeref:typename:float[]
vertexNormals	walls.cpp	/^        float vertexNormals[] = {$/;"	v	namespace:Models::WallsInternal	typeref:typename:float[]
vertexShader	shaderprogram.h	/^	GLuint vertexShader; \/\/Vertex shader handle$/;"	m	class:ShaderProgram	typeref:typename:GLuint
vertices	cube.cpp	/^			float vertices[]={$/;"	v	namespace:Models::CubeInternal	typeref:typename:float[]
vertices	model.h	/^			float *vertices;$/;"	m	class:Models::Model	typeref:typename:float *
vertices	teapot.cpp	/^		float vertices[]={$/;"	v	namespace:Models::TeapotInternal	typeref:typename:float[]
vertices	walls.cpp	/^        float vertices[] = {$/;"	v	namespace:Models::WallsInternal	typeref:typename:float[]
w	glm/detail/type_quat.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::qua::__anon3e5b6d28010a::__anon3e5b6d280208	typeref:typename:T
w	glm/detail/type_quat.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::qua	typeref:typename:T
w	glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w; };$/;"	m	struct:glm::vec::__anon0c24fa7f010a::__anon0c24fa7f0208	typeref:typename:T
w	glm/detail/type_vec4.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::vec	typeref:typename:T
w	glm/detail/type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::vec::__anon0c24fa7f080a	typeref:typename:T
w	glm/gtc/packing.inl	/^			int w : 2;$/;"	m	struct:glm::detail::i10i10i10i2::__anon1165e74f0708	typeref:typename:int:2	file:
w	glm/gtc/packing.inl	/^			uint w : 1;$/;"	m	struct:glm::detail::u5u5u5u1::__anon1165e74f0508	typeref:typename:uint:1	file:
w	glm/gtc/packing.inl	/^			uint w : 2;$/;"	m	struct:glm::detail::u10u10u10u2::__anon1165e74f0608	typeref:typename:uint:2	file:
w	glm/gtc/packing.inl	/^			uint w : 4;$/;"	m	struct:glm::detail::u4u4u4u4::__anon1165e74f0308	typeref:typename:uint:4	file:
w	glm/gtc/packing.inl	/^			uint w : 5;$/;"	m	struct:glm::detail::u9u9u9e5::__anon1165e74f0808	typeref:typename:uint:5	file:
walls	walls.cpp	/^    Walls walls;$/;"	v	namespace:Models	typeref:typename:Walls
weight	lodepng.cpp	/^  int weight; \/*the sum of all weights in this chain*\/$/;"	m	struct:BPMNode	typeref:typename:int	file:
wformat_saver	glm/gtx/io.hpp	/^		typedef basic_format_saver<wchar_t> wformat_saver;$/;"	t	namespace:glm::io	typeref:typename:basic_format_saver<wchar_t>
width	glm/gtx/io.hpp	/^			unsigned   width;$/;"	m	class:glm::io::format_punct	typeref:typename:unsigned
width	glm/gtx/io.hpp	/^		struct width$/;"	s	namespace:glm::io
width	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER width::width(unsigned a)$/;"	f	class:glm::io::width	typeref:typename:GLM_FUNC_QUALIFIER
width_	glm/gtx/io.hpp	/^			streamsize_type width_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:streamsize_type
windowResizeCallback	main_file.cpp	/^void windowResizeCallback(GLFWwindow *window, int width, int height) {$/;"	f	typeref:typename:void
windowsize	lodepng.h	/^  unsigned windowsize; \/*must be a power of two <= 32768. higher compresses more but is slower./;"	m	struct:LodePNGCompressSettings	typeref:typename:unsigned
word	glm/ext/scalar_ulp.inl	/^	unsigned int word;$/;"	m	union:__anonb4cc412b010a	typeref:typename:unsigned int	file:
word	glm/gtx/raw_data.hpp	/^	typedef detail::uint16		word;$/;"	t	namespace:glm	typeref:typename:detail::uint16
wrapAngle	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T wrapAngle(T angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
wrapAngle	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> wrapAngle(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
writeLZ77data	lodepng.cpp	/^static void writeLZ77data(size_t* bp, ucvector* out, const uivector* lz77_encoded,$/;"	f	typeref:typename:void	file:
writeSignature	lodepng.cpp	/^static void writeSignature(ucvector* out)$/;"	f	typeref:typename:void	file:
wstate_saver	glm/gtx/io.hpp	/^		typedef basic_state_saver<wchar_t> wstate_saver;$/;"	t	namespace:glm::io	typeref:typename:basic_state_saver<wchar_t>
ww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> ww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
www	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> www(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
wwww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wwwx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wwwy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wwwz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wwx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
wwxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wwxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wwxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wwxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wwy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
wwyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wwyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wwyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wwyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wwz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
wwzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wwzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wwzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wwzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> wx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
wxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
wxww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wxwx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wxwy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wxwz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
wxxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wxxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wxxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wxxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
wxyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wxyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wxyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wxyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
wxzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wxzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wxzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wxzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> wy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
wyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
wyww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wywx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wywx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wywy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wywy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wywz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wywz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
wyxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wyxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wyxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wyxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
wyyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wyyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wyyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wyyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
wyzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wyzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wyzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wyzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> wz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
wzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
wzww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wzwx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wzwy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wzwz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
wzxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wzxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wzxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wzxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
wzyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wzyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wzyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wzyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
wzzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wzzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wzzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
wzzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
x	glm/detail/type_quat.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::qua::__anon3e5b6d28010a::__anon3e5b6d280208	typeref:typename:T
x	glm/detail/type_quat.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::qua	typeref:typename:T
x	glm/detail/type_vec1.hpp	/^				T x;$/;"	m	union:glm::vec::__anon0beeb0fc010a	typeref:typename:T
x	glm/detail/type_vec1.hpp	/^			T x;$/;"	m	struct:glm::vec	typeref:typename:T
x	glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::vec::__anon0beeb0fc020a	typeref:typename:T
x	glm/detail/type_vec2.hpp	/^				struct{ T x, y; };$/;"	m	struct:glm::vec::__anon0c00c97d010a::__anon0c00c97d0208	typeref:typename:T
x	glm/detail/type_vec2.hpp	/^			T x, y;$/;"	m	struct:glm::vec	typeref:typename:T
x	glm/detail/type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::vec::__anon0c00c97d050a	typeref:typename:T
x	glm/detail/type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::vec::__anon0c12e1fe010a::__anon0c12e1fe0208	typeref:typename:T
x	glm/detail/type_vec3.hpp	/^			T x, y, z;$/;"	m	struct:glm::vec	typeref:typename:T
x	glm/detail/type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::vec::__anon0c12e1fe050a	typeref:typename:T
x	glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w; };$/;"	m	struct:glm::vec::__anon0c24fa7f010a::__anon0c24fa7f0208	typeref:typename:T
x	glm/detail/type_vec4.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::vec	typeref:typename:T
x	glm/detail/type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::vec::__anon0c24fa7f050a	typeref:typename:T
x	glm/gtc/packing.inl	/^			int x : 10;$/;"	m	struct:glm::detail::i10i10i10i2::__anon1165e74f0708	typeref:typename:int:10	file:
x	glm/gtc/packing.inl	/^			uint x : 10;$/;"	m	struct:glm::detail::u10u10u10u2::__anon1165e74f0608	typeref:typename:uint:10	file:
x	glm/gtc/packing.inl	/^			uint x : 3;$/;"	m	struct:glm::detail::u3u3u2::__anon1165e74f0108	typeref:typename:uint:3	file:
x	glm/gtc/packing.inl	/^			uint x : 4;$/;"	m	struct:glm::detail::u4u4::__anon1165e74f0208	typeref:typename:uint:4	file:
x	glm/gtc/packing.inl	/^			uint x : 4;$/;"	m	struct:glm::detail::u4u4u4u4::__anon1165e74f0308	typeref:typename:uint:4	file:
x	glm/gtc/packing.inl	/^			uint x : 5;$/;"	m	struct:glm::detail::u5u5u5u1::__anon1165e74f0508	typeref:typename:uint:5	file:
x	glm/gtc/packing.inl	/^			uint x : 5;$/;"	m	struct:glm::detail::u5u6u5::__anon1165e74f0408	typeref:typename:uint:5	file:
x	glm/gtc/packing.inl	/^			uint x : 9;$/;"	m	struct:glm::detail::u9u9u9e5::__anon1165e74f0808	typeref:typename:uint:9	file:
xw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
xww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xwww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xwwx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xwwy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xwwz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xwx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xwxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xwxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xwxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xwxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xwy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xwyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xwyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xwyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xwyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xwz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xwzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xwzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xwzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xwzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xx(const glm::vec<1, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
xx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
xx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
xx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
xxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xxww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxwx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxwy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxwz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxx(const glm::vec<1, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xxxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxx(const glm::vec<1, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xxyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xxzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xxzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
xy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
xy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
xyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xyww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xywx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xywx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xywy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xywy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xywz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xywz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xyxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xyyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xyzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xyzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
xz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
xzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xzww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzwx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzwy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzwz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xzxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xzyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
xzzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
xzzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
y	glm/detail/type_quat.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::qua::__anon3e5b6d28010a::__anon3e5b6d280208	typeref:typename:T
y	glm/detail/type_quat.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::qua	typeref:typename:T
y	glm/detail/type_vec2.hpp	/^				struct{ T x, y; };$/;"	m	struct:glm::vec::__anon0c00c97d010a::__anon0c00c97d0208	typeref:typename:T
y	glm/detail/type_vec2.hpp	/^			T x, y;$/;"	m	struct:glm::vec	typeref:typename:T
y	glm/detail/type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::vec::__anon0c00c97d060a	typeref:typename:T
y	glm/detail/type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::vec::__anon0c12e1fe010a::__anon0c12e1fe0208	typeref:typename:T
y	glm/detail/type_vec3.hpp	/^			T x, y, z;$/;"	m	struct:glm::vec	typeref:typename:T
y	glm/detail/type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::vec::__anon0c12e1fe060a	typeref:typename:T
y	glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w; };$/;"	m	struct:glm::vec::__anon0c24fa7f010a::__anon0c24fa7f0208	typeref:typename:T
y	glm/detail/type_vec4.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::vec	typeref:typename:T
y	glm/detail/type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::vec::__anon0c24fa7f060a	typeref:typename:T
y	glm/gtc/packing.inl	/^			int y : 10;$/;"	m	struct:glm::detail::i10i10i10i2::__anon1165e74f0708	typeref:typename:int:10	file:
y	glm/gtc/packing.inl	/^			uint y : 10;$/;"	m	struct:glm::detail::u10u10u10u2::__anon1165e74f0608	typeref:typename:uint:10	file:
y	glm/gtc/packing.inl	/^			uint y : 3;$/;"	m	struct:glm::detail::u3u3u2::__anon1165e74f0108	typeref:typename:uint:3	file:
y	glm/gtc/packing.inl	/^			uint y : 4;$/;"	m	struct:glm::detail::u4u4::__anon1165e74f0208	typeref:typename:uint:4	file:
y	glm/gtc/packing.inl	/^			uint y : 4;$/;"	m	struct:glm::detail::u4u4u4u4::__anon1165e74f0308	typeref:typename:uint:4	file:
y	glm/gtc/packing.inl	/^			uint y : 5;$/;"	m	struct:glm::detail::u5u5u5u1::__anon1165e74f0508	typeref:typename:uint:5	file:
y	glm/gtc/packing.inl	/^			uint y : 6;$/;"	m	struct:glm::detail::u5u6u5::__anon1165e74f0408	typeref:typename:uint:6	file:
y	glm/gtc/packing.inl	/^			uint y : 9;$/;"	m	struct:glm::detail::u9u9u9e5::__anon1165e74f0808	typeref:typename:uint:9	file:
yaw	Camera.h	/^    float yaw;$/;"	m	class:Camera	typeref:typename:float
yaw	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER T yaw(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
yawPitchRoll	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> yawPitchRoll$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
year	lodepng.h	/^  unsigned year;    \/*2 bytes used (0-65535)*\/$/;"	m	struct:LodePNGTime	typeref:typename:unsigned
yw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
yww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
ywww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
ywwx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
ywwy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
ywwz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
ywx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> ywx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
ywxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
ywxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
ywxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
ywxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
ywy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> ywy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
ywyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
ywyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
ywyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
ywyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
ywz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> ywz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
ywzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
ywzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
ywzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
ywzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
yx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
yx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
yxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yxww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxwx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxwy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxwz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yxxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yxyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yxzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yxzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
yy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
yy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
yyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yyww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yywx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yywx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yywy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yywy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yywz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yywz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yyxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yyyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yyzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yyzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
yz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
yzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yzww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzwx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzwy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzwz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yzxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yzyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
yzzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
yzzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
z	glm/detail/type_quat.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::qua::__anon3e5b6d28010a::__anon3e5b6d280208	typeref:typename:T
z	glm/detail/type_quat.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::qua	typeref:typename:T
z	glm/detail/type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::vec::__anon0c12e1fe010a::__anon0c12e1fe0208	typeref:typename:T
z	glm/detail/type_vec3.hpp	/^			T x, y, z;$/;"	m	struct:glm::vec	typeref:typename:T
z	glm/detail/type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::vec::__anon0c12e1fe070a	typeref:typename:T
z	glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w; };$/;"	m	struct:glm::vec::__anon0c24fa7f010a::__anon0c24fa7f0208	typeref:typename:T
z	glm/detail/type_vec4.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::vec	typeref:typename:T
z	glm/detail/type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::vec::__anon0c24fa7f070a	typeref:typename:T
z	glm/gtc/packing.inl	/^			int z : 10;$/;"	m	struct:glm::detail::i10i10i10i2::__anon1165e74f0708	typeref:typename:int:10	file:
z	glm/gtc/packing.inl	/^			uint z : 10;$/;"	m	struct:glm::detail::u10u10u10u2::__anon1165e74f0608	typeref:typename:uint:10	file:
z	glm/gtc/packing.inl	/^			uint z : 2;$/;"	m	struct:glm::detail::u3u3u2::__anon1165e74f0108	typeref:typename:uint:2	file:
z	glm/gtc/packing.inl	/^			uint z : 4;$/;"	m	struct:glm::detail::u4u4u4u4::__anon1165e74f0308	typeref:typename:uint:4	file:
z	glm/gtc/packing.inl	/^			uint z : 5;$/;"	m	struct:glm::detail::u5u5u5u1::__anon1165e74f0508	typeref:typename:uint:5	file:
z	glm/gtc/packing.inl	/^			uint z : 5;$/;"	m	struct:glm::detail::u5u6u5::__anon1165e74f0408	typeref:typename:uint:5	file:
z	glm/gtc/packing.inl	/^			uint z : 9;$/;"	m	struct:glm::detail::u9u9u9e5::__anon1165e74f0808	typeref:typename:uint:9	file:
zero	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType zero()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
zeros	lodepng.cpp	/^  unsigned short* zeros; \/*length of zeros streak, used as a second hash chain*\/$/;"	m	struct:Hash	typeref:typename:unsigned short *	file:
zlib_compress	lodepng.cpp	/^static unsigned zlib_compress(unsigned char** out, size_t* outsize, const unsigned char* in,$/;"	f	typeref:typename:unsigned	file:
zlib_decompress	lodepng.cpp	/^static unsigned zlib_decompress(unsigned char** out, size_t* outsize, const unsigned char* in,$/;"	f	typeref:typename:unsigned	file:
zlibsettings	lodepng.h	/^  LodePNGCompressSettings zlibsettings; \/*settings for the zlib encoder, such as window size, ./;"	m	struct:LodePNGEncoderSettings	typeref:typename:LodePNGCompressSettings
zlibsettings	lodepng.h	/^  LodePNGDecompressSettings zlibsettings; \/*in here is the setting to ignore Adler32 checksums*/;"	m	struct:LodePNGDecoderSettings	typeref:typename:LodePNGDecompressSettings
zw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> zw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
zww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zwww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zwwx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zwwy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zwwz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zwx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zwxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zwxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zwxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zwxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zwy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zwyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zwyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zwyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zwyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zwz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zwzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zwzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zwzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zwzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> zx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
zx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> zx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
zxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zxww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxwx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxwy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxwz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zxxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zxyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zxzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zxzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> zy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
zy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> zy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
zyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zyww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zywx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zywx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zywy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zywy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zywz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zywz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zyxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zyyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zyzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zyzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> zz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
zz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> zz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<2,T,Q>
zzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zzww	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzwx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzwy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzwz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zzxw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzxx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzxy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzxz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zzyw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzyx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzyy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzyz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<3,T,Q>
zzzw	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzzx	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzzy	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
zzzz	glm/gtx/vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_INLINE glm::vec<4,T,Q>
~Cube	cube.cpp	/^	Cube::~Cube() {$/;"	f	class:Models::Cube
~LodePNGState	lodepng.h	/^  virtual ~LodePNGState(){}$/;"	f	struct:LodePNGState
~ShaderProgram	shaderprogram.cpp	/^ShaderProgram::~ShaderProgram() {$/;"	f	class:ShaderProgram
~Sphere	sphere.cpp	/^	Sphere::~Sphere() {		$/;"	f	class:Models::Sphere
~State	lodepng.cpp	/^State::~State()$/;"	f	class:lodepng::State
~Teapot	teapot.cpp	/^	Teapot::~Teapot() {$/;"	f	class:Models::Teapot
~Torus	torus.cpp	/^	Torus::~Torus() {		$/;"	f	class:Models::Torus
~Walls	walls.cpp	/^    Walls::~Walls() {$/;"	f	class:Models::Walls
~basic_format_saver	glm/gtx/io.inl	/^	basic_format_saver<CTy, CTr>::~basic_format_saver()$/;"	f	class:glm::io::basic_format_saver	typeref:typename:GLM_FUNC_QUALIFIER
~basic_state_saver	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER basic_state_saver<CTy, CTr>::~basic_state_saver()$/;"	f	class:glm::io::basic_state_saver	typeref:typename:GLM_FUNC_QUALIFIER
